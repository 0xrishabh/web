from haystack import indexes

from .models import UserDirectory

class UserDirectoryIndex(indexes.SearchIndex, indexes.Indexable):
    text = indexes.CharField(document=True, use_template=True)
    profile_id = indexes.CharField(null=True,model_attr='profile_id')
    join_date = indexes.CharField(null=True,model_attr='join_date')
    github_created_at = indexes.CharField(null=True,model_attr='github_created_at')
    first_name = indexes.CharField(null=True,model_attr='first_name')
    last_name = indexes.CharField(null=True,model_attr='last_name')
    email = indexes.CharField(null=True,model_attr='email')
    handle = indexes.CharField(null=True,model_attr='handle')
    sms_verification = indexes.BooleanField(null=True,model_attr='sms_verification',faceted=True)
    persona = indexes.CharField(null=True,model_attr='persona',faceted=True)
    rank_coder = indexes.CharField(null=True,model_attr='rank_coder',faceted=True)
    num_hacks_joined = indexes.CharField(null=True,model_attr='num_hacks_joined',faceted=True)
    which_hacks_joined = indexes.MultiValueField(null=True,model_attr='which_hacks_joined',faceted=True)
    hack_work_starts = indexes.CharField(null=True,model_attr='hack_work_starts',faceted=True)
    hack_work_submits = indexes.CharField(null=True,model_attr='hack_work_submits',faceted=True)
    hack_work_start_orgs = indexes.CharField(null=True,model_attr='hack_work_start_orgs',faceted=True)
    hack_work_submit_orgs = indexes.CharField(null=True,model_attr='hack_work_submit_orgs',faceted=True)
    bounty_work_starts = indexes.CharField(null=True,model_attr='bounty_work_starts',faceted=True)
    bounty_work_submits = indexes.CharField(null=True,model_attr='bounty_work_submits',faceted=True)
    hack_started_feature = indexes.CharField(null=True,model_attr='hack_started_feature',faceted=True)
    hack_started_code_review = indexes.CharField(null=True,model_attr='hack_started_code_review',faceted=True)
    hack_started_security = indexes.CharField(null=True,model_attr='hack_started_security',faceted=True)
    hack_started_design = indexes.CharField(null=True,model_attr='hack_started_design',faceted=True)
    hack_started_documentation = indexes.CharField(null=True,model_attr='hack_started_documentation',faceted=True)
    hack_started_bug = indexes.CharField(null=True,model_attr='hack_started_bug',faceted=True)
    hack_started_other = indexes.CharField(null=True,model_attr='hack_started_other',faceted=True)
    hack_started_improvement = indexes.CharField(null=True,model_attr='hack_started_improvement',faceted=True)
    started_feature = indexes.CharField(null=True,model_attr='started_feature',faceted=True)
    started_code_review = indexes.CharField(null=True,model_attr='started_code_review',faceted=True)
    started_security = indexes.CharField(null=True,model_attr='started_security',faceted=True)
    started_design = indexes.CharField(null=True,model_attr='started_design',faceted=True)
    started_documentation = indexes.CharField(null=True,model_attr='started_documentation',faceted=True)
    started_bug = indexes.CharField(null=True,model_attr='started_bug',faceted=True)
    started_other = indexes.CharField(null=True,model_attr='started_other',faceted=True)
    started_improvement = indexes.CharField(null=True,model_attr='started_improvement',faceted=True)
    submitted_feature = indexes.CharField(null=True,model_attr='submitted_feature',faceted=True)
    submitted_code_review = indexes.CharField(null=True,model_attr='submitted_code_review',faceted=True)
    submitted_security = indexes.CharField(null=True,model_attr='submitted_security',faceted=True)
    submitted_design = indexes.CharField(null=True,model_attr='submitted_design',faceted=True)
    submitted_documentation = indexes.CharField(null=True,model_attr='submitted_documentation',faceted=True)
    submitted_bug = indexes.CharField(null=True,model_attr='submitted_bug',faceted=True)
    submitted_other = indexes.CharField(null=True,model_attr='submitted_other',faceted=True)
    submitted_improvement = indexes.CharField(null=True,model_attr='submitted_improvement',faceted=True)
    bounty_earnings = indexes.CharField(null=True,model_attr='bounty_earnings',faceted=True)
    bounty_work_start_orgs = indexes.CharField(null=True,model_attr='bounty_work_start_orgs',faceted=True)
    bounty_work_submit_orgs = indexes.CharField(null=True,model_attr='bounty_work_submit_orgs',faceted=True)
    kudos_sends = indexes.CharField(null=True,model_attr='kudos_sends',faceted=True)
    kudos_receives = indexes.CharField(null=True,model_attr='kudos_receives',faceted=True)
    hack_winner_kudos_received = indexes.CharField(null=True,model_attr='hack_winner_kudos_received',faceted=True)
    grants_opened = indexes.CharField(null=True,model_attr='grants_opened',faceted=True)
    grants_contributed = indexes.CharField(null=True,model_attr='grants_contributed',faceted=True)
    grant_contributions = indexes.FloatField(null=True,model_attr='grant_contributions',faceted=True)
    grant_contribution_amount = indexes.FloatField(null=True,model_attr='grant_contribution_amount',faceted=True)
    num_actions = indexes.CharField(null=True,model_attr='num_actions',faceted=True)
    action_points = indexes.FloatField(null=True,model_attr='action_points',faceted=True)
    avg_points_per_action = indexes.FloatField(null=True,model_attr='avg_points_per_action',faceted=True)
    last_action_on = indexes.CharField(null=True,model_attr='last_action_on')
    keywords = indexes.MultiValueField(null=True,model_attr='keywords',faceted=True)
    activity_level = indexes.CharField(null=True,model_attr='activity_level',faceted=True)
    reliability = indexes.CharField(null=True,model_attr='reliability',faceted=True)
    average_rating = indexes.CharField(null=True,model_attr='average_rating',faceted=True)
    longest_streak = indexes.CharField(null=True,model_attr='longest_streak',faceted=True)
    earnings_count = indexes.CharField(null=True,model_attr='earnings_count',faceted=True)
    follower_count = indexes.CharField(null=True,model_attr='follower_count',faceted=True)
    following_count = indexes.CharField(null=True,model_attr='following_count',faceted=True)
    num_repeated_relationships = indexes.CharField(null=True,model_attr='num_repeated_relationships',faceted=True)
    verification_status = indexes.CharField(null=True,model_attr='verification_status',faceted=True)

    # We add this for autocomplete.
    handle_auto = indexes.EdgeNgramField(model_attr='handle')
    keywords_auto = indexes.EdgeNgramField(model_attr='keywords')
    first_name_auto = indexes.EdgeNgramField(null=True,model_attr='first_name')
    last_name_auto = indexes.EdgeNgramField(null=True,model_attr='last_name')
    persona_auto = indexes.EdgeNgramField(null=True,model_attr='persona')

    def get_model(self):
        return UserDirectory

    def index_queryset(self, using=None):
        """Used when the entire index for model is updated."""
        return self.get_model().objects.all()
