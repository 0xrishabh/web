{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Gitcoin Gitcoin Grows Open Source. Learn more at https://gitcoin.co web repo This is the website that is live at gitcoin.co Documentation https://docs.gitcoin.co How to interact with this repo Table of Contents Gitcoin web repo How to interact with this repo On Github On Gitcoin What Developing HTTPS API Running Locally Trying out Gitcoin Posting your first issue Integrating Gitcoin Integrating the 'available work widget' on your repo. Adding GitcoinBot to your repo Adding your token to Gitcoin Legal License On Github Star and watch this github repository to stay up to date, we're pushing new code several times per week! Check out the CHANGELOG for details about recent changes to this repository. Also, want to become a contributor ? Checkout our guidelines & styleguide . check out the gitcoinco organization-wide repo . check out the open issues list, especially the discussion label and easy-pickings . On Gitcoin Check out the available open issues on Gitcoin . What Functionally, the app has several key features: Smart Contracts -- Where funded issues are stored and indexed. Brochureware -- Describes the project. Funded Issue Explorer -- A searchable index of all of the work available in the system. Funded Issue Submission / Acceptance flow -- Interface between the application and web3. API - the HTTPS API Bot - the GitcoinBot More about how/why to interact with web3 here . Technically, the system is architected: Web3 The main source of truth for the system is the Ethereum blockchain. Check out the smart contracts . Web2 This part of the app is built with Python, Django, Postgres, and a handful of other tools that are common in the web2 ecosystem. Web 3 Bridge This is the bridge between web3 and the rest of the application. Mostly built in javascript(web3js) and python(web3py). Brochureware Just a nice little landing page telling folks what the Gitcoin project is. Developing HTTPS API For more information on the HTTPS API, please view the api README Running locally With Docker (Recommended) For more information on running the app locally, please view the documentation for running gitcoinco/web with Docker Without Docker For more information on running the app locally, please view the documentation for running gitcoinco/web without Docker Overriding Application Defaults For more information on overriding the local dev environment configuration defaults, please view the environment variables documentation Trying out Gitcoin Posting your first issue If you have some work on your Github Issues board that you don't have time (or skills) to do. are dependant upon an upstream repo for something, and you'd like to incentivize them to work onit. try posting a funded issue at https://gitcoin.co/new . Integrating Gitcoin Integrating the 'available work widget' on your repo. This widget will help you advertise that you support Gitcoin bounties, so that your community knows the best place to contribute. Check out the widget documentation to learn how Adding GitcoinBot to your repo Gitcoinbot will allow you to add issues straight from github. Check out the gitcoinbot readme to learn how Adding your token to Gitcoin Have an ERC20 compatible token that you'ud like to add support for? Great! Submit this form to submit it to the system High Level flows of a Bounty This is the high level flow of a bounty on Gitcoin: Chain of Custody Bounty Funder's Wallet StandardBounties Smart Contract deployed at 0x2af47a65da8cd66729b4209c22017d6a5c2d2400 (Submission Made) (Submission Accepted) Recipient's Wallet Anywhere between 2 and 4 above, Funder may withdraw their funds via 'Cancel Bounty' function for any reason. We may introduce Arbitration via Delphi at some point in the future. Until then, we are lucky that Github users are very protective of their reputation, and therefore very kind to each other, and disputes have not generally arisen. of a Tip Note: Crowdfunded bounties + bulk payouts are secured by Tips (at least until Standard Bounties 2.0 is released). This is the high level flow of a bounty on Gitcoin: Legal ''' Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. ''' License GNU AFFERO GENERAL PUBLIC LICENSE","title":"Home"},{"location":"#gitcoin","text":"Gitcoin Grows Open Source. Learn more at https://gitcoin.co","title":"Gitcoin"},{"location":"#web-repo","text":"This is the website that is live at gitcoin.co","title":"web repo"},{"location":"#documentation","text":"https://docs.gitcoin.co","title":"Documentation"},{"location":"#how-to-interact-with-this-repo","text":"","title":"How to interact with this repo"},{"location":"#table-of-contents","text":"Gitcoin web repo How to interact with this repo On Github On Gitcoin What Developing HTTPS API Running Locally Trying out Gitcoin Posting your first issue Integrating Gitcoin Integrating the 'available work widget' on your repo. Adding GitcoinBot to your repo Adding your token to Gitcoin Legal License","title":"Table of Contents"},{"location":"#on-github","text":"Star and watch this github repository to stay up to date, we're pushing new code several times per week! Check out the CHANGELOG for details about recent changes to this repository. Also, want to become a contributor ? Checkout our guidelines & styleguide . check out the gitcoinco organization-wide repo . check out the open issues list, especially the discussion label and easy-pickings .","title":"On Github"},{"location":"#on-gitcoin","text":"Check out the available open issues on Gitcoin .","title":"On Gitcoin"},{"location":"#what","text":"Functionally, the app has several key features: Smart Contracts -- Where funded issues are stored and indexed. Brochureware -- Describes the project. Funded Issue Explorer -- A searchable index of all of the work available in the system. Funded Issue Submission / Acceptance flow -- Interface between the application and web3. API - the HTTPS API Bot - the GitcoinBot More about how/why to interact with web3 here . Technically, the system is architected: Web3 The main source of truth for the system is the Ethereum blockchain. Check out the smart contracts . Web2 This part of the app is built with Python, Django, Postgres, and a handful of other tools that are common in the web2 ecosystem. Web 3 Bridge This is the bridge between web3 and the rest of the application. Mostly built in javascript(web3js) and python(web3py). Brochureware Just a nice little landing page telling folks what the Gitcoin project is.","title":"What"},{"location":"#developing","text":"","title":"Developing"},{"location":"#https-api","text":"For more information on the HTTPS API, please view the api README","title":"HTTPS API"},{"location":"#running-locally","text":"","title":"Running locally"},{"location":"#with-docker-recommended","text":"For more information on running the app locally, please view the documentation for running gitcoinco/web with Docker","title":"With Docker (Recommended)"},{"location":"#without-docker","text":"For more information on running the app locally, please view the documentation for running gitcoinco/web without Docker","title":"Without Docker"},{"location":"#overriding-application-defaults","text":"For more information on overriding the local dev environment configuration defaults, please view the environment variables documentation","title":"Overriding Application Defaults"},{"location":"#trying-out-gitcoin","text":"","title":"Trying out Gitcoin"},{"location":"#posting-your-first-issue","text":"If you have some work on your Github Issues board that you don't have time (or skills) to do. are dependant upon an upstream repo for something, and you'd like to incentivize them to work onit. try posting a funded issue at https://gitcoin.co/new .","title":"Posting your first issue"},{"location":"#integrating-gitcoin","text":"","title":"Integrating Gitcoin"},{"location":"#integrating-the-available-work-widget-on-your-repo","text":"This widget will help you advertise that you support Gitcoin bounties, so that your community knows the best place to contribute. Check out the widget documentation to learn how","title":"Integrating the 'available work widget' on your repo."},{"location":"#adding-gitcoinbot-to-your-repo","text":"Gitcoinbot will allow you to add issues straight from github. Check out the gitcoinbot readme to learn how","title":"Adding GitcoinBot to your repo"},{"location":"#adding-your-token-to-gitcoin","text":"Have an ERC20 compatible token that you'ud like to add support for? Great! Submit this form to submit it to the system","title":"Adding your token to Gitcoin"},{"location":"#high-level-flows","text":"","title":"High Level flows"},{"location":"#of-a-bounty","text":"This is the high level flow of a bounty on Gitcoin: Chain of Custody Bounty Funder's Wallet StandardBounties Smart Contract deployed at 0x2af47a65da8cd66729b4209c22017d6a5c2d2400 (Submission Made) (Submission Accepted) Recipient's Wallet Anywhere between 2 and 4 above, Funder may withdraw their funds via 'Cancel Bounty' function for any reason. We may introduce Arbitration via Delphi at some point in the future. Until then, we are lucky that Github users are very protective of their reputation, and therefore very kind to each other, and disputes have not generally arisen.","title":"of a Bounty"},{"location":"#of-a-tip","text":"Note: Crowdfunded bounties + bulk payouts are secured by Tips (at least until Standard Bounties 2.0 is released). This is the high level flow of a bounty on Gitcoin:","title":"of a Tip"},{"location":"#legal","text":"''' Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. '''","title":"Legal"},{"location":"#license","text":"GNU AFFERO GENERAL PUBLIC LICENSE","title":"License"},{"location":"mk_advanced/","text":"Advanced Usage Performance and Profiling You can profile functions locally by enabling Django Silk by setting the environment variable: ENABLE_SILK to on in your .env file. If your local environment is already running, you will need to restart the web application via: docker-compose restart web Profiling a method Once enabled, you may use silk by decorating methods with @silk_profile . For example: from silk.profiling.profiler import silk_profile @silk_profile(name='View About') def about(request): context = { 'active': 'about', 'title': 'About', } return TemplateResponse(request, 'about.html', context) Viewing Profiling Results You may view the profiling results by visiting: http://localhost:8000/silk Additional Help Silk Documentation Silk Github Gitcoin Environment Variable Documentation","title":"Advanced"},{"location":"mk_advanced/#advanced-usage","text":"","title":"Advanced Usage"},{"location":"mk_advanced/#performance-and-profiling","text":"You can profile functions locally by enabling Django Silk by setting the environment variable: ENABLE_SILK to on in your .env file. If your local environment is already running, you will need to restart the web application via: docker-compose restart web","title":"Performance and Profiling"},{"location":"mk_advanced/#profiling-a-method","text":"Once enabled, you may use silk by decorating methods with @silk_profile . For example: from silk.profiling.profiler import silk_profile @silk_profile(name='View About') def about(request): context = { 'active': 'about', 'title': 'About', } return TemplateResponse(request, 'about.html', context)","title":"Profiling a method"},{"location":"mk_advanced/#viewing-profiling-results","text":"You may view the profiling results by visiting: http://localhost:8000/silk","title":"Viewing Profiling Results"},{"location":"mk_advanced/#additional-help","text":"Silk Documentation Silk Github Gitcoin Environment Variable Documentation","title":"Additional Help"},{"location":"mk_alternative_setup/","text":"Running Locally without Docker *Note: This setup method is not recommended. To ensure a consistent environment, please check out the Docker Setup Guide . brew install libmaxminddb automake pkg-config libtool libffi gmp python openssl git clone https://github.com/gitcoinco/web.git cd web/app cp app/local.env app/.env You will need to edit the app/.env file with your local environment variables. Look for config items that are marked # required . Configure Integrations (recommended) If you plan on using the Github integration, please read the third party integration guide . Static Asset Handling (optional) If you're testing in a staging or production style environment behind a CDN, pass the DJANGO_STATIC_HOST environment variable to your django web instance specifying the CDN URL. For example: DJANGO_STATIC_HOST='https://gitcoin.co Setup Database PostgreSQL is the database used by this application. Here are some instructions for installing PostgreSQL on various operating systems. OSX Windows Ubuntu Once you have Postgres installed and running on your system, enter into a Postgres session. psql Create the database and a new privileged user. CREATE DATABASE gitcoin; CREATE USER gitcoin_user WITH PASSWORD 'password'; GRANT ALL PRIVILEGES ON DATABASE gitcoin TO gitcoin_user; Exit Postgres session \\q Update .env with the connection details. DATABASE_URL=psql://gitcoin_user:password@localhost:5432/postgres Startup server virtualenv gcoin source gcoin/bin/activate pip install -r requirements/test.txt ./manage.py migrate ./manage.py createcachetable ./manage.py get_prices ./manage.py runserver 0.0.0.0:8000 Navigate to http://localhost:8000/ . Create Django Admin ./manage.py createsuperuser Optional: Import bounty data from web3 to your database This can be useful if you'd like data to test with: ./manage.py sync_geth or equivalently: ./manage.py sync_geth rinkeby 402 99999999999","title":"Alternative Setup"},{"location":"mk_alternative_setup/#running-locally-without-docker","text":"*Note: This setup method is not recommended. To ensure a consistent environment, please check out the Docker Setup Guide . brew install libmaxminddb automake pkg-config libtool libffi gmp python openssl git clone https://github.com/gitcoinco/web.git cd web/app cp app/local.env app/.env You will need to edit the app/.env file with your local environment variables. Look for config items that are marked # required .","title":"Running Locally without Docker"},{"location":"mk_alternative_setup/#configure-integrations-recommended","text":"If you plan on using the Github integration, please read the third party integration guide .","title":"Configure Integrations (recommended)"},{"location":"mk_alternative_setup/#static-asset-handling-optional","text":"If you're testing in a staging or production style environment behind a CDN, pass the DJANGO_STATIC_HOST environment variable to your django web instance specifying the CDN URL. For example: DJANGO_STATIC_HOST='https://gitcoin.co","title":"Static Asset Handling (optional)"},{"location":"mk_alternative_setup/#setup-database","text":"PostgreSQL is the database used by this application. Here are some instructions for installing PostgreSQL on various operating systems. OSX Windows Ubuntu Once you have Postgres installed and running on your system, enter into a Postgres session. psql Create the database and a new privileged user. CREATE DATABASE gitcoin; CREATE USER gitcoin_user WITH PASSWORD 'password'; GRANT ALL PRIVILEGES ON DATABASE gitcoin TO gitcoin_user; Exit Postgres session \\q Update .env with the connection details. DATABASE_URL=psql://gitcoin_user:password@localhost:5432/postgres","title":"Setup Database"},{"location":"mk_alternative_setup/#startup-server","text":"virtualenv gcoin source gcoin/bin/activate pip install -r requirements/test.txt ./manage.py migrate ./manage.py createcachetable ./manage.py get_prices ./manage.py runserver 0.0.0.0:8000 Navigate to http://localhost:8000/ .","title":"Startup server"},{"location":"mk_alternative_setup/#create-django-admin","text":"./manage.py createsuperuser","title":"Create Django Admin"},{"location":"mk_alternative_setup/#optional-import-bounty-data-from-web3-to-your-database","text":"This can be useful if you'd like data to test with: ./manage.py sync_geth or equivalently: ./manage.py sync_geth rinkeby 402 99999999999","title":"Optional: Import bounty data from web3 to your database"},{"location":"mk_changelog/","text":"Change Log HEAD Full Changelog Implemented enhancements: Approval Required: Make it Clear Who is Actually Working #2100 Move Moderator Controls out of main Work Area #2045 Optimize Activity query on index page #2034 Gitcoin rain Animation Performance #2029 Replace sync_gas_prices web scraping with json #1921 gitcoinbot tune up #596 As a user, I don't want to see github comment blocks in the bounty detail/description #538 Add Notes Field When Funding an Issue #475 SVG and PNG conversions and handling for Avatars #2106 ( mbeacom ) dashboard: enable deep link of search #2062 ( thelostone-mc ) Change Bounty Details #1968 ( pinkiebell ) Confirming Auto-translation #1916 ( nanspro ) Fixed bugs: Bounty Crowdfunding USD Inaccurate #2179 Funder Clicked Kill Bounty on Accident #2144 Text unreadable due to low contrast with background on subscription form #2141 how it works page QA #2139 Widget errors #2063 bug - cookie header doesnt work with other languages #2052 Contributor Landing Page CSS Bug #2041 Clicking Stop Work Did Not Stop Work #2032 Bad USDT conversion data #2015 Funder Unable to Approve Worker #1985 404s on gitcoin profiles #1952 Better State Management: \"No result found\" and \"Results\" are getting displayed at the same time #1938 Small issue with display #1934 AttributeError: 'list' object has no attribute 'split' #1919 Debug and resolve preferred_payout_address irregularities #1902 ValueError: The API key that you have entered is not valid, did you enter a username by mistake? #1898 Stop Work displays on old Start Work activity feed entries #1854 Bug: Clicking in the form should clear the plan template #1852 Incorrect Funding Time Period Shown on Issue Details #1774 == BUG LIST - JULY 2018 == #1671 css: remove overflow hidden #1616 Make Button Updates to Avatar Builder #1567 Show Just 1 Alert Banner for ERC20 Token #1566 avatar bug -- wrong eye color #1543 Avatar Builder Bugs #1523 BUG Personal Information Display on Unselected Option #1387 This bounty was 'killed' but gitcoinbot commented on the thread saying it was approved / accepted. #703 There is something wrong with links visibility in Gitcoin announcements mails. See screenshot. #702 crowdfunded: bug fix #2180 ( thelostone-mc ) Add overflow in header if minihero not present #2080 ( SaptakS ) api: fixed offset param in explorer #2006 ( thelostone-mc ) Fix assemble_leaderboards to catch missing all_ cases #1851 ( mbeacom ) Closed issues: \"Submit Work\" javascript error #2182 bug - quarterly roundup is broken #2151 Make Cancel Bounty More Explicit #2145 Update Cookie Banner with Shorter Text #2122 Submitting Work Twice #2118 bug - avatar builder does not register new assetes #2102 AttributeError: 'NoneType' object has no attribute 'interested' #2094 As a contributor, I don't want to have to do math to understand the total amount of a funded bounty that has additional crowd funding. #2072 ValueError: too many values to unpack (expected 2) #2066 As a developer on Gitcoin developing for Gitcoin, I would like some direction on how to use the Rinkeby network to test out Gitcoin #2065 Update Issue Expiring Email #2061 as a user who is bountying on behalf of my company, i want an invoice for a bounty, so i can expense it #2057 Gitcoin Requests (v0: Fork of Gitcoin Faucet) #2036 TypeError: unsupported operand type(s) for +: 'float' and 'NoneType' #2031 issue explorer keyword bug #2011 Add Ability to Select a Contributor via autocomplete to Tip #2001 Submitted \"start work\" info-comment did not show up in the connected GitHub issue. #1999 Workers who are not approved to work on a task should not be warned for abandonment, the 3-day Gitcoin bot nudge should start from the point of approval, not the point of application #1996 as a bounty hunter, I want to be reminded to submit my work on Gitcoin once the ticket is closed on Github so I can get paid out for my work #1990 Multi-Party Payout Recipients Not Showing in 'Work Done' #1983 Auto-Approvals: No Update of Gitcoin Activity (in Issue Details) #1981 test github issue for demo to token foundry #1979 invalid literal for int() with base 10: '926)' #1972 No values in \"Denomination\" input #1970 Make it Easy for Funders to Reserve an Issue For or Tag a Contributor #1956 August Cut Off ======================= #1955 Make it Clear for Funders - How to Payout #1950 RelatedObjectDoesNotExist: User has no profile. #1949 Add Approve Worker on Issue Details #1947 User Receivin Twin Emails #1946 Make Clear on Funder Form How Syncing and Editing Works #1943 UX Add Project Type + Approval Settings to Issue Details #1928 Create \"My Grants\" Page - Design #1909 Add Project Length to the Issue Details Summary #1888 Infrastructure: Caching and response time optimizations #1881 Infrastructure: healhchecks and scalability #1880 Funder Dashboard #1878 Plan for Contributor Dashboard #1877 Funder Habit Forming #1872 Confirm Auto-Translation of Gitcoin to Japanese #1863 Landing Page Update #1861 Confirm Auto-Translation of Gitcoin to Hindi #1844 bug - https://gitcoin.co/get 502's out #1842 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1835 crowdfunding v2 #1832 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1815 How It Works V2 #1808 View By Orgs V1 #1798 crowdfunding v2 #1797 Add Deep Link to Explorer Search #1791 BadFunctionCallOutput: Could not decode contract function call getBountyData return data b'' for output_types ['string'] #1777 BadFunctionCallOutput: Could not decode contract function call getFulfillment return data b'' for output_types ['bool', 'address', 'string'] #1754 What is the data flow? Do you have a diagram? Is data written to IPFS or postgres first? And what is initiator of action? #1710 Have the Staketree contracts been audited? #1709 Do the Staketree contracts need any tuning? Are we going to use contracts that are already deployed or deploy our own instances? #1708 Should there be a view for a patron to check on the status of their grant subscription(s)? #1707 Should there be a view for a developer to check on the status of their grant(s)? /grants/yourgrants, /grants/grantstatus #1706 Ensure Staketree contracts have all required functionality, linting, and tests #1705 Write tests for newly implemented smart contracts #1704 Write tests for newly implemented backend #1703 Write tests for newly implemented frontend #1702 implement any needed routes #1701 Ensure data is stored correctly in each location. #1700 Figure out data flow and ensure actions are performed on blockchain, IPFS and postgres in correct order. #1699 Implement any needed functions #1698 Check web3 functionality. Is it implemented in Kenneth's code? Are the contracts being instantiated and made visible? #1697 Instantiate contracts and point functions correctly #1696 BUILD Action Plan Example for Start Work Dialog #1674 Work Schemes - How it Works Break Down #1670 BadFunctionCallOutput: Could not decode contract function call getBountyToken return data b'' for output_types ['address'] #1626 Individual Market V1 #1623 BadFunctionCallOutput: Could not decode contract function call getBountyArbiter return data b'' for output_types ['address'] #1612 BadFunctionCallOutput: Could not decode contract function call getNumFulfillments return data b'' for output_types ['uint256'] #1608 As a user on Contributor Landing Page v2, I want programming language specific terms, so I can see bounties / opportunities relative to my skillset #1599 Update Fund Issue Icon #1568 Remove 'Dibs' from Gitcoin Bot comment on Github #1535 CODE - As a user, I want gitcoin.co/vision to exist, so I can understand the core team's vision. #1510 The BIG Gitcoin Grants (powered by Staketree) Bounty #1469 DESIGN - As a user, I want gitcoin.co/is_not_a_shitcoin to exist, so I can understand why Gitcoin did not do a token / token sale. #1443 As a funder, id like the ability to extend the expiration date of a bounty, so i can keep it open #1427 BUG -- Profiles with no info on them look funny. #1363 AuthStateMissing: Session value state missing. #1290 As a user, I want to be able to pledge to an already-pledged issue #1287 FieldError: Cannot resolve keyword 'github_issue_number' into field. Choices are: _val_usd_db, accepted, balance, bounty_owner_address, bounty_owner_email, bounty_owner_github_username, bounty_owner_name, bounty_type, canceled_on, contract_address, create #1228 Integrate with the Elastic APM library #1208 Add Elastic APM to k8s stack #1207 USABILITY/PERFORMANCE EPIC #1140 RESEARCH & DATA EPIC #1138 BLOCKCHAIN PROJECTS EPIC #1137 FUNDER WORKFLOW EPIC #1136 UNIQUE GITCOINER EPIC #1134 INFRASTRUCTURE EPIC #1133 COMMUNITY IDEAS EPIC #1132 CONTRIBUTOR WORKFLOW EPIC #1131 MARKETING/ BD EPIC #1130 ONBOARDING EPIC #1128 Fund Bounty With Multiple Tokens #1100 what languages should we support next? #970 I've lost track of my bounty tip #968 Relationship Between Toolbox Items and Core Product #851 EthOS -- a SolidCoin Experiment #843 Duplicate \"Funds Paid\" email being sent #837 test out autotranslate #814 Grants Landing page #718 Translate the webapp to other languages #643 Expired Status == Open Status? #637 How Does This Work? #633 when a tip is redeemed, gitcoinbot should comment back on the thread and let everyone know #597 New Navigation Structure Research #587 Mobile Audit of Gitcoin.co #561 as a new user, how do i update my github username on the funding/new page? #542 galaxy s8 chrome mobile display issues #496 as a user, i want to be clear which bounty fields are going to be public, so i can manage my privacy #451 Use Gitcoin Brand Template on Terms Page #435 Relevant information needed to understand gas price #431 User feedback: claiming of issues #403 (unknown): uncaught exception: not supported #324 Merged pull requests: Roundup email updates for 7SEP2018 #2181 ( mbeacom ) svgo: compress img #2172 ( thelostone-mc ) Refactor issue expiration email #2162 ( SaptakS ) migrates from current_bounty=True to .current() because the latter is\u2026 #2161 ( owocki ) Add middleware to disable autodetect lang by header #2157 ( mbeacom ) Hide Personal Information on Unselected Option #2156 ( rahulpat ) avatar: ui fixes #2154 ( thelostone-mc ) Update title to issue in slack notifications #2153 ( arun1595 ) bounty: changes cancel button to red #2146 ( thelostone-mc ) css: fix missing background color #2142 ( thelostone-mc ) review: added feedback #2140 ( thelostone-mc ) bot : remove dibs text from message #2138 ( thelostone-mc ) newsletter 8/31 #2136 ( vs77bb ) Fix minor grammatical issue #2135 ( arun1595 ) Cleanup email templates #2133 ( mbeacom ) Isolate moderator and admin actions for ease of usability #2132 ( arun1595 ) show accept/reject bounty in permissioned bounty #2131 ( thelostone-mc ) landing: reduce size of title on mobile #2128 ( thelostone-mc ) Adding icons to tree section #2127 ( nanspro ) Update text for cookielaw #2124 ( SaptakS ) Fixes version of eth-utils and web3 to make compatible with other pac\u2026 (Ended up fixing eth-abi and keeping eth-utils and web3 to the same version to avoid breaking) #2123 ( SaptakS ) update : how_it_works page #2121 ( thelostone-mc ) bounty: enable submit only once per user #2119 ( thelostone-mc ) small tip tweaks #2111 ( owocki ) bounty: crowdfunded bounties #2109 ( thelostone-mc ) Add user search autocomplete #2108 ( octavioamu ) eslint: fix #2107 ( thelostone-mc ) migrates from current_bounty=True to .current() because the latter is more exhaustive #2105 ( owocki ) Adds some new eye styles. Male & female versions! #2099 ( saricden ) Adds codefund banner in the issue explorer and issue details page #2095 ( SaptakS ) newsletter 8/24 #2093 ( vs77bb ) Add base elastic apm integration #2092 ( mbeacom ) warns user if they try to bounty something but dont have enough tokens #2086 ( owocki ) Add (Issue is closed) to the 'View on Github' button if is_issue_closed. #2081 ( pinkiebell ) eslint : lint fixes #2079 ( thelostone-mc ) Update static references to replace hardcoded graph and gas static references #2076 ( mbeacom ) shared.js: Add {show,hide}BusyOverlay #2073 ( pinkiebell ) Fixes navbars with dash class, the narrow navbars #2070 ( SaptakS ) Fix widget loop #2068 ( octavioamu ) fix widget errors #2064 ( octavioamu ) Add base healthchecks and LB 200 endpoint #2060 ( mbeacom ) invoices #2059 ( owocki ) dashboard: remove save search link #2058 ( thelostone-mc ) Gitcoin Bounty Requests V0 #2056 ( pinkiebell ) refactor: remove save search #2051 ( thelostone-mc ) Rain #2049 ( octavioamu ) Use S3 to serve static #2048 ( mbeacom ) Add shirtsweater avatar asset #2047 ( ajayns ) Multi-Party Payout Recipients Not Showing in 'Work Done' # #2040 ( owocki ) new leaderboard items #2035 ( owocki ) code clean up #2033 ( thelostone-mc ) refactor: remove unneeded html tag #2030 ( thelostone-mc ) deprecates old tip receive flow #2027 ( owocki ) Create grants branch on gitcoinco/web repo #2018 ( captnseagraves ) newsletter 8/17 #2017 ( vs77bb ) pages/dashboard: Fix issue explorer keyword bug #2012 ( pinkiebell ) Remove FullStory #2009 ( mbeacom ) Fixes text and alignment of no-issue-banner #2007 ( SaptakS ) bounty: enable accept / reject worker for owner #2005 ( thelostone-mc ) Auto-Translation to Japanese #1863 #2003 ( aashutoshrathi ) Rename Chinese locale file to correct format. #2002 ( ziyangkoo ) css: fixes #1998 ( thelostone-mc ) start work : update placeholder #1994 ( thelostone-mc ) Newsletter 8/10 #1984 ( vs77bb ) gas guzzlers in gas station #1980 ( owocki ) Upgrade cryptography python package to 2.3 - Security #1978 ( mbeacom ) img: removed unused images #1975 ( thelostone-mc ) replaced misspelled 'deonomination' with 'denomination' #1974 ( zevaverbach ) Strip characters from stdbounties_id and check isdigit #1973 ( mbeacom ) uri : cleanup #1971 ( thelostone-mc ) Redis based caching #1969 ( mbeacom ) workaround for ipfs hashes not existing #1965 ( owocki ) new bounty : updated UI #1963 ( thelostone-mc ) fix #1921 replace sync_gas_prices from web scraping to json #1959 ( PumpkingWok ) what_is_gitcoin : revert to old design #1957 ( thelostone-mc ) bounty: restructure pages #1948 ( thelostone-mc ) explorer: ensure results from latest api call are served to the user #1941 ( thelostone-mc ) hack: trailing slash for profile #1937 ( thelostone-mc ) Fix #1934 - Resolve cancelled funds appearing in profile total #1935 ( mbeacom ) allow trailing slsah for profile #1931 ( thelostone-mc ) livestream 8/3 #1930 ( vs77bb ) Improve tip slack notification #1929 ( arun1595 ) lander video switcharooooooooooooO #1927 ( owocki ) sets the bounties limit if not specified, for performance reasons #1925 ( owocki ) sync geth stopgap fix #1924 ( owocki ) Switching tree section on landing page #1923 ( nanspro ) Display project length in issue details page #1922 ( arun1595 ) shared.js/mutate_interest: Show a generic message on network errors. #1918 ( pinkiebell ) Upgrade django to 2.1, modify field defaults, and address deprecations #1915 ( mbeacom ) as a user, i want documentation about chain of custody, so that i know my funds are secure #1913 ( owocki ) dashboard: remove tech stack filter #1911 ( thelostone-mc ) not_a_token page #1906 ( octavioamu ) Moderators v1 #1903 ( mbeacom ) Update the presskit copy #1900 ( mbeacom ) Restructure #1897 ( thelostone-mc ) sends an email to funders who have been inactive for 30 days, asking if they have any feedback #1894 ( owocki ) Split create_new_bounty kwargs building and check if once #1892 ( mbeacom ) change name of missing image #1891 ( octavioamu ) refactor PR #1887 ( thelostone-mc ) as a user, i want receive tip email copy to be clear, so i know where to find my ETH #1886 ( owocki ) added branding style to terms page #1869 ( evgeniuz ) css: minor refactor #1862 ( thelostone-mc ) expiration start work day 0 #1857 ( owocki ) Minor tweaks to action plan textarea #1856 ( arun1595 ) fix it twice for 'why cant i payout this issue?' question for funders #1853 ( owocki ) css: display filter tags + sort on mobile #1849 ( thelostone-mc ) Sentry integration #1846 ( mbeacom ) Visually improves the readonly fields #1845 ( SaptakS ) leaderboard on weekly roundup #1841 ( owocki ) Extend expiration of bounties #1838 ( SaptakS ) contributor page: css updates #1833 ( thelostone-mc ) adds recent activity on funder landing page so ppl can see how active the site is #1831 ( owocki ) Rework 'Start Work Dialog' and gitcoinbot message structure #1781 ( pinkiebell ) [WIP] UI Inventory #1755 ( pinkiebell ) Crowdfunding of Bounties && New Tips Architecture && Social Sharing #1737 ( owocki ) nav_auth.html: make nav_avatar an \\<a> tag and link it to /profile/. #1690 ( pinkiebell ) Show Just 1 Alert Banner for ERC20 Token #1668 ( pinkiebell ) pre_crowdfund (2018-07-25) Full Changelog Implemented enhancements: Make GitcoinBot Recognize Closed Issues. #1640 Confusing placeholder text for issue URLs #1194 Gitcoin Bot Enhancements #1040 as a user, i want the ability to test slackbot integration so i can know it's working #1004 Links opening in new tab/window open in same target #676 As a user, I want to sort and filter the bounty list by technical stack / keywords #343 Modify issueURL placeholder text to reflect GH issues #1195 ( mbeacom ) Add yapf linting base and lint dataviz app #1169 ( mbeacom ) gitcoinbot: updated language #1150 ( thelostone-mc ) css: fixed comment layout #1073 ( thelostone-mc ) fixes https://github.com/gitcoinco/web/issues/1040 #1043 ( owocki ) drastically improve api read performance #1026 ( owocki ) bounty: unify modal designs #809 ( sethmcleod ) Fixed bugs: StatisticsError: no median for empty data #1809 Too Many Alerts #1792 Gas Price Showing as a Funded Issue? #1773 Title & Descriptions not Displaying in Funder Form #1772 Gitcoin Bot Bounty Value Missing on Github Issue #1771 User Profile and Gitcoin Logo are not clickable #1739 Error Alerts Should Convey a Problem #1692 Button Text Not Legible #1686 Back Button on Contributor Ftux Not Working #1685 White paper page isn't responsive and rendering is off #1641 BUG -- gitcoinbot not commenting on github thread for bountied issues #1627 Uncaught TypeError: Cannot read property 'getBoundingClientRect' of undefined #1603 Dai Value Bug Gitcoin Bot #1592 Disable Editing of Issue Description on Funder Form #1588 bug - issues on accept work page #1580 [Bug] As a funder, I cannot approve a bounty hunter for work. #1537 Avatar Bug on Mobile #1527 Incorrect values (# bounties completed and $ rewarded) in the Leaderboards #1506 Error in the Home link extracted from Github. #1505 TypeError: unsupported operand type(s) for *: 'float' and 'decimal.Decimal' #1503 UnboundLocalError: local variable 'interest' referenced before assignment #1502 Bug: Broken Links in Footer #1435 New footer messsed up on https://gitcoin.co/ios #1430 Gitcoin completion/funding counts on org icons are incorrect #1404 SyntaxError: illegal character #1398 SyntaxError: Unexpected token '>' #1395 ReferenceError: moveWithScroll is not defined #1394 TypeError: Cannot read property 'getItem' of null #1393 BUG Image Not Displaying on Issue Details #1391 BUG Markdown Messed Up on Issue Detials View #1388 Update Soft & Hard Expired #1375 BUG -- Cancelled Bounty on Gitcoin Did Not Return Funds #1367 Require agreement on kill bounty #1358 BUG - Black circle on ENS page #1353 Running sync_geth against Rinkeby results in all unknown schema errors #1334 Visiting Tools continuously makes failed requests #1324 Back button UI is messed up in Receive Tip success page #1313 BUG - profile has inconsistent stats #1293 As an anonymous user, I would like to unsubscribe from email notifications. #1165 Unable to filter for C# #1078 Profile editing fails due to required slack fields #1072 'Stop Work' button appears on someone else's work. #1067 Gitcoinbot work submitted message has weird formatting #1063 can't search by freeform text anymore #1046 Cannot claim bounty on Rinkeby #854 erroneous gitcoinbot comment #733 Gitcoin issue status changed back to Open from Work Started #695 Links opening in new tab/window open in same target #676 add sorting functionality back to the gitcoin explorer #570 users reported receiving each email twice #115 Remove duplicate Tip properties #1810 ( mbeacom ) Fix division by zero error #1805 ( arun1595 ) WIP: Fix record_bounty_activity.. #1660 ( pinkiebell ) Clean up user's personal URL from github #1512 ( arun1595 ) ios: updated css + refactored #1445 ( thelostone-mc ) Update slack CTA link #1415 ( arun1595 ) Clean hashbang from gh urls #1381 ( mbeacom ) Fix font awesome icon classes #1354 ( arun1595 ) Fix feedback icons overlap with input value and center the icons vertically #1349 ( arun1595 ) toolbox: avoid $.get when url is undefined #1325 ( thelostone-mc ) dashboard: results row fix #1307 ( thelostone-mc ) ENS: Ensure 10%+ gas minimum #1303 ( mbeacom ) bug: set width to 100% on magnify #1178 ( thelostone-mc ) bug: added button--primary to back to gitcoin button #1168 ( thelostone-mc ) Closed issues: AttributeError: 'NoneType' object has no attribute 'fulfillments' #1826 AttributeError: 'NoneType' object has no attribute 'fulfillments' #1825 AttributeError: 'NoneType' object has no attribute 'fulfillments' #1824 StatusError: HTTPError: 504 Server Error: GATEWAY_TIMEOUT for url: https://ipfs.gitcoin.co:443/api/v0/cat?stream-channels=true&arg=QmfC7iLEvAwe8xDqk8FmGaoGbB3QGRNL3EYzFUfVkde1vo #1821 AttributeError: 'NoneType' object has no attribute 'fulfillments' #1820 StatusError: HTTPError: 504 Server Error: GATEWAY_TIMEOUT for url: https://ipfs.gitcoin.co:443/api/v0/cat?stream-channels=true&arg=QmNk3CfMScMut3kcFKP7DMCV1y1ZF99D8N3hNZ1bmGqj2T #1819 The sumo popup doesn't trigger for new visitors #1812 ZeroDivisionError: float division by zero #1806 Add autotranslate base for Chinese #1804 Cannot fund issues #1801 Include link to bounty in Gitcoin bot's post #1794 Image alignment is wrong on /bounty/quickstart #1766 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1762 Testing Fund an Issue #1761 BUG - emails to email_logger@gitcoin.co are cheiwng up our sendgrid credits #1760 Bounty on Gas Price Analysis Content - 7/15/2018 #1751 NameError: name 'tokens' is not defined #1748 JSONDecodeError: Expecting ',' delimiter: line 1 column 597 (char 596) #1745 TemplateDoesNotExist: head/v2/images/avatar/head/1-f8d5c2.svg.txt #1744 ValueError: not enough values to unpack (expected 2, got 1) #1743 Bug - gas page is not mobile friendly. #1742 Get project to stable point, rebase current KennethAshley:grants with gitcoin:master #1713 Set up project and run tests to ensure baseline #1712 Determine whether 199 skipped tests is normal or not #1711 CODE - as a marketer, i want gitcoin.co/presskit so I can know Gitcoin's brand guidelines #1683 as a user, i want this module on /about to be clickable, so i can click it. #1682 BUG - Exception when loading /explorer via API on local #1679 Coop Bounty - 1 Start Work Missing #1678 Implement Gitcoin internationalization / i18n support #1675 Bug: Code not visible on website #1667 bug - misaligned css on the acceptance page #1665 dupe activities #1661 Wrong profile in activities / messed up activity log #1659 ZeroDivisionError: float division by zero #1650 Organizations V1 Tech Approach #1643 View Of Hidden Bounties #1636 As a user, I want the cookie popup to not show up until the sumo popup is dismissed, so they don't overlap with each other? #1630 Metamask Locked button not prominent on Navbar #1629 V2 Metamask Connection State #1625 Exception: attempting to create a new bounty (875) when is_greater_than_x_days_old = True #1620 in tip flow, user should be notified if they are on the wrong network #1606 as a user, i want standard bounty tx's to be processed instantly by gitcoin, so i know my tx went through #1605 Contributor Landing Page QA #1594 Dropdowns on the topbar don't close when clicking on another dropdown #1593 IndexError: list index out of range #1565 Build Waiting State #1562 Update Buttons in Account Settings #1561 Updates - Activate DAI #1560 Fund Issue button out of place on mobile #1557 as a user, i want to be prompted to login when creating my avatar so i dont waste time building an avatar and can't save it #1554 Create Profile Flyout #1529 Add Link to Access Avatar Builder #1520 Outstanding Funder Form Updates #1519 Contributor Ftux V1.1 #1516 Put Admin Controls on one line #1511 States \"please review questions\" - but there are no questions #1509 Update Notif-Gitcoin Message Format - Slack #1507 Outstanding avatar issues #1504 Disable Gitcoin Bot Responses #1498 design: new 404 page #1493 travis fails with 'The command \"pytest -p no:ethereum\" exited with 1.' #1492 Change login link hover color on ENS page #1484 Remove Extra Kerning on All Gitcoin Emails #1480 Make Icon on Issue Explorer Circular #1478 DESIGN View by Org on Issue Explorer #1467 Admin Toggle - Clear Comments on Github Issue #1465 Code - Update https://gitcoin.co/mission to show off that we use an open protocol #1463 As a user, I want a beautiful svg animation for the Gitcoin Tree as I scroll down the landing page, so I can be enamoured with the mission to grow Open Source #1462 z-index issue on gitcoin.co/ens #1457 BadFunctionCallOutput: Could not decode contract function call getBountyToken return data b'' for output_types ['address'] #1456 Ratelimited #1455 DESIGN - as a marketer, i want gitcoin.co/presskit so I can know Gitcoin's brand guidelines #1451 As a user, I want a better 404 page for hidden profiles #1436 Bring Discord Bot to Parity with Slack Bot #1434 Funder Feature - Extend My Bounty Time Frame #1429 Gitcoin Bot and Project Status #1425 Uncaught SyntaxError: Unexpected token => #1423 Frontend Coding Advanced Payout Feature #1422 can't run docker-compose up -d --build #1419 Uncaught ReferenceError: Accounts is not defined #1418 Gitcoinbot should not do reminders on contest/cooperative bounties #1409 As an admin I want to triage the Landing Page Conversion Rate, which is way down since the new LP launched. #1408 Gitcoin Landing Page V2.1 #1407 BadFunctionCallOutput: Could not decode contract function call getBountyData return data b'' for output_types ['string'] #1400 As a funder, I'd like to know how many times a developer has started a bounty but not finished it #1390 BUILD Contributor Landing Page #1386 As a funder, I want to allow the crowd to increase contributions to a bounty, so we can crowdfund issues. #1380 As a funder, I want to changeBountyFulfillmentAmount() for contest/cooperative bounties, so I can pay out multiple submissions #1379 Gitcoin organization shield #1378 Add Visual to Gitcoin Bot Status #1374 TypeError: object of type 'int' has no len() #1371 Update https://gitcoin.co/mission to show off that we use an open protocol #1370 BadFunctionCallOutput: Could not decode contract function call getBountyArbiter return data b'' for output_types ['address'] #1369 test 3443 #1366 on the new funder form, the design of the price estimation is wrong #1361 As a funder, I want to have a 'Powered by Gitcoin' button so that I can forward people to Gitcoin on my existing bounty page #1359 Form input feedback icon overlaps with a long input field value #1348 As a user, i'd like faucet distributions to scale up and down with the eth network backlog so i can always have enough gas to submit a standard bounties tx #1341 Admin: Stop Work + Stop Work & Slash #1340 empty user comments should be handled on gitcoinbot #1336 fontawesome : Revert to css #1331 system thinks bounty is cancelled when it is not #1326 'Email us' link in New funding page throws 404 #1320 Notify me if a 2nd Person Starts Work #1319 Tip form pre-populates with last sent tip information #1315 Gitcoin $50K Creative :) #1312 ValueError: {'code': -32000, 'message': 'replacement transaction underpriced'} #1302 code - as a community member, i want a public gitcoin.co/results page, so I can show off that the system is working #1300 Pytest / Travis failing TestAssembleLeaderboards.test_handle_command #1298 organization profiles #1292 windows variable error when submiting work? #1291 ValueError: {'code': -32000, 'message': 'known transaction: cc3dd39aed568cef83849b8af36191ba49c3dbb0ba818c1b9e0f3462d0d9c9f0'} #1289 TypeError: unsupported operand type(s) for /: 'NoneType' and 'int' #1288 TypeError: unsupported operand type(s) for /: 'NoneType' and 'int' #1286 prune DB size #1278 AttributeError: 'NoneType' object has no attribute 'replace' #1274 Modular FTUX #1267 Bounty amounts not showing on /profile #1264 Profile V3 #1263 Fix Settings Responsive View #1261 add saptak/aditya/scott to the team page on /about #1257 BUILD: HOW IT WORKS #1244 GDPR: DISCONNECT & DELETE #1243 GDPR: Write Email To Gitcoin Community #1242 GDPR: Update Email Preferences #1241 GDPR: Update Privacy Tab #1240 GDPR: Show Message in Modal #1239 GDPR: Remove remembering terms #1238 GDPR -- Privacy Policy Updates Email #1237 GDPR -- Cookie Consent #1236 GDPR: Settings Content Updates #1235 GDPR - check about checkbox prefills #1234 GDPR -- Ask for re opt-in from all EU customers #1233 GDPR -- update privacy policy #1232 GDPR -- Add info to our contact forms #1231 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1230 Ratelimited #1229 FieldError: Invalid order_by arguments: ['http://testasp.vulnweb.com/t/xss.html?%00.jpg'] #1227 ValueError: The ExternalBounty could not be created because the data didn't validate. #1226 Detailed Funder Flow with multiple issue support #1224 Design Developer Landing Page #1223 Code - cleanup mission / values page #1220 Add CSAT surveys for bounty interactions - FE #1211 Add CSAT surveys for bounty interactions - BE #1210 Add NPS feedback for the platform #1209 Add the kubernetes base IaC to repo #1200 \u600e\u6837\u7528JAVA\u8bed\u8a00\u7f16\u8bd1\u4e00\u4e2a\u65f6\u5149\u6c99\u6f0f\u3002 #1191 Failing pytest - test_tip #1172 ValueError: The 'node_image' attribute has no file associated with it. #1154 ValueError: The 'node_image' attribute has no file associated with it. #1153 post an ethereum themed gif #1149 RESEARCH EPIC #1139 test #1135 Parent of #920 #1127 Epic 1 #1125 Abstract Away Gas Price / Gas Limit #1124 nginx Doesn't Seem to Recognize (or Direct Properly) www.gitcoin.co #1122 As a user, I want to be prompted to authenticate before seeing a start work modal #1107 How to surface work schemes to the community #1106 Make Image a Thumbnail for Long Descriptions #1105 Build New Gitcoin Landing Page #1104 BUILD - As a funder (Project recruiter), I want a place where I can track all my stuff, so i can have a flow of web3.0 talent #1092 As a member of the community, I want these Profile Privacy Features, so I can be more private #1091 SyntaxError: broken PNG file (chunk b'\\x00\\x00\\x00\\x00') #1089 e-mail should be optional #1088 Transactions didn't post after adding higher gas price in meta mask #1069 Local storage of explorer filter does not consistently load #1064 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1057 Misalignment with arrows on new page #1056 as a user, i want to be able to save my avatar to be my gitcoin profile #1051 as a user, i want to know when my information is gonna be public, so i can manage my info privacy #1048 BadFunctionCallOutput: Could not decode contract function call getNumFulfillments return data b'' for output_types ['uint256'] #1047 BadFunctionCallOutput: Could not decode contract function call getFulfillment return data b'' for output_types ['bool', 'address', 'string'] #1045 'Stop Work' Enhancements #1041 Started work / Stop Work History #1037 Funder Dropdown Options #1030 Cannot read property 'split' of undefined #1025 design - as a community member, i want a public gitcoin.co/results page, so I can show off that the system is working #1020 Add discord bot integration #1015 List used contracts under metamask icon in the footer #1013 Explorer multiselect \"Any\" option doesn't behave as expected #1011 as a user, i want one click approval of erc20 token bounties, because its faster and easier #1007 Build Quickstart Screen & Tidy Up Funder Flow #982 as a repo owner, i want different bounty work schemes, so i can choose the right bounty type for the job #973 Create Seamless Onboarding Experience - Contributor #957 make gitcoinbot status indicator into an image #952 code - as a user, i want a quarterly 'my stats' email, so i can see my activity on the platform #946 code - gitcoin.co/activity #925 Code - Profile Frontend Refresh #920 as an admin, i want to spin up a gitcoin geth node, so i can use it for gitcoin stuff #901 FTUX Backend #859 Funder Activities Task Flow #852 Funder FTUX #850 How to ensure funder payout? #848 Event Flier #847 New Marketing Landing Page #846 Gitcoin Email Updates #845 As a user, I want to build an Avatar, so I can show off my bad self. #813 seperate repo owners / developers earlier in the landing page #811 DESIGN - cleanup mission / values page #805 [DESIGN] - Bigger Text Area for Bounty Description #781 in my settings, i should be able to disguise myself from the leaderboard/having a profile #710 better guide rails around what tasks are a good fit for gitcoin, how to price them #681 [DESIGN] Gitcoin Requests #671 Feedback mechanism funder + contributor for each project #660 Design: Profile Refresh #656 As a user, I want a \"My Work' module so I can see what work is active / done for me on gitcoin #655 confusing first user experience for bounties #652 as a marketer, i want a specific landing page for python, so i can better target consumers #620 Increase Code Coverage by 4% #607 Gitcoin Bounty Hunter Explorer Dashboard #588 Gitcoin Bot Updates #567 Consolidate Funder Actions Into a Dedicated Area #534 How to Get Started (Developer) #516 as a user, i want tooltips on gitcoin.co/new to tell me what each field does #497 gitcoin ENS subdomains #450 As a user, I want to add an 'apply' step to the bounty process, so I can accept the best applicants #442 Build Onboarding Flow - MVP #441 Clear and concise series of Gitcoin emails #438 Unify Modal Designs #430 Clear distinction between content that is clickable and not #427 Clear no results page #418 Consistent messaging across the app #417 As a developer, I want grants available to sponsor my ongoing work in open source. #380 Error: MetaMask detected another web3. MetaMask will not work reliably with another web3 extension. This usually happens if you have two MetaMasks installed, or MetaMask and another web3 extension. Please remove one and try again. #368 as a website mantainer, i want a javascript widget that can show off my bounties, so i can lead more of my community to gitcoin #354 css : Media queries to fix up the landing page #273 stale bounties filter #197 mission / values page v2 #178 Allow users to view their tips / bounties on the web. #141 Tip Receive UX Flow Feedback #136 Epic CSS Cleanup #135 Feedback from a user: ability to manage keyword prerferences. #132 Find funded issues by specific address #92 Send a notification (github, browser, or otherwise) instead of email for tips/bounties. #43 Bot / Github integration Revamp #34 Job Matching Engine #28 Pilot Partnerships #27 Make Language filter UI clearer in Bounties #25 The big 'feedback on the project' post. #18 Merged pull requests: fix for stretched laptop on contributor landing page #1829 ( owocki ) activity feed on landing page to increase conversion rate #1828 ( owocki ) Change color of payout submit button #1827 ( SaptakS ) dashboard/templates: Add 'required' attribute to all 'terms' checkboxes #1818 ( pinkiebell ) Fix checkbox icon #1817 ( octavioamu ) shows how it works on landing page / external nav #1813 ( owocki ) Utilize hosted IPFS node and fallback to Infura #1802 ( mbeacom ) restructuted profiles #1800 ( thelostone-mc ) Do not display an 'wrong network' alert banner if metamask is locked. #1796 ( pinkiebell ) Add gitcoin bounty details url to start work github bot copy #1795 ( mbeacom ) consolidated payment wizard flow #1789 ( owocki ) Make back button work on contributor onboard #1788 ( mttmartin ) attach job desc ux fixes #1787 ( owocki ) Replace disabled attribute with readonly for title and desc #1785 ( SaptakS ) General lint/cleanup of tip views #1784 ( mbeacom ) Refactor GH issue details endpoint #1780 ( mbeacom ) Disables editing of the issue title and description #1779 ( SaptakS ) urls.py + about #1778 ( thelostone-mc ) Adds gasLimitEstimate for bulk payout #1776 ( SaptakS ) Adds google optimize to contributor landing page #1775 ( SaptakS ) Remove soft-expired logic from user interface. #1768 ( pinkiebell ) Fix image alignment on /bounty/quickstart #1767 ( pinkiebell ) Mobile responsive Gas Navigation and Resizing SVG gas graphs #1765 ( Kempo ) fixed linter errors. assigned new variable in for loop. #1757 ( whb07 ) css: fixed loading state #1752 ( thelostone-mc ) 3d dataviz of gas prices vs confirmation time #1749 ( owocki ) Make the user profile in onepager link to /profile/ #1740 ( pinkiebell ) onepages: updated to Muli & letter-spacing #1736 ( thelostone-mc ) Gitcoin Newsletter (7/13) #1735 ( vs77bb ) Fix alerts without types #1734 ( arun1595 ) Activity stream #1732 ( darkdarkdragon ) no sumo popup if logged in #1730 ( owocki ) Allow maxAge GET param for embed image responses #1729 ( mbeacom ) updated 404 page #1726 ( thelostone-mc ) Vision page #1725 ( octavioamu ) Updated Gitcoin Contribution Documentation with Issue Types #1724 ( frankchen07 ) Bug - Misaligned Css On The Acceptance Page #1665 #1721 ( olafghanizadeh ) Allow upto 4 cards in a row to utilise more space #1719 ( SaptakS ) Makes get started button blue as suggested by Alisa #1718 ( SaptakS ) Improve the css for newsletter #1717 ( SaptakS ) Presskit page #1683 #1691 ( olafghanizadeh ) contributor_landing: added newsletter #1689 ( thelostone-mc ) Clickable bounty hunters #1682 #1688 ( olafghanizadeh ) Contributor landing page: change text color of 'Get started' to white. #1687 ( pinkiebell ) Fix markdown of html tags in issue description #1684 ( pinkiebell ) Display an error banner on network error on start-/stop work.. #1681 ( pinkiebell ) contributor : language specific impl #1677 ( thelostone-mc ) refactor YGE code (done) & start on bulk payouts (done) #1666 ( owocki ) fix for https://github.com/gitcoinco/web/issues/1661 #1662 ( owocki ) Change 'not enabled this token'-banner color to orange. #1657 ( pinkiebell ) Fix Dai Value Bug Gitcoin Bot #1592 #1656 ( pinkiebell ) Fix: White paper page isn't responsive and rendering is off #1654 ( pinkiebell ) Display bounty title before value #1653 ( arun1595 ) hide network pill on mobile + reorder media query code #1651 ( thelostone-mc ) gas estimation calculator on gas page #1648 ( owocki ) Implement management command 'sync_listener' #1645 ( pinkiebell ) Changes color of getting started from green to gc blue #1639 ( SaptakS ) css : fixes #1638 ( thelostone-mc ) Fix gas settings #1637 ( SaptakS ) Add Hotjar #1635 ( mbeacom ) Replace 'worth' with 'value' #1634 ( arun1595 ) bug: set title attribute to null when switching to right network #1633 ( thelostone-mc ) Newsletter PR (7/6) #1632 ( vs77bb ) as a issue submitter, i want diff issue templates for diff issue types on gitcoin/co repo, so i can have more customized templates to my use case #1628 ( owocki ) gas advisories #1619 ( owocki ) Fix - #1593 #1615 ( Abhay07 ) Remove unnecessary script #1614 ( arun1595 ) Make event names in slack notifications consistent #1613 ( arun1595 ) Add Joseph's testimonial #1611 ( arun1595 ) Remove duplicate script tags #1610 ( arun1595 ) add Build Waiting State #1604 ( iamonuwa ) We Believe Section added in gitcoin.co/mission #1602 ( Abhay07 ) email: reindent + update css #1601 ( thelostone-mc ) added scott to the team page #1600 ( thelostone-mc ) moves tokens from being hardcoded in the codebase to being stored in the db #1598 ( owocki ) adds OZR token #1596 ( owocki ) Upgrade Django to 2.0.7 #1595 ( mbeacom ) adds help link to how it works dropdown #1591 ( owocki ) new metamask banner #1590 ( thelostone-mc ) Ensure avatar auth #1587 ( premachb ) results page by different keyword #1586 ( owocki ) Fix gas price settings css #1585 ( SaptakS ) Newsletter PR #1583 ( vs77bb ) Update RUNNING_LOCALLY_DOCKER.md #1577 ( eayoungs ) Update where to display how it works again #1576 ( mbeacom ) Adds results link to the footer #1575 ( SaptakS ) nav: fix on mobile #1574 ( thelostone-mc ) fixed alerts #1573 ( thelostone-mc ) Upgrade docker and travis to use Python 3.7 #1572 ( mbeacom ) refs: https://github.com/gitcoinco/web/issues/1568 #1571 ( thelostone-mc ) hide message + USD when not available #1570 ( thelostone-mc ) Display how it works everywhere except index page #1569 ( mbeacom ) fix : eslint errors #1564 ( thelostone-mc ) text: Go -> Save #1563 ( thelostone-mc ) Save Avatar takes you to Profile Page #1559 ( SaptakS ) Add link to the issue URL in the confirmation page #1558 ( SaptakS ) Fix for #1457 (Updated zIndex for Cookie Banner) #1556 ( premachb ) landing : added growing tree svg #1555 ( thelostone-mc ) avatar schwag request form #1551 ( owocki ) Implements a svg badge.. #1546 ( pinkiebell ) Fix broken CSS from how it works #1541 ( mbeacom ) Fix localstorage issue in firefox #1540 ( SaptakS ) all admin actions are in a new line #1539 ( thelostone-mc ) minor changes: added #1538 ( thelostone-mc ) Update how it works to use one url #1536 ( mbeacom ) ftux : further changes #1533 ( thelostone-mc ) Fix gasPrice on changing recommendation #1531 ( SaptakS ) newsletter 6/22 #1530 ( vs77bb ) Check for slow instead of fast #1526 ( SaptakS ) Fix malformed HTML #1525 ( arun1595 ) Fix buttons in standalone avatar page #1524 ( SaptakS ) Funder FTUX #1521 ( SaptakS ) Update slack notification format #1517 ( arun1595 ) Discord test button and send webhook msg with avatar #1514 ( kelvintyb ) Fix selectmenu initialization issue #1513 ( arun1595 ) Fix typo #1508 ( arun1595 ) 1244 how it works #1501 ( darkdarkdragon ) Remove bot's response to repos missing @gitcoinbot #1500 ( arun1595 ) Update open gitcoin role on about page #1499 ( arun1595 ) Fix jquery selector #1497 ( arun1595 ) Refactor getNetwork code #1496 ( arun1595 ) Fix pytest version #1495 ( SaptakS ) add https://cln.network token base CLN #1491 ( leonprou ) as a funder, i want to advertise that i am hiring on my bounty, so bounty hunters can take this into account when attempting my bounty #1488 ( owocki ) Change pull request link hover color #1487 ( arun1595 ) /results page is slow, this PR perf profile helps diagnose that and makes it faster #1486 ( owocki ) Change login link hover color to white #1485 ( arun1595 ) Remove unnecessary letter spacing in emails #1481 ( sprusr ) WIP: Make funder icons circular #1479 ( arun1595 ) Added the gas amount to the right place #1477 ( shad-k ) Roundup 6/15 #1474 ( vs77bb ) WIP: Contributor landing page #1459 ( arun1595 ) Fix font awesome loading in ENS page #1458 ( arun1595 ) Add name linking to vivek's slack notification and welcomebot #1452 ( mbeacom ) robot_error: set max-width #1450 ( thelostone-mc ) updated font-size for ftux large devices #1448 ( thelostone-mc ) Issue Explorer Check in tools for Admin (Vivek) #1446 ( owocki ) no flex on alert messages #1444 ( owocki ) Simple Nav #1439 ( owocki ) Update django logger and deploy script handling #1437 ( mbeacom ) Replace arrow functions with traditional functions #1424 ( arun1595 ) Start/Stop history #1420 ( darkdarkdragon ) rollbar : quickstart #1417 ( thelostone-mc ) Upgrade django to 2.0.6 #1414 ( mbeacom ) Add space between not and have #1413 ( arun1595 ) landing page: final changes #1412 ( thelostone-mc ) roundup 6/8 #1411 ( vs77bb ) landing : updated mobile design #1406 ( thelostone-mc ) Github notification safeguard for local #1405 ( mbeacom ) Fix: return of login #1403 ( SaptakS ) Open gitcoin profile links on the same tab #1401 ( SaptakS ) External links should open in new tab with noreferrer and noopener #1399 ( SaptakS ) Adds funding link in the navbar for landing page #1397 ( SaptakS ) Corrects lightbulb image name #1396 ( SaptakS ) Fixes: https://github.com/gitcoinco/web/issues/1391 #1392 ( kziemianek ) Fix project type number #1385 ( arun1595 ) Enhancement bounty info view on the bounty details page #1384 ( arun1595 ) Fix minor typo #1383 ( arun1595 ) birth: landing page #1377 ( thelostone-mc ) Update top banners in different bounty flow pages #1365 ( SaptakS ) Let price estimation text span a whole row #1362 ( arun1595 ) Fix FontAwesome static refs #1360 ( mbeacom ) Funder form v3 #1356 ( SaptakS ) notif: updated banner #1355 ( thelostone-mc ) Add min value for hours worked input field on submit work form #1350 ( arun1595 ) temp: using font-awesome CDN #1346 ( thelostone-mc ) Remove invalid css #1345 ( arun1595 ) add 'stop work & slash' button #1343 ( jvmaia ) profile : revamp #1342 ( thelostone-mc ) disable sendgrid events until we figure out root cause of db size issues #1339 ( owocki ) Trim issue action plan before validation #1338 ( arun1595 ) Adjust sync_geth settings and docs for local #1335 ( mbeacom ) fontawesome: revert to css #1333 ( thelostone-mc ) shared: refactored + removed dead code #1332 ( thelostone-mc ) Decrease the scope of GH perms requested on login #1328 ( mbeacom ) UX/UI for new results page #1327 ( travisdmathis ) show pricing guide on new bounty form #1322 ( owocki ) Fix email link in newsletter and mailchimp templates #1321 ( arun1595 ) Don't save tip information in local storage except current user's #1318 ( arun1595 ) docker-compose was wrong #1317 ( owocki ) Fix primary button style in receive tip success page #1314 ( arun1595 ) WIP: Stats email v2 #1311 ( oogetyboogety ) org profiles #1310 ( owocki ) as a user, i want to show number abandonments on gitcoin profile, so i can know who's a flake #1309 ( owocki ) Quickstart PR with corrected redirect #1308 ( SaptakS ) Fix: specify height of upper left only for submit bounty form #1306 ( SaptakS ) css: fixed dashboard filter row #1304 ( thelostone-mc ) Enable autocorrection via pre-commit and add yapf #1301 ( mbeacom ) fixes ENS #1299 ( owocki ) adds ENS subdomain registrations to activity report #1296 ( owocki ) helper command for pg_top #1295 ( owocki ) send tip from github username, not just 'full name' #1294 ( owocki ) Fix broken image in about page #1285 ( arun1595 ) Add checks for bounty/tip notifications on local/dev #1284 ( mbeacom ) ftux: refactor + restructure + url rename #1281 ( thelostone-mc ) admin / impersonate users #1280 ( owocki ) records form submission records for GDPR purposes + mailchimp permi-delete #1279 ( owocki ) Adds SaptakS to team #1277 ( SaptakS ) leaderboard updates for mitch #1275 ( owocki ) Improves deletion confirmation modal button styling #1272 ( SaptakS ) css: fixed font name #1271 ( thelostone-mc ) roundup 5/25/18 #1270 ( vs77bb ) Updates text in deletion modal #1269 ( SaptakS ) settings: updated styling + linting #1266 ( thelostone-mc ) css: update cookie styling #1265 ( thelostone-mc ) Mission/Values Page Redesign / Refactor #1260 ( travisdmathis ) settings: redid page #1255 ( thelostone-mc ) WIP: GDPR Cookie consent #1254 ( mbeacom ) GDPR: Management command to send email to all gitcoin users #1252 ( SaptakS ) GDPR: show updated policy via modal #1251 ( thelostone-mc ) GDPR -- Add info to our contact forms #1250 ( owocki ) GDPR reconsenet from EU residents #1249 ( owocki ) GDPR: Adds disclosure and consent withdrawal information in privacy tab #1248 ( SaptakS ) Email Preferences at a much more granular level #1247 ( owocki ) GDPR: Fixes https://github.com/gitcoinco/web/issues/1243 #1246 ( owocki ) GDPR: Remove remembering terms and blockchain tos from the funder forms #1245 ( SaptakS ) UTS46 ENS domain names #1225 ( owocki ) GDPR & Associated Privacy Updates -- Must be merged by EOD May 24 2018 #1222 ( owocki ) ens cleanup / marketing stuff #1219 ( owocki ) css: clean up ENS #1197 ( thelostone-mc ) one time approvals for each erc20 token used on gitcoin #1190 ( owocki ) fix for 'accept submission' not showing up #1189 ( owocki ) dashboard : minor fixes #1187 ( thelostone-mc ) roundup! vivek's first PR #1182 ( vs77bb ) Add Livepeer Token (LPT) for tipping #1176 ( jozanza ) Add CR fixtures and disable get_prices by default #1175 ( mbeacom ) add Unblocked Ledger Token (ULT) #1174 ( 7alman ) Add fulfillment endpoint for each entry by std bounty id #1170 ( mbeacom ) HOLD: releases iOS landing page link - DO NOT MERGE UNTIL IOS APP IS READY #1167 ( owocki ) image: ran make compress-images #1164 ( thelostone-mc ) about: fixed up CSS for about page community + alumini #1163 ( thelostone-mc ) css: added important for overridden prop #1161 ( thelostone-mc ) css: set limit for image in issue description #1159 ( thelostone-mc ) allows configurable 'max start work amount' #1158 ( owocki ) Modified web3 address to be optional for EthOS #1148 ( eswarasai ) Added etherscan url in EthOS Tweet #1147 ( eswarasai ) onboard : autopopulate keywords for users #1146 ( thelostone-mc ) Mark ethos hacking #1145 ( owocki ) Adds cors headers, and conditionally allow all for GET requests of bounties. #1126 ( matthewlilley ) js : added gettext across all alerts #1121 ( thelostone-mc ) updated start work dialog -> to ask hunter for action plan #1118 ( thelostone-mc ) Add Avocado (AVO) token #1116 ( peter-evans ) Fixes: https://github.com/gitcoinco/web/issues/1030 #1115 ( bakaoh ) Style refresh quote button #1114 ( arun1595 ) Prompt the user to log in before starting work #1113 ( arun1595 ) ant token name did not show up #1108 ( owocki ) project_types (formerly work schemes) #1098 ( owocki ) data privacy on new issue submit #1097 ( owocki ) makes email address optional in new bounties #1096 ( owocki ) As a member of the community, I want these Profile Privacy Features, so I can be more private #1095 ( owocki ) alumni model and view #1093 ( owocki ) ios applink on the landing page and bottom notifciation #1090 ( owocki ) Change cursor of questions in help page to pointer #1086 ( arun1595 ) Fix grammatical issue #1085 ( arun1595 ) Change Running Locally Header #1084 ( arun1595 ) dashboard: side_bar filters refactor #1082 ( thelostone-mc ) dashboard: fix filter uri #1081 ( thelostone-mc ) bugfix: tech stack filter fix #1080 ( thelostone-mc ) Dynamic widget documentation #1076 ( matthewlilley ) Add left margin for activity time #1074 ( arun1595 ) mail: updated alt + removed extra \\</p> + reindent #1071 ( thelostone-mc ) test button to test slack integration #1070 ( darkdarkdragon ) Fixed #1046 #1068 ( eswarasai ) fix toggle any filter #1065 ( joshmorel ) css: funding / killing form update #1061 ( thelostone-mc ) the ability for bounty funders to snooze gitcoinbot inactivity warnings #1059 ( owocki ) escalation not removal #1058 ( owocki ) css: prettified start work dialog box to match style + stop work button #1055 ( thelostone-mc ) gives staff the ability to remove users from a bounty #1042 ( owocki ) logs abandoned work and prevents users from starting new work bc of it #1039 ( owocki ) staggers cron start times #1034 ( owocki ) Quickstart screen for bounty creation flow #1029 ( SaptakS ) Slack Welcomebot on AWS Lambda #1017 ( mbeacom ) quarterly_stats Fixes: https://github.com/gitcoinco/web/issues/946 #1016 ( CuriousLearner ) Add autotranslate base #971 ( mbeacom ) QA: Implement Avatar builder Frontend (Fixes #813) #967 ( Smona ) sets default search project status to 'any' #936 ( owocki ) ftux: birth #889 ( thelostone-mc ) WIP: Update FaucetRequest with FK to Profile #884 ( mbeacom ) ENS Subdomain Feature #509 ( scottydelta ) pre-pr884 (2018-04-30) Full Changelog Fixed bugs: Faucet translation isn't rendering properly #1032 NoReverseMatch: Reverse for 'viz_index' not found. 'viz_index' is not a valid view function or pattern name. #1022 Gitcoin bot 2nd attempt doesn't render properly #991 BE tests currently failing #953 [BUG] The User Menu is Covered on TX Confirmation Screen #924 Gitcoinbot did not comment when bounty was posted #915 No unsupported network alert on bounty funding #773 Modify setup_lang to use User #980 ( mbeacom ) expiration tests fix #913 ( kziemianek ) Closed issues: DoesNotExist: Profile matching query does not exist. #1008 AttributeError: 'AnonymousUser' object has no attribute 'profile' #1005 testaroooooooo 123 #996 Updating user notification preferences fails and returns (403) CSRF verification failed #988 Resolve pytest / travis failures #987 error when submitting faucet request #979 TypeError: bad operand type for unary +: 'str' #976 AttributeError: 'NoneType' object has no attribute 'email' #954 test 123 #949 Issue explorer don't show issue in case gas price has been changed #945 ConnectionError: HTTPSConnectionPool(host='ipfs.infura.io', port=5001): Max retries exceeded with url: /api/v0/cat/QmXxkBASF92QvFFwChwZAECSRsjoMstMHJ2A9bwXuchXbA (Caused by NewConnectionError('\\<urllib3.connection.VerifiedHTTPSConnection object at 0x7f6791 #932 Test is a test issue #929 As a user, I would should be informed when I no longer need to keep tip confirmation window open #928 AttributeError: 'JsonResponse' object has no attribute 'read' #921 AttributeError: 'LeaderboardRank' object has no attribute 'local_avatar_url' #914 Design Funder Landing Page #908 Test title #907 404 after logout at profile page #905 Navbar responsive issue #903 as a submitter, i want to link my github PR when i submit work, so i can show off what i did #893 design - as a user, i want a quarterly 'my stats' email, so i can see my activity on the platform #892 make fix stylelint error #877 timezone issues with opened date #876 as a repo owner, i want to be able to approve people who've started work, so i can filter those who i want to work with #812 design - gitcoin.co/activity #804 Allow the user to set different language for the Gitcoin app #802 coding - /mentors page #725 as a user, i want upvotes / downvotes on tool page, so i can cast my vote on gitcoin's tool direction #706 Gitcoin should monitoring issue pull request as well #696 refactor bounty.value_in_usdt into two functions #693 Notify Gitcoin/Funder that Developer is Starting Work #683 (DESIGN) As a user, I want a Blockchain Job Board so I can find professional work in the space #540 Handle multiple bounties per github issue URL #533 Fund an Issue Suggestion/FTUX #529 Display Tips on Leaderboard #522 How to Get Started (Repo Maintainer) #517 Http404 #481 new_bounty marketing emails need to be moved to a background job #477 Clean Up Bounty Creation Flow #429 Functioning Search Field #412 As a core team member, i want to Track deploys & releases for faster debugging #405 (unknown): Uncaught this network is not supported in bounty_address() for gitcoin #362 Add slack bot integration #259 As a team member, I'd like to be on the /about page, so I can show off that I'm part of the team. #222 Merged pull requests: fixes for https://gitcoincommunity.slack.com/archives/C8E45J5D0/p1525097521000711 #1024 ( owocki ) slack welcome messages #1012 ( owocki ) hotfix: wait for approval to issue bounty #1006 ( owocki ) adds rates estimate on bounty details page #998 ( owocki ) Action URLS Cleanup (and other goodies) #983 ( owocki ) Notify Gitcoin/Funder that Developer is Starting Work #981 ( darkdarkdragon ) unsupported network warnings when trying to do an aciton on a network we dont support #978 ( owocki ) warnings when youre looking at a non mainnet bounty #977 ( owocki ) pricing brackets #972 ( owocki ) Adds bounty flow doc to readme #956 ( owocki ) Add slack bot integration #955 ( darkdarkdragon ) smarter github notifications #948 ( owocki ) Tool modifications #944 ( mbeacom ) track hours worked on fulfillment #942 ( owocki ) about: Fix Origin Story #933 ( thelostone-mc ) verboseness of gitcoinbot reminders #931 ( owocki ) more feedback emails #930 ( owocki ) bounty: hide timeline on cancelled bounties #922 ( thelostone-mc ) fixes https://github.com/gitcoinco/web/issues/876 #919 ( owocki ) make expiration status less inclusive #918 ( owocki ) about: core team design revamp #916 ( thelostone-mc ) navbar responsive issues #904 ( kziemianek ) avatar cleanup - and adds the ability to blend in the gitcoin logo to an avatar #902 ( owocki ) ability to add a pr link to work submission #900 ( owocki ) nav + explorer fixes #890 ( thelostone-mc ) Upgrade deb image to Stretch #888 ( mbeacom ) Added team bios and community member links to /about page #887 ( jakerockland ) WIP - d3 data viz experiments #886 ( owocki ) dashboard: Tests cleanup. #857 ( cryptomental ) preferred language #810 ( kziemianek ) Initial commit for Search functionality #790 ( eswarasai ) Tool voting #763 ( kziemianek ) 20180416 (2018-04-16) Full Changelog Implemented enhancements: Detect GitHub issue activity other than comments #458 ( JakeStoeffler ) Fixed bugs: Cannot submit work #883 feedback crm just went a little haywire #873 Closed issues: TypeError: Object of type '__proxy__' is not JSON serializable #844 Detect \"Referencing\" as \"Work\" #576 Merged pull requests: Add admin link to navbar for staff and switch settings icon #899 ( mbeacom ) adds tutorials on help page #898 ( owocki ) Github comments when user is warned/removed (in addition to the emails that are sent when this happens) #897 ( owocki ) 20180415master (2018-04-16) Full Changelog Implemented enhancements: Feature/refactor value in usdt #853 ( cryptomental ) Fixed bugs: Bounty details screen on mobile not responsive #759 Closed issues: Incorrect dollar value shown for bounties #879 As a user, I want to break apart my email settings and my profile settings #795 Merged pull requests: Update Travis pipeline to use new stages #885 ( mbeacom ) identify trust wallet #882 ( kziemianek ) new nav for auth/login for site #881 ( owocki ) status update dates on the bounty model #878 ( owocki ) new_bounty emails #867 ( owocki ) in my settings, i should be able to disguise myself from the leaderboard/having a profile #745 ( owocki ) pre-853 (2018-04-12) Full Changelog Fixed bugs: admin login broken in prod #871 Closed issues: AttributeError: 'NoneType' object has no attribute 'email' #872 This is a test bounty for demo purposes #868 As a user, I only want to receive 1 match email per day, so I dont unsubscribe #454 Merged pull requests: Django Auth Redux #862 ( mbeacom ) pre-django-auth-redux (2018-04-11) Full Changelog Implemented enhancements: responsive profile #825 ( kziemianek ) Fixed bugs: Broken profile markup #817 alpha tag confusion #792 Fixed heights in tips list #787 Funded issues are shown up as expiring in search results #783 fix for bouty details buttons padding #842 ( kziemianek ) Bean/fix typos #829 ( StareIntoTheBeard ) Closed issues: update can_submit_after_expiration_date #855 Request Funding Increase #849 Expired bounty invalid days ago counter #839 Canceled Bounty gitcoinbot github message was wrong #838 bounty detail page - button padding is messed up at certain resolutions #836 IndexError: list index out of range #835 AssertionError: Cannot filter a query once a slice has been taken. #833 'done' bounties should not have the time left field visible #824 comment needs left padding #823 RelatedObjectDoesNotExist: User has no profile. #820 Document and check all possible status values #816 Logo width is incorrect #808 Performance Updates #777 design - /mentors page #565 Update Gitcoin Email Designs #563 Code - /pitch pages #506 Price fluctuates on the explorer stats page #491 As a site admin, I want a Gitcoin Drip Marketing Campaign that explains our vision (and how to use Gitcoin) over time, so we can enable our users to be successful. #448 I want to see the progress of my newly created bounty tickets #422 Issue Explorer Details Page V2 #419 Merged pull requests: Add ipdb and django shell access to docker setup #863 ( mbeacom ) docker shell fixes #861 ( owocki ) fix expiration tests #860 ( kziemianek ) update can_submit_after_expiration_date #856 ( owocki ) fix for Expired bounty invalid days ago counter #840 ( owocki ) bounty: hide progress bar on work done status #828 ( thelostone-mc ) Fixes: https://github.com/gitcoinco/web/issues/792 #827 ( willsputra ) docker / github login instructions #822 ( owocki ) todos should be falsy #821 ( owocki ) Django auth #818 ( mbeacom ) bug fix : bounty + landing + dashboard #807 ( thelostone-mc ) bounty: added progress bar #764 ( thelostone-mc ) bounty: mobile alignment fix #762 ( thelostone-mc ) Email design update #746 ( jakerockland ) pre-django-auth-1 (2018-04-06) Full Changelog Implemented enhancements: Profile should make use of the django user framework #312 Closed issues: See what my last actions were when I logged in (as bounty funder). #423 Merged pull requests: bounty: fixed avatar url + tooltip style #784 ( thelostone-mc ) bounty : minor changes #768 ( thelostone-mc ) Add django auth framework #574 ( mbeacom ) pre-django-auth (2018-04-06) Full Changelog Fixed bugs: the big 'profile might need a redesign or some bugfixes' thread. #580 Closed issues: \"ReferenceError: Accounts is not defined\" Error printed to console when sending a tip #806 As a user, I would like to view profile bounties, repos, etc in a paginated fashion #550 An easy way to read the list of funded issues on my profile page #424 20180404-template-1 (2018-04-05) Full Changelog 20180404-template-0 (2018-04-05) Full Changelog 20180404-base-template (2018-04-04) Full Changelog Closed issues: Groundwork for Internationalization (Translation of App to Other Languages) #642 Merged pull requests: stylelint:fix info in CONTRIBUTING.md #803 ( kziemianek ) Limit Profile stat results to valid bounties #791 ( mbeacom ) Fixes: https://github.com/gitcoinco/web/issues/642 #728 ( bakaoh ) pre-728 (2018-04-04) Full Changelog Closed issues: Responsive Design Issues On The Gitcoin Website #684 pre-684-responsive-cleanup (2018-04-04) Full Changelog Implemented enhancements: 'my projects' tab should be greyed out if user is not logged in #769 Issue Explorer Detail #737 issue funder should be able to stop work #666 Investigate Image Compression Across Gitcoin for Performance Improvements #608 inline validations #554 Need to be able to stop work bounties as the funder #463 standardbounties: automatically cross-process bounties posted to bounties.network to gitcoin #268 Static handling and cache invalidation #262 css: rebirth of the bounty #691 ( thelostone-mc ) fixing some width, flex, and spacing issues as discovered in issue #684 #688 ( joshmobley ) changed all target=new to target=_blank with rel=noopener #677 ( michelgotta ) revamped tool page #672 ( owocki ) Inline validations #571 ( KennethAshley ) Fixed bugs: Getting an Error When Trying to Tip User #776 Issue Explorer Check-box Undone #744 after sending tip, blue alert that should have had a success message in it said 'undefined' #687 refresh_bounties empty URL bug #686 TypeError: Object of type 'BountyFulfillment' is not JSON serializable #678 loading page is busted #653 KeyError: 'token' #649 standard bounties: multiple bounties per issue URL #251 standardbounties: if you try to fulfill a bounty that doesnt exist it spins forever #250 bug: need auto refresh on gitcoin submission pending page #179 explorer: added missing css stylesheet #747 ( thelostone-mc ) html: removed extra css link from header.html #739 ( thelostone-mc ) Closed issues: test 123 #788 Really thin kill bounty screen #786 messed up CSS on https://gitcoin.co/funding/process #780 avatar_url is wrong #779 Hardcoded year in emails copyright section. #765 Contributing Link in README.md doesn't work #755 test 123 #752 NameError: name 'time' is not defined #751 NameError: name 'time' is not defined #750 test 123 #734 test 123 #722 test 123 #720 reverse bounties #719 'accepted' time is wrong on bounty #714 Using docker to setup and got \"localhost refused to connect\" error, and ReadMe file is outdated #713 /explorer on mobile needs some alignment fixes #705 bounty explorer can be slow #689 as a user, i want to ahve an 'in alpha' badge on alpha tools, so i can know which tools aren't yet GA #685 gitcoin.co/new issue page not responsive #679 Scope of task #670 test 123 #654 Emails with [DEBUG] header in prod #650 Faucet giving 500 when submissino #646 Update Gitcoin Weekly Newsletter #632 as a user, i want gitcoin to integrate standardbounties contribute() method, so i can contribute more funds to a bounty #617 Tidy Up Issue Explorer #601 as an administrator, id like to add faucet distributions to activity_report, so i can track them #600 redesign embeddable widget for github reops #594 upgrade: font-awesome 5 #593 Add Gitcoin Newsletter Page #584 Latest News Updates #518 Clear and concise message about work started from Gitcoin Bot #508 Remove Subscribe to Funded Issues at top of Issue Detail Page #504 Longer titles are profile page overflow their bounds #501 gitcoinbot did not comment on github when work\\_done event fired #495 Issue explorer on mobile needs a quick cleanup #494 Exception: attempting to create a new bounty when is_greater_than_x_days_old = True #485 People shouldn't be able to start work on more than 3 issues at a time #478 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #467 BACKEND -- Gitcoin External Bounties tool #447 Clear Connection Between Notification and Error States #432 Consistent display of ETH and USD across app #421 To see only open issues #420 Consistent button styles across the app #416 Consistent H1 treatment #414 Clear and concise tooltips #410 Standardbounties expiration date treated differently than Gitcoin expiration date #393 Uncaught ReferenceError: getParam is not defined #390 Uncaught TypeError: Cannot read property 'coinbase' of undefined #389 Uncaught TypeError: Cannot read property 'accounts' of undefined #388 (unknown): \uad6c\ubb38 \uc624\ub958 #385 (unknown): ':' is required. #383 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #382 Error: Access is denied. #381 (unknown): Syntax error #376 (CODE) as a user, i want to see bounties from other platforms, so i can work on bounties outside of the gitcoin ecosysstem #372 TypeError: an integer is required (got type NoneType) #360 Uncaught SyntaxError: Identifier 'slides' has already been declared #352 Uncaught SyntaxError: Identifier 'slides' has already been declared #349 Cannot read property '2' of null when submitting bounty #342 Test Issue #341 SyntaxError: expected expression, got '*' #339 Uncaught ReferenceError: web3 is not defined #336 Uncaught TypeError: Cannot read property 'accounts' of undefined #318 Error: Web3ProviderEngine does not support synchronous requests. #307 Error: Syntax error, unrecognized expression: select[name=deonomination #306 Uncaught ReferenceError: nextSlide is not defined #305 Uncaught ReferenceError: web3 is not defined #303 Uncaught SyntaxError: Unexpected token * #302 (unknown): Syntax error #300 (unknown): Script error. #297 ReferenceError: Can't find variable: nextSlide #295 Uncaught ReferenceError: nextSlide is not defined #294 ReferenceError: Can't find variable: nextSlide #293 Uncaught ReferenceError: nextSlide is not defined #292 Uncaught ReferenceError: web3 is not defined #291 Uncaught ReferenceError: web3 is not defined #290 Uncaught ReferenceError: nextSlide is not defined #289 Uncaught TypeError: Cannot read property 'coinbase' of undefined #287 Uncaught TypeError: Cannot read property 'accounts' of undefined #286 flow to reject a claim and payout to someone else is kind of cumbersome #275 StandardBounties: The ability to ingest Bounties.Network Bounties #264 ERC20 batch tip send #233 improvement - filtering bounties for repository #232 Issue Explorer Usability tweak #227 Treat claimed issues as open #225 design: index of bounties from other bounty projects #221 Detect profile from Metamask/Github #214 funded issue links are long and clunky #201 Environment variable based settings #144 saving search UI is broken on iphone 7 #8 Merged pull requests: explorer: updated label for issues with status done #785 ( thelostone-mc ) bounty: process + kill bounty width fix #782 ( thelostone-mc ) CSS clean up \ud83c\udf89 #775 ( sethmcleod ) disable my projects filters if user not logged in #771 ( kziemianek ) current year in copyright email section #766 ( kziemianek ) Alpha Tag #758 ( willsputra ) bounty: css letter spacing fix for h1..h6 #757 ( thelostone-mc ) Fixed Contributing Link in README.md #756 ( Sabihashaik ) bounty: css fix for wonky contributor info #741 ( thelostone-mc ) html: reordered css links #740 ( thelostone-mc ) bounty: display submit only on starting work #738 ( thelostone-mc ) #679 - new issue responsive updates #735 ( joshmobley ) fixed broken save search UI & missing save search text on mobile #731 ( willsputra ) accepted_on date in fulfillment model #729 ( owocki ) Optimize images in assets #724 ( mbeacom ) handle multiple bounties per github url #723 ( owocki ) Add image compression #712 ( cassidypignatello ) bounty: review feedback added #711 ( thelostone-mc ) workaround for web3 sync issues #709 ( owocki ) twitter.com/gitcoinfeed #708 ( owocki ) css: fixed explorer overflow on mobile #707 ( thelostone-mc ) Fixes: https://github.com/gitcoinco/web/issues/687 #699 ( kziemianek ) css: sidebar fixup #697 ( thelostone-mc ) Issue funder can remove users from issue #675 ( kziemianek ) Offchain Bounties #673 ( owocki ) doc: corrected setup path #667 ( thelostone-mc ) Records UserAction events for Tip, Start/Stop Work, and Bounty related things #664 ( owocki ) People shouldn't be able to start work on more than 3 issues at a time #663 ( owocki ) no faucet spoofing #662 ( owocki ) no faucet spoofing #661 ( owocki ) Add GeoIP2 and lang middleware #657 ( mbeacom ) Adds testimonial video to landing page #645 ( owocki ) Redesign and implementation of embed widget #644 ( michelgotta ) @gitcoinbot tune up! #641 ( zoek1 ) use AGPLv3 license #638 ( gasolin ) fontawesome: upgrade to v5 #635 ( thelostone-mc ) Refactors 3 requests down to 1 #634 ( owocki ) Integrate StandardBounties increasePayout() #626 ( msuess ) Refactors shared.js / web3 awareness code for more sanity #625 ( owocki ) explorer: updated view #621 ( thelostone-mc ) Update all alerts to include new alert style #553 ( KennethAshley ) Environment variable setting handling #359 ( mbeacom ) pre_web3_awareness_reafctor (2018-03-16) Full Changelog Implemented enhancements: nav: redesigned the dropdown #629 ( thelostone-mc ) explorer: updated tooltip #585 ( thelostone-mc ) Fixed bugs: AttributeError: 'NoneType' object has no attribute 'strip' #616 IndexError: list index out of range #613 profile_details.html references nonexistent profile.js resulting in Http404 #612 KeyError: 'comment' #598 fix for empty github notification #622 ( owocki ) Check dict existence in gitcoin bot payload view #599 ( mbeacom ) Closed issues: test 123 #595 Upgrade to the latest Django revision #583 Increase Code Coverage by 5% #408 Reminder to remove the legacy/* application once those bounties are done #406 Uncaught Error: Web3ProviderEngine does not support synchronous requests. #340 addd logo to metamask contract metadata repo #320 Bot / Github integration Revamp MVP #152 In tip flow, sometimes we are not able to get the email address of the user from github #75 Merged pull requests: css: dropdown fix #630 ( thelostone-mc ) Enable ESLint in pre-commit and on Travis CI #624 ( mbeacom ) Sends followup emails after 48 emails to bounty fulfiller and submitter #610 ( owocki ) tooltip: updated as per review comments #606 ( thelostone-mc ) slack notifications upon start / stop work #591 ( owocki ) destroys legacy bounty handling code (except for on legacy kill bounty page) #589 ( owocki ) nav: redesigned the dropdown #586 ( thelostone-mc ) General faucet cleanup #582 ( mbeacom ) Feature/faucet -- with kevin's changes #581 ( owocki ) removes optional add_bcc option from mailer #579 ( owocki ) explorer: added sort feature #578 ( thelostone-mc ) Cleanup syntax and linting issues for backend code #577 ( mbeacom ) css: refactored media queries #573 ( thelostone-mc ) mocks expiration date on standardbounties #566 ( owocki ) Writing coverage for marketing model, increasing coverage to 33% #524 ( leonprou ) ESLint configuration to help code with more style #468 ( michelgotta ) BOT / GITHUB INTEGRATION REVAMP MVP #236 ( romanjesus ) pre_faucet (2018-03-09) Full Changelog Implemented enhancements: show tips on leaderboard / profiles #544 ( owocki ) Closed issues: IndexError: list index out of range #564 Explorer changes followup #555 Update Issue Explorer Front End #503 void #455 Show consistent top navigation across the app #415 Clear Distinction Between Web 3 States #413 Merged pull requests: sendgrid event hooks #568 ( owocki ) pre-clean-urls (2018-03-07) Full Changelog Implemented enhancements: cleaner funded issue urls #452 ( owocki ) pre-clean-urls2 (2018-03-07) Full Changelog Implemented enhancements: As a user, I want the navigation bar to be consistent #548 Add form styles #514 ( KennethAshley ) Adding token conversion rate to bounties #387 ( bhenze ) Fixed bugs: Is there still a problem with 'start work' carrying over from bounty to bounty? #519 Http404 raising frequently on profile view #492 AttributeError: 'NoneType' object has no attribute 'pk' #483 Integration branch triage issues #474 void #462 Added remove filter functionality for Search Tags #562 ( eswarasai ) css : fixed display for devices below 380px #559 ( thelostone-mc ) FIX: Replace selects with select2 and update arrow #539 ( KennethAshley ) Closed issues: gitcoincobot doesnt work for ERC20 issues #536 Test #531 void #515 void #511 void #500 Consistent Form Styles Across the Gitcoin #498 As a user I'd like a cleaned up explorer page. #493 Version conflict when running tests #488 'new work' comments appear twice on github issue from gitcoincobot #480 void #479 void #476 DoesNotExist: BountyFulfillment matching query does not exist. #471 void #470 void #469 Issues in 'Work Started' should be 'Open' #466 void #464 void #460 status not populating correctly on legacy issues #453 bust the cloudfront cache when an issue updates #446 Consistent tone and voice to communicate with me #439 Create Gitcoin UI Kit #437 Align Current State of the Issue Explorer #436 Update White Paper Page Select List #434 Create Consistent Form Styles #433 dashboard_bountyfulfillment is not being updated properly #428 Clear understanding whether something is an error or informational #425 Show left rail radio filters when appropriate #411 TypeError: an integer is required (got type NoneType) #409 Fix lingering bounty_fulfiller (claimee) references #401 HTML/CSS Touch ups on Bounty Details Page #399 Make Process Bounty page more user friendly #398 Wrong issue title in gitcoin.co #366 TypeError: an integer is required (got type NoneType) #332 standardbounties cleanup: multiple fulfillments #308 standardbounties cleanup: state issues #284 Coloradocoin receive page (due Feb 1) #261 Push Open Source Forward => Grow Open Source #238 design- /pitch page - where people can pitch project ideas #198 link profile in nav somewhere #191 show conv rate rate at time of posting #165 As a user, I'd like to be able to close my browser window after I submit a web3 tx, so I can do other things without canceling. #128 GitHub oauth in new funding flow #98 Merged pull requests: review: added feedback for the explorer page #558 ( thelostone-mc ) Unify navbar template #549 ( mbeacom ) Add initial changelog #545 ( mbeacom ) WIP: Feature/faucet #541 ( KennethAshley ) Fix unselectable icons on select2 selects #532 ( KennethAshley ) Add Wyvern (WYV) token #525 ( protinam ) core: Rebirth of the explorer #523 ( thelostone-mc ) dashboard: base setup #505 ( thelostone-mc ) Update web3 and eth-utils to fix issue 488 #489 ( jasonrhaas ) html: removed left rails #486 ( thelostone-mc ) Correct typos and grammatical errors #484 ( cpbennett4 ) text: fixed typo #473 ( thelostone-mc ) alert user to local env networks #465 #472 ( ckhatri ) Fix ES Linting issues for leaderboard.js #461 ( tra38 ) Fix isort-check build failure #459 ( JakeStoeffler ) launches web3 what / why video #449 ( owocki ) easier tip redemption #396 ( owocki ) (WIP) February integration branch #379 ( owocki ) Add dummy external bounties #377 ( KennethAshley ) WIP -- COLO Coin Redemption #331 ( eswarasai ) css: prettified bounty_details page #323 ( thelostone-mc ) prefebint (2018-02-13) Full Changelog Closed issues: Use BountyFulfillment for all fulfiller_ references #402 Fix dashboard/notifications.py #400 feb integration branch - remove references to Bounty.fulfiller\\_ #397 \"Are you still working on this?\" #394 (unknown): Syntax error #391 MultipleObjectsReturned: get() returned more than one Profile -- it returned 2! #386 This is a test issue for purposes of a demo during Consensys Mesh Retreat #384 Bounty creation transaction link points to rinkeby etherscan address. #370 Travis builds failing #367 AttributeError: 'NoneType' object has no attribute 'get' #361 Submitting work throws a \"Math is not a function\" #357 Profile Page needs to be sized up if it's smaller than it should be #355 Increase Code Coverage by 4% #353 RangeError: Maximum call stack size exceeded #351 RangeError: Maximum call stack size exceeded #350 html: setting max-width to 500px casues weird display #347 New funded issue form does not automatically add the URL from the querystring #346 SyntaxError: expected expression, got '*' #338 as a user, i want to be able to process two bounties in multiple tabs so i can be efficient. #334 in activity_report management command, add a from\\_address and to\\_address field #322 tip emails not going out #321 Issue summaries lose formatting like new lines #317 new bounty status #316 stanardbounties cleanup: tune rate limiter #281 standardbounties cleanup: why aren't 500 error emails to ADMINs working #279 This is a test issue for purposes of a demo during Rocky Mountain Blockchain #270 game mechanics for project wheatgrass #260 sometimes web3 buttons on the gitcoin interface take 60s to respond #226 code: signal to tell user that unclaimed issues may already be in progress #206 Code Faucet Page #184 twitter posts about new funded issues do not unfurl correctly #110 move to python3, django 2.0 #68 Bounty Life-cycle #61 Merged pull requests: Fix migration conflict #395 ( mbeacom ) rollbar: replaces ** with Math.pow #392 ( thelostone-mc ) Increase code coverage #375 ( tyleryasaka ) js: replaced ** with Math.pow() #374 ( thelostone-mc ) Default network should be mainnet #371 ( jasonrhaas ) Update Docker image to support Windows #365 ( mbeacom ) Changes Math to Math.pow for gwei->ether gas calculation #358 ( poffdeluxe ) Use ImageOps.fit instead of Image.thumbnail #356 ( poffdeluxe ) css: set max-width to 100% to fix display #348 ( thelostone-mc ) Modify static handling to use Whitenoise #345 ( mbeacom ) css: prettified /help page #337 ( thelostone-mc ) allows multiple pending transactions at once #335 ( owocki ) html: replaced slack image with font-awesome icon #333 ( thelostone-mc ) diff favicons in prod vs local #328 ( owocki ) adds user action table, stats cleanup #327 ( owocki ) Adjust email handling for tip flow #326 ( mbeacom ) javascript: convert to es6 and make sure it passes linting #325 ( ethikz ) Kevin/new statuses #319 ( owocki ) pre_january2018_feature_integration2 (2018-01-29) Full Changelog Fixed bugs: standardbounties cleanup: Github claim work comment/interest comment updating seems to fail #282 When attempting to sign up for gitcoin slack I get a CSRF Failure #276 Closed issues: Error on DB restore #309 Uncaught ReferenceError: web3 is not defined #304 ReferenceError: web3 is not defined #299 ReferenceError: Can't find variable: web3 #298 ReferenceError: Can't find variable: web3 #296 Test issue from Rollbar #283 why are all the 404s 500ing #280 The first LIVE StandardBounties Bounty on Gitcoin #278 standardbounties: where do we store info that's not in the bounty detail spec? #253 standardbounties: migration plan #252 standardbounties: figure out how to massage expressed interest PR in #249 new 404/500 error page #231 typography cleanup after PR 116 #151 Merged pull requests: Modify slack email invitation handling #314 ( mbeacom ) (WIP) January 2018 Multiple Integrations #240 ( mbeacom ) pre_january2018_feature_integration (2018-01-26) Full Changelog Fixed bugs: www.gitcoin.co doesnt work #254 Closed issues: gh int: Add github logout method #266 standardbounties: support new IPFS schema #265 standardbounties: test ERC20 tokens #257 standardbounties: regression test the twitter notifications, github comments, and emails #256 standardbounties: estimateGas() #248 standardbounties: gas limit set too high #247 standardbounties: tx throws but the frontend thinks it succeeded anyway #246 standardbounties: integrate metamask gas estimates module #245 As a gitcoin founder, I want to send a demo funded issue, so I can demo the product to the mesh. #229 As a gitcoin founder, I want to send a demo funded issue, so I can demo the product to the mesh. #228 dataviz of gas costs vs confirmation time #209 design: waiting room quote while page is waiting for web3 updates #181 Code iOS landing page #174 core : contributing.md guideline + linter #65 Browser Extension Revamp #50 waiting room entertainment while tx mines #32 Mentors #30 Merged pull requests: Update notifications.py #277 ( tommycox ) Add Rollbar error handling #274 ( mbeacom ) doc: changed port to 8000 #272 ( thelostone-mc ) doc: changed port to 8000 in github integration steps #271 ( thelostone-mc ) Add initial pre-commit configuration #269 ( mbeacom ) roundup email 20170116 #243 ( owocki ) Fix the test suite isort failures #242 ( connorwarnock ) Changed bounties URL in JS to prevent 301 redirect #235 ( tossj ) backend db & API support to show how many comments exist for an issue #219 ( amites ) Gitcoin: Issue #174 #207 ( Elaniobro ) Changed links to MetaMask Chrome extension to MetaMask website #204 ( tossj ) Display random quote when a web3 transaction takes place #158 ( tra38 ) v0.1 (2018-01-10) Full Changelog Closed issues: test 123 #224 foo the bar #223 Error executing transaction #220 Search by nickname doesn't work #213 Design: Gitcoin Toolbox #133 submit_working (2018-01-09) Implemented enhancements: In the admin, create a view that shows bounties and tips over time #20 Design a more aesthetically pleasing bounty detail page #17 bounty details page should have a 'back' button on it #7 clawback expired bounty interface #5 Expose psql port in docker stack #217 ( mbeacom ) Fixed bugs: Tips: 7 second delay when clicking on 'send tip' on the mainnet. #16 Closed issues: Docker-based PostgreSQL port inaccessible locally #216 Toolbox page: launch it #196 design: signal to tell user that unclaimed issues may already be in progress #190 Disabled localStorage breaks Issue Explorer #188 code: /mission page #177 small module design: waiting room quote #175 Design: Faucet page #173 add /addon/ as firefox addon redirection #170 claim: gas limit is set over limit #169 Code HTML: Toolbox Page #168 Travis builds failing - ethereum dependency changes #163 oops #159 Csv export management command to spit out activity report #157 explore the idea of a gas faucet #153 In Issue Explorer, Double Quotes (\") are Displayed instead of Correct Single Quotes (') #150 Travis builds failing on cytoolz #142 Design: Mission, values, vision, how we interact #139 design: ios gitcoin.co landing page #137 Double @ sign in github bot comments #131 Some of the buttons are glitchy and unpolished. #126 remove uppercase text from text description #125 Pytest version conflict with ethereum package #123 Add missing migrations #121 Error in sync_profile #120 Python comment linting and semicolon/unused import removal #119 Specify validation error for email validation checks #118 AnonymousUser #117 css: resize images to fit within the timeline container #107 /slack page content view does not fill page width on mobile #105 mail: tip amount rounded off to 2 decimals showing cause incorrect amount on mail #103 Transaction Underpriced when you try to receive a tip #101 bug: roadmap items shift to adjust for content on hover #100 expire email should be targeted to personas #96 Old Etherdelta API 50x frequently #94 Testing Strategy #90 Some models don't handle plurals correctly in admin #86 Problem on claimming a issue #82 Missleading button \"Accept/reject claim\" for non founder of the issue #81 Database files not compatible with Postgres 10.x #78 Email heading messed up on mobile resolutions #77 Overhaul leaderboards page design #76 support ERC20 token conversion rates on tips/bounties funding #73 css: mailing list breathing space #66 bug: roadmap items move when hover over them #64 Code Testimonials into Landing page #63 Modify docker-compose.yml to reduce running/exited services / persistent volume #58 Add persistent volume for PostgreSQL data #57 Decrease Docker image size #56 The corners or #upper_left and .bounty don't line up #54 auto-estimate USD amount on gitcoin.co/tip #53 Design a testimonials module on the landing page #52 Wrong issue info #51 Post funded issue to Craigslist #42 Issues should be displayed in decreasing order of value #40 Submit a funded issue (or send a tip) and provide feedback on the UX. #37 docker container for running locally #33 Mock up an Organization Overview page #31 Ops: Create cloudfront invalidation programmatically upon deploy in deploy.bash. #19 Tip page link 404s #14 Demonstrate tipping via a video #12 draft a blog post about tim-berners lee #4 list of erc20 coins should be more elegant #3 Web3 bountydetails interface documentation #2 HTTP API Documentation #1 Merged pull requests: remove duplicate viewport meta #218 ( gasolin ) Update PULL_REQUEST_TEMPLATE.md #215 ( Elaniobro ) css: shrunk vertical navbar + refactoring #212 ( thelostone-mc ) Add RDN Token support #210 ( ice09 ) metamask gas price preview #205 ( owocki ) Gitcoin's Mission #203 ( eswarasai ) add \"setup database\" section to documentation #199 ( galaxy233 ) Remove all-caps default in /tip (yge) #195 ( bumi ) Add sane fallback for localStorage usage #189 ( eth-button ) html: fixed github repo link #187 ( thelostone-mc ) add activity_report management command #180 ( choochootrain ) toolbox: coded design #172 ( thelostone-mc ) carousel: fixed css #167 ( thelostone-mc ) Generate high-entropy secrets and codes #166 ( 10a7 ) Pin cytoolz to 0.9.0 to fulfill ethereum new reqs #164 ( mbeacom ) shared.js: Escape single quotes with &#39; #162 ( adtac ) TLDR section on landing page #161 ( owocki ) add http://arcade.city token base ARCD #155 ( ernaneluis ) docker: added node to configuration and css lint setup #147 ( thelostone-mc ) Resolve Travis failures on dependency conflict #143 ( mbeacom ) css: Quick style fix for buttons using the btn-info class #134 ( algae12 ) Glitches fixes and overall better buttons look and feel #127 ( algae12 ) Resolve false fail on Travis #124 ( mbeacom ) General python cleanup #122 ( mbeacom ) Remove all-caps (text-uppercase) classes #116 ( bumi ) fix roadmap items shift #100 #113 ( alx ) Remove misleading buttons on gitcoin UI #112 ( tra38 ) css: fixed overflow scroll on tip recieve page #109 ( thelostone-mc ) css: resize images to fit within the timeline container #108 ( algae12 ) fix: rounded tip amount to 3 decimal places in mail #104 ( thelostone-mc ) Add Travis and Codecov integrations #102 ( mbeacom ) small fix for forcing the images of podium be bigger on leaderboard #99 ( ernaneluis ) doc: added contributing.md #97 ( thelostone-mc ) Update get_prices to use new etherdelta WS API #95 ( mbeacom ) Simplify bounty management command #93 ( mbeacom ) fix of issue #76 Overhaul leaderboards page design #91 ( ernaneluis ) Fix display of plurals for some models in admin #88 ( mbeacom ) PostgreSQL alpine and docker compose restart policies #85 ( mbeacom ) Tips now show USD estimates #84 ( rajatkapoor ) Fix grammer in alert on tip page #83 ( edkek ) testimonial: added carousel on landing page #80 ( thelostone-mc ) css: prettify the subscribe button #74 ( thelostone-mc ) Update tip page to auto calculate USD #72 ( mbeacom ) Cleanup python imports #71 ( mbeacom ) Fix roadmap items move when hover over them. #67 ( sc0Vu ) Add psql persistence and remove redundant services #60 ( mbeacom ) Decrease Docker image size #59 ( mbeacom ) fix bounty definition height #54 #55 ( Kielek ) Correct comma typo in statement of Gitcoin aliases #49 ( iamchrissmith ) WEB3 API documentation #47 ( lawrencelink ) Minor Typo Error #45 ( k4m4 ) Craigslist #44 ( rajatkapoor ) HTTP Strict Transport Security #41 ( sergio-alonso ) Standard pseudo-random generators are not suitable for security/cryptographic purposes. #39 ( sergio-alonso ) Update link on image #15 ( bransbury ) add dropdown menu search via select2, fix #3 #13 ( gasolin ) Fix space, typo and rename #11 ( gamwe6 ) Send tips in one step via Gitcoin.co #10 ( owocki ) Fix instruction for running locally #9 ( cifvts ) Documents API Fields & Filter/Sort URL Parameters #6 ( anglinb ) * This Change Log was automatically generated by github_changelog_generator","title":"Changelog"},{"location":"mk_changelog/#change-log","text":"","title":"Change Log"},{"location":"mk_changelog/#head","text":"Full Changelog Implemented enhancements: Approval Required: Make it Clear Who is Actually Working #2100 Move Moderator Controls out of main Work Area #2045 Optimize Activity query on index page #2034 Gitcoin rain Animation Performance #2029 Replace sync_gas_prices web scraping with json #1921 gitcoinbot tune up #596 As a user, I don't want to see github comment blocks in the bounty detail/description #538 Add Notes Field When Funding an Issue #475 SVG and PNG conversions and handling for Avatars #2106 ( mbeacom ) dashboard: enable deep link of search #2062 ( thelostone-mc ) Change Bounty Details #1968 ( pinkiebell ) Confirming Auto-translation #1916 ( nanspro ) Fixed bugs: Bounty Crowdfunding USD Inaccurate #2179 Funder Clicked Kill Bounty on Accident #2144 Text unreadable due to low contrast with background on subscription form #2141 how it works page QA #2139 Widget errors #2063 bug - cookie header doesnt work with other languages #2052 Contributor Landing Page CSS Bug #2041 Clicking Stop Work Did Not Stop Work #2032 Bad USDT conversion data #2015 Funder Unable to Approve Worker #1985 404s on gitcoin profiles #1952 Better State Management: \"No result found\" and \"Results\" are getting displayed at the same time #1938 Small issue with display #1934 AttributeError: 'list' object has no attribute 'split' #1919 Debug and resolve preferred_payout_address irregularities #1902 ValueError: The API key that you have entered is not valid, did you enter a username by mistake? #1898 Stop Work displays on old Start Work activity feed entries #1854 Bug: Clicking in the form should clear the plan template #1852 Incorrect Funding Time Period Shown on Issue Details #1774 == BUG LIST - JULY 2018 == #1671 css: remove overflow hidden #1616 Make Button Updates to Avatar Builder #1567 Show Just 1 Alert Banner for ERC20 Token #1566 avatar bug -- wrong eye color #1543 Avatar Builder Bugs #1523 BUG Personal Information Display on Unselected Option #1387 This bounty was 'killed' but gitcoinbot commented on the thread saying it was approved / accepted. #703 There is something wrong with links visibility in Gitcoin announcements mails. See screenshot. #702 crowdfunded: bug fix #2180 ( thelostone-mc ) Add overflow in header if minihero not present #2080 ( SaptakS ) api: fixed offset param in explorer #2006 ( thelostone-mc ) Fix assemble_leaderboards to catch missing all_ cases #1851 ( mbeacom ) Closed issues: \"Submit Work\" javascript error #2182 bug - quarterly roundup is broken #2151 Make Cancel Bounty More Explicit #2145 Update Cookie Banner with Shorter Text #2122 Submitting Work Twice #2118 bug - avatar builder does not register new assetes #2102 AttributeError: 'NoneType' object has no attribute 'interested' #2094 As a contributor, I don't want to have to do math to understand the total amount of a funded bounty that has additional crowd funding. #2072 ValueError: too many values to unpack (expected 2) #2066 As a developer on Gitcoin developing for Gitcoin, I would like some direction on how to use the Rinkeby network to test out Gitcoin #2065 Update Issue Expiring Email #2061 as a user who is bountying on behalf of my company, i want an invoice for a bounty, so i can expense it #2057 Gitcoin Requests (v0: Fork of Gitcoin Faucet) #2036 TypeError: unsupported operand type(s) for +: 'float' and 'NoneType' #2031 issue explorer keyword bug #2011 Add Ability to Select a Contributor via autocomplete to Tip #2001 Submitted \"start work\" info-comment did not show up in the connected GitHub issue. #1999 Workers who are not approved to work on a task should not be warned for abandonment, the 3-day Gitcoin bot nudge should start from the point of approval, not the point of application #1996 as a bounty hunter, I want to be reminded to submit my work on Gitcoin once the ticket is closed on Github so I can get paid out for my work #1990 Multi-Party Payout Recipients Not Showing in 'Work Done' #1983 Auto-Approvals: No Update of Gitcoin Activity (in Issue Details) #1981 test github issue for demo to token foundry #1979 invalid literal for int() with base 10: '926)' #1972 No values in \"Denomination\" input #1970 Make it Easy for Funders to Reserve an Issue For or Tag a Contributor #1956 August Cut Off ======================= #1955 Make it Clear for Funders - How to Payout #1950 RelatedObjectDoesNotExist: User has no profile. #1949 Add Approve Worker on Issue Details #1947 User Receivin Twin Emails #1946 Make Clear on Funder Form How Syncing and Editing Works #1943 UX Add Project Type + Approval Settings to Issue Details #1928 Create \"My Grants\" Page - Design #1909 Add Project Length to the Issue Details Summary #1888 Infrastructure: Caching and response time optimizations #1881 Infrastructure: healhchecks and scalability #1880 Funder Dashboard #1878 Plan for Contributor Dashboard #1877 Funder Habit Forming #1872 Confirm Auto-Translation of Gitcoin to Japanese #1863 Landing Page Update #1861 Confirm Auto-Translation of Gitcoin to Hindi #1844 bug - https://gitcoin.co/get 502's out #1842 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1835 crowdfunding v2 #1832 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1815 How It Works V2 #1808 View By Orgs V1 #1798 crowdfunding v2 #1797 Add Deep Link to Explorer Search #1791 BadFunctionCallOutput: Could not decode contract function call getBountyData return data b'' for output_types ['string'] #1777 BadFunctionCallOutput: Could not decode contract function call getFulfillment return data b'' for output_types ['bool', 'address', 'string'] #1754 What is the data flow? Do you have a diagram? Is data written to IPFS or postgres first? And what is initiator of action? #1710 Have the Staketree contracts been audited? #1709 Do the Staketree contracts need any tuning? Are we going to use contracts that are already deployed or deploy our own instances? #1708 Should there be a view for a patron to check on the status of their grant subscription(s)? #1707 Should there be a view for a developer to check on the status of their grant(s)? /grants/yourgrants, /grants/grantstatus #1706 Ensure Staketree contracts have all required functionality, linting, and tests #1705 Write tests for newly implemented smart contracts #1704 Write tests for newly implemented backend #1703 Write tests for newly implemented frontend #1702 implement any needed routes #1701 Ensure data is stored correctly in each location. #1700 Figure out data flow and ensure actions are performed on blockchain, IPFS and postgres in correct order. #1699 Implement any needed functions #1698 Check web3 functionality. Is it implemented in Kenneth's code? Are the contracts being instantiated and made visible? #1697 Instantiate contracts and point functions correctly #1696 BUILD Action Plan Example for Start Work Dialog #1674 Work Schemes - How it Works Break Down #1670 BadFunctionCallOutput: Could not decode contract function call getBountyToken return data b'' for output_types ['address'] #1626 Individual Market V1 #1623 BadFunctionCallOutput: Could not decode contract function call getBountyArbiter return data b'' for output_types ['address'] #1612 BadFunctionCallOutput: Could not decode contract function call getNumFulfillments return data b'' for output_types ['uint256'] #1608 As a user on Contributor Landing Page v2, I want programming language specific terms, so I can see bounties / opportunities relative to my skillset #1599 Update Fund Issue Icon #1568 Remove 'Dibs' from Gitcoin Bot comment on Github #1535 CODE - As a user, I want gitcoin.co/vision to exist, so I can understand the core team's vision. #1510 The BIG Gitcoin Grants (powered by Staketree) Bounty #1469 DESIGN - As a user, I want gitcoin.co/is_not_a_shitcoin to exist, so I can understand why Gitcoin did not do a token / token sale. #1443 As a funder, id like the ability to extend the expiration date of a bounty, so i can keep it open #1427 BUG -- Profiles with no info on them look funny. #1363 AuthStateMissing: Session value state missing. #1290 As a user, I want to be able to pledge to an already-pledged issue #1287 FieldError: Cannot resolve keyword 'github_issue_number' into field. Choices are: _val_usd_db, accepted, balance, bounty_owner_address, bounty_owner_email, bounty_owner_github_username, bounty_owner_name, bounty_type, canceled_on, contract_address, create #1228 Integrate with the Elastic APM library #1208 Add Elastic APM to k8s stack #1207 USABILITY/PERFORMANCE EPIC #1140 RESEARCH & DATA EPIC #1138 BLOCKCHAIN PROJECTS EPIC #1137 FUNDER WORKFLOW EPIC #1136 UNIQUE GITCOINER EPIC #1134 INFRASTRUCTURE EPIC #1133 COMMUNITY IDEAS EPIC #1132 CONTRIBUTOR WORKFLOW EPIC #1131 MARKETING/ BD EPIC #1130 ONBOARDING EPIC #1128 Fund Bounty With Multiple Tokens #1100 what languages should we support next? #970 I've lost track of my bounty tip #968 Relationship Between Toolbox Items and Core Product #851 EthOS -- a SolidCoin Experiment #843 Duplicate \"Funds Paid\" email being sent #837 test out autotranslate #814 Grants Landing page #718 Translate the webapp to other languages #643 Expired Status == Open Status? #637 How Does This Work? #633 when a tip is redeemed, gitcoinbot should comment back on the thread and let everyone know #597 New Navigation Structure Research #587 Mobile Audit of Gitcoin.co #561 as a new user, how do i update my github username on the funding/new page? #542 galaxy s8 chrome mobile display issues #496 as a user, i want to be clear which bounty fields are going to be public, so i can manage my privacy #451 Use Gitcoin Brand Template on Terms Page #435 Relevant information needed to understand gas price #431 User feedback: claiming of issues #403 (unknown): uncaught exception: not supported #324 Merged pull requests: Roundup email updates for 7SEP2018 #2181 ( mbeacom ) svgo: compress img #2172 ( thelostone-mc ) Refactor issue expiration email #2162 ( SaptakS ) migrates from current_bounty=True to .current() because the latter is\u2026 #2161 ( owocki ) Add middleware to disable autodetect lang by header #2157 ( mbeacom ) Hide Personal Information on Unselected Option #2156 ( rahulpat ) avatar: ui fixes #2154 ( thelostone-mc ) Update title to issue in slack notifications #2153 ( arun1595 ) bounty: changes cancel button to red #2146 ( thelostone-mc ) css: fix missing background color #2142 ( thelostone-mc ) review: added feedback #2140 ( thelostone-mc ) bot : remove dibs text from message #2138 ( thelostone-mc ) newsletter 8/31 #2136 ( vs77bb ) Fix minor grammatical issue #2135 ( arun1595 ) Cleanup email templates #2133 ( mbeacom ) Isolate moderator and admin actions for ease of usability #2132 ( arun1595 ) show accept/reject bounty in permissioned bounty #2131 ( thelostone-mc ) landing: reduce size of title on mobile #2128 ( thelostone-mc ) Adding icons to tree section #2127 ( nanspro ) Update text for cookielaw #2124 ( SaptakS ) Fixes version of eth-utils and web3 to make compatible with other pac\u2026 (Ended up fixing eth-abi and keeping eth-utils and web3 to the same version to avoid breaking) #2123 ( SaptakS ) update : how_it_works page #2121 ( thelostone-mc ) bounty: enable submit only once per user #2119 ( thelostone-mc ) small tip tweaks #2111 ( owocki ) bounty: crowdfunded bounties #2109 ( thelostone-mc ) Add user search autocomplete #2108 ( octavioamu ) eslint: fix #2107 ( thelostone-mc ) migrates from current_bounty=True to .current() because the latter is more exhaustive #2105 ( owocki ) Adds some new eye styles. Male & female versions! #2099 ( saricden ) Adds codefund banner in the issue explorer and issue details page #2095 ( SaptakS ) newsletter 8/24 #2093 ( vs77bb ) Add base elastic apm integration #2092 ( mbeacom ) warns user if they try to bounty something but dont have enough tokens #2086 ( owocki ) Add (Issue is closed) to the 'View on Github' button if is_issue_closed. #2081 ( pinkiebell ) eslint : lint fixes #2079 ( thelostone-mc ) Update static references to replace hardcoded graph and gas static references #2076 ( mbeacom ) shared.js: Add {show,hide}BusyOverlay #2073 ( pinkiebell ) Fixes navbars with dash class, the narrow navbars #2070 ( SaptakS ) Fix widget loop #2068 ( octavioamu ) fix widget errors #2064 ( octavioamu ) Add base healthchecks and LB 200 endpoint #2060 ( mbeacom ) invoices #2059 ( owocki ) dashboard: remove save search link #2058 ( thelostone-mc ) Gitcoin Bounty Requests V0 #2056 ( pinkiebell ) refactor: remove save search #2051 ( thelostone-mc ) Rain #2049 ( octavioamu ) Use S3 to serve static #2048 ( mbeacom ) Add shirtsweater avatar asset #2047 ( ajayns ) Multi-Party Payout Recipients Not Showing in 'Work Done' # #2040 ( owocki ) new leaderboard items #2035 ( owocki ) code clean up #2033 ( thelostone-mc ) refactor: remove unneeded html tag #2030 ( thelostone-mc ) deprecates old tip receive flow #2027 ( owocki ) Create grants branch on gitcoinco/web repo #2018 ( captnseagraves ) newsletter 8/17 #2017 ( vs77bb ) pages/dashboard: Fix issue explorer keyword bug #2012 ( pinkiebell ) Remove FullStory #2009 ( mbeacom ) Fixes text and alignment of no-issue-banner #2007 ( SaptakS ) bounty: enable accept / reject worker for owner #2005 ( thelostone-mc ) Auto-Translation to Japanese #1863 #2003 ( aashutoshrathi ) Rename Chinese locale file to correct format. #2002 ( ziyangkoo ) css: fixes #1998 ( thelostone-mc ) start work : update placeholder #1994 ( thelostone-mc ) Newsletter 8/10 #1984 ( vs77bb ) gas guzzlers in gas station #1980 ( owocki ) Upgrade cryptography python package to 2.3 - Security #1978 ( mbeacom ) img: removed unused images #1975 ( thelostone-mc ) replaced misspelled 'deonomination' with 'denomination' #1974 ( zevaverbach ) Strip characters from stdbounties_id and check isdigit #1973 ( mbeacom ) uri : cleanup #1971 ( thelostone-mc ) Redis based caching #1969 ( mbeacom ) workaround for ipfs hashes not existing #1965 ( owocki ) new bounty : updated UI #1963 ( thelostone-mc ) fix #1921 replace sync_gas_prices from web scraping to json #1959 ( PumpkingWok ) what_is_gitcoin : revert to old design #1957 ( thelostone-mc ) bounty: restructure pages #1948 ( thelostone-mc ) explorer: ensure results from latest api call are served to the user #1941 ( thelostone-mc ) hack: trailing slash for profile #1937 ( thelostone-mc ) Fix #1934 - Resolve cancelled funds appearing in profile total #1935 ( mbeacom ) allow trailing slsah for profile #1931 ( thelostone-mc ) livestream 8/3 #1930 ( vs77bb ) Improve tip slack notification #1929 ( arun1595 ) lander video switcharooooooooooooO #1927 ( owocki ) sets the bounties limit if not specified, for performance reasons #1925 ( owocki ) sync geth stopgap fix #1924 ( owocki ) Switching tree section on landing page #1923 ( nanspro ) Display project length in issue details page #1922 ( arun1595 ) shared.js/mutate_interest: Show a generic message on network errors. #1918 ( pinkiebell ) Upgrade django to 2.1, modify field defaults, and address deprecations #1915 ( mbeacom ) as a user, i want documentation about chain of custody, so that i know my funds are secure #1913 ( owocki ) dashboard: remove tech stack filter #1911 ( thelostone-mc ) not_a_token page #1906 ( octavioamu ) Moderators v1 #1903 ( mbeacom ) Update the presskit copy #1900 ( mbeacom ) Restructure #1897 ( thelostone-mc ) sends an email to funders who have been inactive for 30 days, asking if they have any feedback #1894 ( owocki ) Split create_new_bounty kwargs building and check if once #1892 ( mbeacom ) change name of missing image #1891 ( octavioamu ) refactor PR #1887 ( thelostone-mc ) as a user, i want receive tip email copy to be clear, so i know where to find my ETH #1886 ( owocki ) added branding style to terms page #1869 ( evgeniuz ) css: minor refactor #1862 ( thelostone-mc ) expiration start work day 0 #1857 ( owocki ) Minor tweaks to action plan textarea #1856 ( arun1595 ) fix it twice for 'why cant i payout this issue?' question for funders #1853 ( owocki ) css: display filter tags + sort on mobile #1849 ( thelostone-mc ) Sentry integration #1846 ( mbeacom ) Visually improves the readonly fields #1845 ( SaptakS ) leaderboard on weekly roundup #1841 ( owocki ) Extend expiration of bounties #1838 ( SaptakS ) contributor page: css updates #1833 ( thelostone-mc ) adds recent activity on funder landing page so ppl can see how active the site is #1831 ( owocki ) Rework 'Start Work Dialog' and gitcoinbot message structure #1781 ( pinkiebell ) [WIP] UI Inventory #1755 ( pinkiebell ) Crowdfunding of Bounties && New Tips Architecture && Social Sharing #1737 ( owocki ) nav_auth.html: make nav_avatar an \\<a> tag and link it to /profile/. #1690 ( pinkiebell ) Show Just 1 Alert Banner for ERC20 Token #1668 ( pinkiebell )","title":"HEAD"},{"location":"mk_changelog/#pre_crowdfund-2018-07-25","text":"Full Changelog Implemented enhancements: Make GitcoinBot Recognize Closed Issues. #1640 Confusing placeholder text for issue URLs #1194 Gitcoin Bot Enhancements #1040 as a user, i want the ability to test slackbot integration so i can know it's working #1004 Links opening in new tab/window open in same target #676 As a user, I want to sort and filter the bounty list by technical stack / keywords #343 Modify issueURL placeholder text to reflect GH issues #1195 ( mbeacom ) Add yapf linting base and lint dataviz app #1169 ( mbeacom ) gitcoinbot: updated language #1150 ( thelostone-mc ) css: fixed comment layout #1073 ( thelostone-mc ) fixes https://github.com/gitcoinco/web/issues/1040 #1043 ( owocki ) drastically improve api read performance #1026 ( owocki ) bounty: unify modal designs #809 ( sethmcleod ) Fixed bugs: StatisticsError: no median for empty data #1809 Too Many Alerts #1792 Gas Price Showing as a Funded Issue? #1773 Title & Descriptions not Displaying in Funder Form #1772 Gitcoin Bot Bounty Value Missing on Github Issue #1771 User Profile and Gitcoin Logo are not clickable #1739 Error Alerts Should Convey a Problem #1692 Button Text Not Legible #1686 Back Button on Contributor Ftux Not Working #1685 White paper page isn't responsive and rendering is off #1641 BUG -- gitcoinbot not commenting on github thread for bountied issues #1627 Uncaught TypeError: Cannot read property 'getBoundingClientRect' of undefined #1603 Dai Value Bug Gitcoin Bot #1592 Disable Editing of Issue Description on Funder Form #1588 bug - issues on accept work page #1580 [Bug] As a funder, I cannot approve a bounty hunter for work. #1537 Avatar Bug on Mobile #1527 Incorrect values (# bounties completed and $ rewarded) in the Leaderboards #1506 Error in the Home link extracted from Github. #1505 TypeError: unsupported operand type(s) for *: 'float' and 'decimal.Decimal' #1503 UnboundLocalError: local variable 'interest' referenced before assignment #1502 Bug: Broken Links in Footer #1435 New footer messsed up on https://gitcoin.co/ios #1430 Gitcoin completion/funding counts on org icons are incorrect #1404 SyntaxError: illegal character #1398 SyntaxError: Unexpected token '>' #1395 ReferenceError: moveWithScroll is not defined #1394 TypeError: Cannot read property 'getItem' of null #1393 BUG Image Not Displaying on Issue Details #1391 BUG Markdown Messed Up on Issue Detials View #1388 Update Soft & Hard Expired #1375 BUG -- Cancelled Bounty on Gitcoin Did Not Return Funds #1367 Require agreement on kill bounty #1358 BUG - Black circle on ENS page #1353 Running sync_geth against Rinkeby results in all unknown schema errors #1334 Visiting Tools continuously makes failed requests #1324 Back button UI is messed up in Receive Tip success page #1313 BUG - profile has inconsistent stats #1293 As an anonymous user, I would like to unsubscribe from email notifications. #1165 Unable to filter for C# #1078 Profile editing fails due to required slack fields #1072 'Stop Work' button appears on someone else's work. #1067 Gitcoinbot work submitted message has weird formatting #1063 can't search by freeform text anymore #1046 Cannot claim bounty on Rinkeby #854 erroneous gitcoinbot comment #733 Gitcoin issue status changed back to Open from Work Started #695 Links opening in new tab/window open in same target #676 add sorting functionality back to the gitcoin explorer #570 users reported receiving each email twice #115 Remove duplicate Tip properties #1810 ( mbeacom ) Fix division by zero error #1805 ( arun1595 ) WIP: Fix record_bounty_activity.. #1660 ( pinkiebell ) Clean up user's personal URL from github #1512 ( arun1595 ) ios: updated css + refactored #1445 ( thelostone-mc ) Update slack CTA link #1415 ( arun1595 ) Clean hashbang from gh urls #1381 ( mbeacom ) Fix font awesome icon classes #1354 ( arun1595 ) Fix feedback icons overlap with input value and center the icons vertically #1349 ( arun1595 ) toolbox: avoid $.get when url is undefined #1325 ( thelostone-mc ) dashboard: results row fix #1307 ( thelostone-mc ) ENS: Ensure 10%+ gas minimum #1303 ( mbeacom ) bug: set width to 100% on magnify #1178 ( thelostone-mc ) bug: added button--primary to back to gitcoin button #1168 ( thelostone-mc ) Closed issues: AttributeError: 'NoneType' object has no attribute 'fulfillments' #1826 AttributeError: 'NoneType' object has no attribute 'fulfillments' #1825 AttributeError: 'NoneType' object has no attribute 'fulfillments' #1824 StatusError: HTTPError: 504 Server Error: GATEWAY_TIMEOUT for url: https://ipfs.gitcoin.co:443/api/v0/cat?stream-channels=true&arg=QmfC7iLEvAwe8xDqk8FmGaoGbB3QGRNL3EYzFUfVkde1vo #1821 AttributeError: 'NoneType' object has no attribute 'fulfillments' #1820 StatusError: HTTPError: 504 Server Error: GATEWAY_TIMEOUT for url: https://ipfs.gitcoin.co:443/api/v0/cat?stream-channels=true&arg=QmNk3CfMScMut3kcFKP7DMCV1y1ZF99D8N3hNZ1bmGqj2T #1819 The sumo popup doesn't trigger for new visitors #1812 ZeroDivisionError: float division by zero #1806 Add autotranslate base for Chinese #1804 Cannot fund issues #1801 Include link to bounty in Gitcoin bot's post #1794 Image alignment is wrong on /bounty/quickstart #1766 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1762 Testing Fund an Issue #1761 BUG - emails to email_logger@gitcoin.co are cheiwng up our sendgrid credits #1760 Bounty on Gas Price Analysis Content - 7/15/2018 #1751 NameError: name 'tokens' is not defined #1748 JSONDecodeError: Expecting ',' delimiter: line 1 column 597 (char 596) #1745 TemplateDoesNotExist: head/v2/images/avatar/head/1-f8d5c2.svg.txt #1744 ValueError: not enough values to unpack (expected 2, got 1) #1743 Bug - gas page is not mobile friendly. #1742 Get project to stable point, rebase current KennethAshley:grants with gitcoin:master #1713 Set up project and run tests to ensure baseline #1712 Determine whether 199 skipped tests is normal or not #1711 CODE - as a marketer, i want gitcoin.co/presskit so I can know Gitcoin's brand guidelines #1683 as a user, i want this module on /about to be clickable, so i can click it. #1682 BUG - Exception when loading /explorer via API on local #1679 Coop Bounty - 1 Start Work Missing #1678 Implement Gitcoin internationalization / i18n support #1675 Bug: Code not visible on website #1667 bug - misaligned css on the acceptance page #1665 dupe activities #1661 Wrong profile in activities / messed up activity log #1659 ZeroDivisionError: float division by zero #1650 Organizations V1 Tech Approach #1643 View Of Hidden Bounties #1636 As a user, I want the cookie popup to not show up until the sumo popup is dismissed, so they don't overlap with each other? #1630 Metamask Locked button not prominent on Navbar #1629 V2 Metamask Connection State #1625 Exception: attempting to create a new bounty (875) when is_greater_than_x_days_old = True #1620 in tip flow, user should be notified if they are on the wrong network #1606 as a user, i want standard bounty tx's to be processed instantly by gitcoin, so i know my tx went through #1605 Contributor Landing Page QA #1594 Dropdowns on the topbar don't close when clicking on another dropdown #1593 IndexError: list index out of range #1565 Build Waiting State #1562 Update Buttons in Account Settings #1561 Updates - Activate DAI #1560 Fund Issue button out of place on mobile #1557 as a user, i want to be prompted to login when creating my avatar so i dont waste time building an avatar and can't save it #1554 Create Profile Flyout #1529 Add Link to Access Avatar Builder #1520 Outstanding Funder Form Updates #1519 Contributor Ftux V1.1 #1516 Put Admin Controls on one line #1511 States \"please review questions\" - but there are no questions #1509 Update Notif-Gitcoin Message Format - Slack #1507 Outstanding avatar issues #1504 Disable Gitcoin Bot Responses #1498 design: new 404 page #1493 travis fails with 'The command \"pytest -p no:ethereum\" exited with 1.' #1492 Change login link hover color on ENS page #1484 Remove Extra Kerning on All Gitcoin Emails #1480 Make Icon on Issue Explorer Circular #1478 DESIGN View by Org on Issue Explorer #1467 Admin Toggle - Clear Comments on Github Issue #1465 Code - Update https://gitcoin.co/mission to show off that we use an open protocol #1463 As a user, I want a beautiful svg animation for the Gitcoin Tree as I scroll down the landing page, so I can be enamoured with the mission to grow Open Source #1462 z-index issue on gitcoin.co/ens #1457 BadFunctionCallOutput: Could not decode contract function call getBountyToken return data b'' for output_types ['address'] #1456 Ratelimited #1455 DESIGN - as a marketer, i want gitcoin.co/presskit so I can know Gitcoin's brand guidelines #1451 As a user, I want a better 404 page for hidden profiles #1436 Bring Discord Bot to Parity with Slack Bot #1434 Funder Feature - Extend My Bounty Time Frame #1429 Gitcoin Bot and Project Status #1425 Uncaught SyntaxError: Unexpected token => #1423 Frontend Coding Advanced Payout Feature #1422 can't run docker-compose up -d --build #1419 Uncaught ReferenceError: Accounts is not defined #1418 Gitcoinbot should not do reminders on contest/cooperative bounties #1409 As an admin I want to triage the Landing Page Conversion Rate, which is way down since the new LP launched. #1408 Gitcoin Landing Page V2.1 #1407 BadFunctionCallOutput: Could not decode contract function call getBountyData return data b'' for output_types ['string'] #1400 As a funder, I'd like to know how many times a developer has started a bounty but not finished it #1390 BUILD Contributor Landing Page #1386 As a funder, I want to allow the crowd to increase contributions to a bounty, so we can crowdfund issues. #1380 As a funder, I want to changeBountyFulfillmentAmount() for contest/cooperative bounties, so I can pay out multiple submissions #1379 Gitcoin organization shield #1378 Add Visual to Gitcoin Bot Status #1374 TypeError: object of type 'int' has no len() #1371 Update https://gitcoin.co/mission to show off that we use an open protocol #1370 BadFunctionCallOutput: Could not decode contract function call getBountyArbiter return data b'' for output_types ['address'] #1369 test 3443 #1366 on the new funder form, the design of the price estimation is wrong #1361 As a funder, I want to have a 'Powered by Gitcoin' button so that I can forward people to Gitcoin on my existing bounty page #1359 Form input feedback icon overlaps with a long input field value #1348 As a user, i'd like faucet distributions to scale up and down with the eth network backlog so i can always have enough gas to submit a standard bounties tx #1341 Admin: Stop Work + Stop Work & Slash #1340 empty user comments should be handled on gitcoinbot #1336 fontawesome : Revert to css #1331 system thinks bounty is cancelled when it is not #1326 'Email us' link in New funding page throws 404 #1320 Notify me if a 2nd Person Starts Work #1319 Tip form pre-populates with last sent tip information #1315 Gitcoin $50K Creative :) #1312 ValueError: {'code': -32000, 'message': 'replacement transaction underpriced'} #1302 code - as a community member, i want a public gitcoin.co/results page, so I can show off that the system is working #1300 Pytest / Travis failing TestAssembleLeaderboards.test_handle_command #1298 organization profiles #1292 windows variable error when submiting work? #1291 ValueError: {'code': -32000, 'message': 'known transaction: cc3dd39aed568cef83849b8af36191ba49c3dbb0ba818c1b9e0f3462d0d9c9f0'} #1289 TypeError: unsupported operand type(s) for /: 'NoneType' and 'int' #1288 TypeError: unsupported operand type(s) for /: 'NoneType' and 'int' #1286 prune DB size #1278 AttributeError: 'NoneType' object has no attribute 'replace' #1274 Modular FTUX #1267 Bounty amounts not showing on /profile #1264 Profile V3 #1263 Fix Settings Responsive View #1261 add saptak/aditya/scott to the team page on /about #1257 BUILD: HOW IT WORKS #1244 GDPR: DISCONNECT & DELETE #1243 GDPR: Write Email To Gitcoin Community #1242 GDPR: Update Email Preferences #1241 GDPR: Update Privacy Tab #1240 GDPR: Show Message in Modal #1239 GDPR: Remove remembering terms #1238 GDPR -- Privacy Policy Updates Email #1237 GDPR -- Cookie Consent #1236 GDPR: Settings Content Updates #1235 GDPR - check about checkbox prefills #1234 GDPR -- Ask for re opt-in from all EU customers #1233 GDPR -- update privacy policy #1232 GDPR -- Add info to our contact forms #1231 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1230 Ratelimited #1229 FieldError: Invalid order_by arguments: ['http://testasp.vulnweb.com/t/xss.html?%00.jpg'] #1227 ValueError: The ExternalBounty could not be created because the data didn't validate. #1226 Detailed Funder Flow with multiple issue support #1224 Design Developer Landing Page #1223 Code - cleanup mission / values page #1220 Add CSAT surveys for bounty interactions - FE #1211 Add CSAT surveys for bounty interactions - BE #1210 Add NPS feedback for the platform #1209 Add the kubernetes base IaC to repo #1200 \u600e\u6837\u7528JAVA\u8bed\u8a00\u7f16\u8bd1\u4e00\u4e2a\u65f6\u5149\u6c99\u6f0f\u3002 #1191 Failing pytest - test_tip #1172 ValueError: The 'node_image' attribute has no file associated with it. #1154 ValueError: The 'node_image' attribute has no file associated with it. #1153 post an ethereum themed gif #1149 RESEARCH EPIC #1139 test #1135 Parent of #920 #1127 Epic 1 #1125 Abstract Away Gas Price / Gas Limit #1124 nginx Doesn't Seem to Recognize (or Direct Properly) www.gitcoin.co #1122 As a user, I want to be prompted to authenticate before seeing a start work modal #1107 How to surface work schemes to the community #1106 Make Image a Thumbnail for Long Descriptions #1105 Build New Gitcoin Landing Page #1104 BUILD - As a funder (Project recruiter), I want a place where I can track all my stuff, so i can have a flow of web3.0 talent #1092 As a member of the community, I want these Profile Privacy Features, so I can be more private #1091 SyntaxError: broken PNG file (chunk b'\\x00\\x00\\x00\\x00') #1089 e-mail should be optional #1088 Transactions didn't post after adding higher gas price in meta mask #1069 Local storage of explorer filter does not consistently load #1064 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #1057 Misalignment with arrows on new page #1056 as a user, i want to be able to save my avatar to be my gitcoin profile #1051 as a user, i want to know when my information is gonna be public, so i can manage my info privacy #1048 BadFunctionCallOutput: Could not decode contract function call getNumFulfillments return data b'' for output_types ['uint256'] #1047 BadFunctionCallOutput: Could not decode contract function call getFulfillment return data b'' for output_types ['bool', 'address', 'string'] #1045 'Stop Work' Enhancements #1041 Started work / Stop Work History #1037 Funder Dropdown Options #1030 Cannot read property 'split' of undefined #1025 design - as a community member, i want a public gitcoin.co/results page, so I can show off that the system is working #1020 Add discord bot integration #1015 List used contracts under metamask icon in the footer #1013 Explorer multiselect \"Any\" option doesn't behave as expected #1011 as a user, i want one click approval of erc20 token bounties, because its faster and easier #1007 Build Quickstart Screen & Tidy Up Funder Flow #982 as a repo owner, i want different bounty work schemes, so i can choose the right bounty type for the job #973 Create Seamless Onboarding Experience - Contributor #957 make gitcoinbot status indicator into an image #952 code - as a user, i want a quarterly 'my stats' email, so i can see my activity on the platform #946 code - gitcoin.co/activity #925 Code - Profile Frontend Refresh #920 as an admin, i want to spin up a gitcoin geth node, so i can use it for gitcoin stuff #901 FTUX Backend #859 Funder Activities Task Flow #852 Funder FTUX #850 How to ensure funder payout? #848 Event Flier #847 New Marketing Landing Page #846 Gitcoin Email Updates #845 As a user, I want to build an Avatar, so I can show off my bad self. #813 seperate repo owners / developers earlier in the landing page #811 DESIGN - cleanup mission / values page #805 [DESIGN] - Bigger Text Area for Bounty Description #781 in my settings, i should be able to disguise myself from the leaderboard/having a profile #710 better guide rails around what tasks are a good fit for gitcoin, how to price them #681 [DESIGN] Gitcoin Requests #671 Feedback mechanism funder + contributor for each project #660 Design: Profile Refresh #656 As a user, I want a \"My Work' module so I can see what work is active / done for me on gitcoin #655 confusing first user experience for bounties #652 as a marketer, i want a specific landing page for python, so i can better target consumers #620 Increase Code Coverage by 4% #607 Gitcoin Bounty Hunter Explorer Dashboard #588 Gitcoin Bot Updates #567 Consolidate Funder Actions Into a Dedicated Area #534 How to Get Started (Developer) #516 as a user, i want tooltips on gitcoin.co/new to tell me what each field does #497 gitcoin ENS subdomains #450 As a user, I want to add an 'apply' step to the bounty process, so I can accept the best applicants #442 Build Onboarding Flow - MVP #441 Clear and concise series of Gitcoin emails #438 Unify Modal Designs #430 Clear distinction between content that is clickable and not #427 Clear no results page #418 Consistent messaging across the app #417 As a developer, I want grants available to sponsor my ongoing work in open source. #380 Error: MetaMask detected another web3. MetaMask will not work reliably with another web3 extension. This usually happens if you have two MetaMasks installed, or MetaMask and another web3 extension. Please remove one and try again. #368 as a website mantainer, i want a javascript widget that can show off my bounties, so i can lead more of my community to gitcoin #354 css : Media queries to fix up the landing page #273 stale bounties filter #197 mission / values page v2 #178 Allow users to view their tips / bounties on the web. #141 Tip Receive UX Flow Feedback #136 Epic CSS Cleanup #135 Feedback from a user: ability to manage keyword prerferences. #132 Find funded issues by specific address #92 Send a notification (github, browser, or otherwise) instead of email for tips/bounties. #43 Bot / Github integration Revamp #34 Job Matching Engine #28 Pilot Partnerships #27 Make Language filter UI clearer in Bounties #25 The big 'feedback on the project' post. #18 Merged pull requests: fix for stretched laptop on contributor landing page #1829 ( owocki ) activity feed on landing page to increase conversion rate #1828 ( owocki ) Change color of payout submit button #1827 ( SaptakS ) dashboard/templates: Add 'required' attribute to all 'terms' checkboxes #1818 ( pinkiebell ) Fix checkbox icon #1817 ( octavioamu ) shows how it works on landing page / external nav #1813 ( owocki ) Utilize hosted IPFS node and fallback to Infura #1802 ( mbeacom ) restructuted profiles #1800 ( thelostone-mc ) Do not display an 'wrong network' alert banner if metamask is locked. #1796 ( pinkiebell ) Add gitcoin bounty details url to start work github bot copy #1795 ( mbeacom ) consolidated payment wizard flow #1789 ( owocki ) Make back button work on contributor onboard #1788 ( mttmartin ) attach job desc ux fixes #1787 ( owocki ) Replace disabled attribute with readonly for title and desc #1785 ( SaptakS ) General lint/cleanup of tip views #1784 ( mbeacom ) Refactor GH issue details endpoint #1780 ( mbeacom ) Disables editing of the issue title and description #1779 ( SaptakS ) urls.py + about #1778 ( thelostone-mc ) Adds gasLimitEstimate for bulk payout #1776 ( SaptakS ) Adds google optimize to contributor landing page #1775 ( SaptakS ) Remove soft-expired logic from user interface. #1768 ( pinkiebell ) Fix image alignment on /bounty/quickstart #1767 ( pinkiebell ) Mobile responsive Gas Navigation and Resizing SVG gas graphs #1765 ( Kempo ) fixed linter errors. assigned new variable in for loop. #1757 ( whb07 ) css: fixed loading state #1752 ( thelostone-mc ) 3d dataviz of gas prices vs confirmation time #1749 ( owocki ) Make the user profile in onepager link to /profile/ #1740 ( pinkiebell ) onepages: updated to Muli & letter-spacing #1736 ( thelostone-mc ) Gitcoin Newsletter (7/13) #1735 ( vs77bb ) Fix alerts without types #1734 ( arun1595 ) Activity stream #1732 ( darkdarkdragon ) no sumo popup if logged in #1730 ( owocki ) Allow maxAge GET param for embed image responses #1729 ( mbeacom ) updated 404 page #1726 ( thelostone-mc ) Vision page #1725 ( octavioamu ) Updated Gitcoin Contribution Documentation with Issue Types #1724 ( frankchen07 ) Bug - Misaligned Css On The Acceptance Page #1665 #1721 ( olafghanizadeh ) Allow upto 4 cards in a row to utilise more space #1719 ( SaptakS ) Makes get started button blue as suggested by Alisa #1718 ( SaptakS ) Improve the css for newsletter #1717 ( SaptakS ) Presskit page #1683 #1691 ( olafghanizadeh ) contributor_landing: added newsletter #1689 ( thelostone-mc ) Clickable bounty hunters #1682 #1688 ( olafghanizadeh ) Contributor landing page: change text color of 'Get started' to white. #1687 ( pinkiebell ) Fix markdown of html tags in issue description #1684 ( pinkiebell ) Display an error banner on network error on start-/stop work.. #1681 ( pinkiebell ) contributor : language specific impl #1677 ( thelostone-mc ) refactor YGE code (done) & start on bulk payouts (done) #1666 ( owocki ) fix for https://github.com/gitcoinco/web/issues/1661 #1662 ( owocki ) Change 'not enabled this token'-banner color to orange. #1657 ( pinkiebell ) Fix Dai Value Bug Gitcoin Bot #1592 #1656 ( pinkiebell ) Fix: White paper page isn't responsive and rendering is off #1654 ( pinkiebell ) Display bounty title before value #1653 ( arun1595 ) hide network pill on mobile + reorder media query code #1651 ( thelostone-mc ) gas estimation calculator on gas page #1648 ( owocki ) Implement management command 'sync_listener' #1645 ( pinkiebell ) Changes color of getting started from green to gc blue #1639 ( SaptakS ) css : fixes #1638 ( thelostone-mc ) Fix gas settings #1637 ( SaptakS ) Add Hotjar #1635 ( mbeacom ) Replace 'worth' with 'value' #1634 ( arun1595 ) bug: set title attribute to null when switching to right network #1633 ( thelostone-mc ) Newsletter PR (7/6) #1632 ( vs77bb ) as a issue submitter, i want diff issue templates for diff issue types on gitcoin/co repo, so i can have more customized templates to my use case #1628 ( owocki ) gas advisories #1619 ( owocki ) Fix - #1593 #1615 ( Abhay07 ) Remove unnecessary script #1614 ( arun1595 ) Make event names in slack notifications consistent #1613 ( arun1595 ) Add Joseph's testimonial #1611 ( arun1595 ) Remove duplicate script tags #1610 ( arun1595 ) add Build Waiting State #1604 ( iamonuwa ) We Believe Section added in gitcoin.co/mission #1602 ( Abhay07 ) email: reindent + update css #1601 ( thelostone-mc ) added scott to the team page #1600 ( thelostone-mc ) moves tokens from being hardcoded in the codebase to being stored in the db #1598 ( owocki ) adds OZR token #1596 ( owocki ) Upgrade Django to 2.0.7 #1595 ( mbeacom ) adds help link to how it works dropdown #1591 ( owocki ) new metamask banner #1590 ( thelostone-mc ) Ensure avatar auth #1587 ( premachb ) results page by different keyword #1586 ( owocki ) Fix gas price settings css #1585 ( SaptakS ) Newsletter PR #1583 ( vs77bb ) Update RUNNING_LOCALLY_DOCKER.md #1577 ( eayoungs ) Update where to display how it works again #1576 ( mbeacom ) Adds results link to the footer #1575 ( SaptakS ) nav: fix on mobile #1574 ( thelostone-mc ) fixed alerts #1573 ( thelostone-mc ) Upgrade docker and travis to use Python 3.7 #1572 ( mbeacom ) refs: https://github.com/gitcoinco/web/issues/1568 #1571 ( thelostone-mc ) hide message + USD when not available #1570 ( thelostone-mc ) Display how it works everywhere except index page #1569 ( mbeacom ) fix : eslint errors #1564 ( thelostone-mc ) text: Go -> Save #1563 ( thelostone-mc ) Save Avatar takes you to Profile Page #1559 ( SaptakS ) Add link to the issue URL in the confirmation page #1558 ( SaptakS ) Fix for #1457 (Updated zIndex for Cookie Banner) #1556 ( premachb ) landing : added growing tree svg #1555 ( thelostone-mc ) avatar schwag request form #1551 ( owocki ) Implements a svg badge.. #1546 ( pinkiebell ) Fix broken CSS from how it works #1541 ( mbeacom ) Fix localstorage issue in firefox #1540 ( SaptakS ) all admin actions are in a new line #1539 ( thelostone-mc ) minor changes: added #1538 ( thelostone-mc ) Update how it works to use one url #1536 ( mbeacom ) ftux : further changes #1533 ( thelostone-mc ) Fix gasPrice on changing recommendation #1531 ( SaptakS ) newsletter 6/22 #1530 ( vs77bb ) Check for slow instead of fast #1526 ( SaptakS ) Fix malformed HTML #1525 ( arun1595 ) Fix buttons in standalone avatar page #1524 ( SaptakS ) Funder FTUX #1521 ( SaptakS ) Update slack notification format #1517 ( arun1595 ) Discord test button and send webhook msg with avatar #1514 ( kelvintyb ) Fix selectmenu initialization issue #1513 ( arun1595 ) Fix typo #1508 ( arun1595 ) 1244 how it works #1501 ( darkdarkdragon ) Remove bot's response to repos missing @gitcoinbot #1500 ( arun1595 ) Update open gitcoin role on about page #1499 ( arun1595 ) Fix jquery selector #1497 ( arun1595 ) Refactor getNetwork code #1496 ( arun1595 ) Fix pytest version #1495 ( SaptakS ) add https://cln.network token base CLN #1491 ( leonprou ) as a funder, i want to advertise that i am hiring on my bounty, so bounty hunters can take this into account when attempting my bounty #1488 ( owocki ) Change pull request link hover color #1487 ( arun1595 ) /results page is slow, this PR perf profile helps diagnose that and makes it faster #1486 ( owocki ) Change login link hover color to white #1485 ( arun1595 ) Remove unnecessary letter spacing in emails #1481 ( sprusr ) WIP: Make funder icons circular #1479 ( arun1595 ) Added the gas amount to the right place #1477 ( shad-k ) Roundup 6/15 #1474 ( vs77bb ) WIP: Contributor landing page #1459 ( arun1595 ) Fix font awesome loading in ENS page #1458 ( arun1595 ) Add name linking to vivek's slack notification and welcomebot #1452 ( mbeacom ) robot_error: set max-width #1450 ( thelostone-mc ) updated font-size for ftux large devices #1448 ( thelostone-mc ) Issue Explorer Check in tools for Admin (Vivek) #1446 ( owocki ) no flex on alert messages #1444 ( owocki ) Simple Nav #1439 ( owocki ) Update django logger and deploy script handling #1437 ( mbeacom ) Replace arrow functions with traditional functions #1424 ( arun1595 ) Start/Stop history #1420 ( darkdarkdragon ) rollbar : quickstart #1417 ( thelostone-mc ) Upgrade django to 2.0.6 #1414 ( mbeacom ) Add space between not and have #1413 ( arun1595 ) landing page: final changes #1412 ( thelostone-mc ) roundup 6/8 #1411 ( vs77bb ) landing : updated mobile design #1406 ( thelostone-mc ) Github notification safeguard for local #1405 ( mbeacom ) Fix: return of login #1403 ( SaptakS ) Open gitcoin profile links on the same tab #1401 ( SaptakS ) External links should open in new tab with noreferrer and noopener #1399 ( SaptakS ) Adds funding link in the navbar for landing page #1397 ( SaptakS ) Corrects lightbulb image name #1396 ( SaptakS ) Fixes: https://github.com/gitcoinco/web/issues/1391 #1392 ( kziemianek ) Fix project type number #1385 ( arun1595 ) Enhancement bounty info view on the bounty details page #1384 ( arun1595 ) Fix minor typo #1383 ( arun1595 ) birth: landing page #1377 ( thelostone-mc ) Update top banners in different bounty flow pages #1365 ( SaptakS ) Let price estimation text span a whole row #1362 ( arun1595 ) Fix FontAwesome static refs #1360 ( mbeacom ) Funder form v3 #1356 ( SaptakS ) notif: updated banner #1355 ( thelostone-mc ) Add min value for hours worked input field on submit work form #1350 ( arun1595 ) temp: using font-awesome CDN #1346 ( thelostone-mc ) Remove invalid css #1345 ( arun1595 ) add 'stop work & slash' button #1343 ( jvmaia ) profile : revamp #1342 ( thelostone-mc ) disable sendgrid events until we figure out root cause of db size issues #1339 ( owocki ) Trim issue action plan before validation #1338 ( arun1595 ) Adjust sync_geth settings and docs for local #1335 ( mbeacom ) fontawesome: revert to css #1333 ( thelostone-mc ) shared: refactored + removed dead code #1332 ( thelostone-mc ) Decrease the scope of GH perms requested on login #1328 ( mbeacom ) UX/UI for new results page #1327 ( travisdmathis ) show pricing guide on new bounty form #1322 ( owocki ) Fix email link in newsletter and mailchimp templates #1321 ( arun1595 ) Don't save tip information in local storage except current user's #1318 ( arun1595 ) docker-compose was wrong #1317 ( owocki ) Fix primary button style in receive tip success page #1314 ( arun1595 ) WIP: Stats email v2 #1311 ( oogetyboogety ) org profiles #1310 ( owocki ) as a user, i want to show number abandonments on gitcoin profile, so i can know who's a flake #1309 ( owocki ) Quickstart PR with corrected redirect #1308 ( SaptakS ) Fix: specify height of upper left only for submit bounty form #1306 ( SaptakS ) css: fixed dashboard filter row #1304 ( thelostone-mc ) Enable autocorrection via pre-commit and add yapf #1301 ( mbeacom ) fixes ENS #1299 ( owocki ) adds ENS subdomain registrations to activity report #1296 ( owocki ) helper command for pg_top #1295 ( owocki ) send tip from github username, not just 'full name' #1294 ( owocki ) Fix broken image in about page #1285 ( arun1595 ) Add checks for bounty/tip notifications on local/dev #1284 ( mbeacom ) ftux: refactor + restructure + url rename #1281 ( thelostone-mc ) admin / impersonate users #1280 ( owocki ) records form submission records for GDPR purposes + mailchimp permi-delete #1279 ( owocki ) Adds SaptakS to team #1277 ( SaptakS ) leaderboard updates for mitch #1275 ( owocki ) Improves deletion confirmation modal button styling #1272 ( SaptakS ) css: fixed font name #1271 ( thelostone-mc ) roundup 5/25/18 #1270 ( vs77bb ) Updates text in deletion modal #1269 ( SaptakS ) settings: updated styling + linting #1266 ( thelostone-mc ) css: update cookie styling #1265 ( thelostone-mc ) Mission/Values Page Redesign / Refactor #1260 ( travisdmathis ) settings: redid page #1255 ( thelostone-mc ) WIP: GDPR Cookie consent #1254 ( mbeacom ) GDPR: Management command to send email to all gitcoin users #1252 ( SaptakS ) GDPR: show updated policy via modal #1251 ( thelostone-mc ) GDPR -- Add info to our contact forms #1250 ( owocki ) GDPR reconsenet from EU residents #1249 ( owocki ) GDPR: Adds disclosure and consent withdrawal information in privacy tab #1248 ( SaptakS ) Email Preferences at a much more granular level #1247 ( owocki ) GDPR: Fixes https://github.com/gitcoinco/web/issues/1243 #1246 ( owocki ) GDPR: Remove remembering terms and blockchain tos from the funder forms #1245 ( SaptakS ) UTS46 ENS domain names #1225 ( owocki ) GDPR & Associated Privacy Updates -- Must be merged by EOD May 24 2018 #1222 ( owocki ) ens cleanup / marketing stuff #1219 ( owocki ) css: clean up ENS #1197 ( thelostone-mc ) one time approvals for each erc20 token used on gitcoin #1190 ( owocki ) fix for 'accept submission' not showing up #1189 ( owocki ) dashboard : minor fixes #1187 ( thelostone-mc ) roundup! vivek's first PR #1182 ( vs77bb ) Add Livepeer Token (LPT) for tipping #1176 ( jozanza ) Add CR fixtures and disable get_prices by default #1175 ( mbeacom ) add Unblocked Ledger Token (ULT) #1174 ( 7alman ) Add fulfillment endpoint for each entry by std bounty id #1170 ( mbeacom ) HOLD: releases iOS landing page link - DO NOT MERGE UNTIL IOS APP IS READY #1167 ( owocki ) image: ran make compress-images #1164 ( thelostone-mc ) about: fixed up CSS for about page community + alumini #1163 ( thelostone-mc ) css: added important for overridden prop #1161 ( thelostone-mc ) css: set limit for image in issue description #1159 ( thelostone-mc ) allows configurable 'max start work amount' #1158 ( owocki ) Modified web3 address to be optional for EthOS #1148 ( eswarasai ) Added etherscan url in EthOS Tweet #1147 ( eswarasai ) onboard : autopopulate keywords for users #1146 ( thelostone-mc ) Mark ethos hacking #1145 ( owocki ) Adds cors headers, and conditionally allow all for GET requests of bounties. #1126 ( matthewlilley ) js : added gettext across all alerts #1121 ( thelostone-mc ) updated start work dialog -> to ask hunter for action plan #1118 ( thelostone-mc ) Add Avocado (AVO) token #1116 ( peter-evans ) Fixes: https://github.com/gitcoinco/web/issues/1030 #1115 ( bakaoh ) Style refresh quote button #1114 ( arun1595 ) Prompt the user to log in before starting work #1113 ( arun1595 ) ant token name did not show up #1108 ( owocki ) project_types (formerly work schemes) #1098 ( owocki ) data privacy on new issue submit #1097 ( owocki ) makes email address optional in new bounties #1096 ( owocki ) As a member of the community, I want these Profile Privacy Features, so I can be more private #1095 ( owocki ) alumni model and view #1093 ( owocki ) ios applink on the landing page and bottom notifciation #1090 ( owocki ) Change cursor of questions in help page to pointer #1086 ( arun1595 ) Fix grammatical issue #1085 ( arun1595 ) Change Running Locally Header #1084 ( arun1595 ) dashboard: side_bar filters refactor #1082 ( thelostone-mc ) dashboard: fix filter uri #1081 ( thelostone-mc ) bugfix: tech stack filter fix #1080 ( thelostone-mc ) Dynamic widget documentation #1076 ( matthewlilley ) Add left margin for activity time #1074 ( arun1595 ) mail: updated alt + removed extra \\</p> + reindent #1071 ( thelostone-mc ) test button to test slack integration #1070 ( darkdarkdragon ) Fixed #1046 #1068 ( eswarasai ) fix toggle any filter #1065 ( joshmorel ) css: funding / killing form update #1061 ( thelostone-mc ) the ability for bounty funders to snooze gitcoinbot inactivity warnings #1059 ( owocki ) escalation not removal #1058 ( owocki ) css: prettified start work dialog box to match style + stop work button #1055 ( thelostone-mc ) gives staff the ability to remove users from a bounty #1042 ( owocki ) logs abandoned work and prevents users from starting new work bc of it #1039 ( owocki ) staggers cron start times #1034 ( owocki ) Quickstart screen for bounty creation flow #1029 ( SaptakS ) Slack Welcomebot on AWS Lambda #1017 ( mbeacom ) quarterly_stats Fixes: https://github.com/gitcoinco/web/issues/946 #1016 ( CuriousLearner ) Add autotranslate base #971 ( mbeacom ) QA: Implement Avatar builder Frontend (Fixes #813) #967 ( Smona ) sets default search project status to 'any' #936 ( owocki ) ftux: birth #889 ( thelostone-mc ) WIP: Update FaucetRequest with FK to Profile #884 ( mbeacom ) ENS Subdomain Feature #509 ( scottydelta )","title":"pre_crowdfund (2018-07-25)"},{"location":"mk_changelog/#pre-pr884-2018-04-30","text":"Full Changelog Fixed bugs: Faucet translation isn't rendering properly #1032 NoReverseMatch: Reverse for 'viz_index' not found. 'viz_index' is not a valid view function or pattern name. #1022 Gitcoin bot 2nd attempt doesn't render properly #991 BE tests currently failing #953 [BUG] The User Menu is Covered on TX Confirmation Screen #924 Gitcoinbot did not comment when bounty was posted #915 No unsupported network alert on bounty funding #773 Modify setup_lang to use User #980 ( mbeacom ) expiration tests fix #913 ( kziemianek ) Closed issues: DoesNotExist: Profile matching query does not exist. #1008 AttributeError: 'AnonymousUser' object has no attribute 'profile' #1005 testaroooooooo 123 #996 Updating user notification preferences fails and returns (403) CSRF verification failed #988 Resolve pytest / travis failures #987 error when submitting faucet request #979 TypeError: bad operand type for unary +: 'str' #976 AttributeError: 'NoneType' object has no attribute 'email' #954 test 123 #949 Issue explorer don't show issue in case gas price has been changed #945 ConnectionError: HTTPSConnectionPool(host='ipfs.infura.io', port=5001): Max retries exceeded with url: /api/v0/cat/QmXxkBASF92QvFFwChwZAECSRsjoMstMHJ2A9bwXuchXbA (Caused by NewConnectionError('\\<urllib3.connection.VerifiedHTTPSConnection object at 0x7f6791 #932 Test is a test issue #929 As a user, I would should be informed when I no longer need to keep tip confirmation window open #928 AttributeError: 'JsonResponse' object has no attribute 'read' #921 AttributeError: 'LeaderboardRank' object has no attribute 'local_avatar_url' #914 Design Funder Landing Page #908 Test title #907 404 after logout at profile page #905 Navbar responsive issue #903 as a submitter, i want to link my github PR when i submit work, so i can show off what i did #893 design - as a user, i want a quarterly 'my stats' email, so i can see my activity on the platform #892 make fix stylelint error #877 timezone issues with opened date #876 as a repo owner, i want to be able to approve people who've started work, so i can filter those who i want to work with #812 design - gitcoin.co/activity #804 Allow the user to set different language for the Gitcoin app #802 coding - /mentors page #725 as a user, i want upvotes / downvotes on tool page, so i can cast my vote on gitcoin's tool direction #706 Gitcoin should monitoring issue pull request as well #696 refactor bounty.value_in_usdt into two functions #693 Notify Gitcoin/Funder that Developer is Starting Work #683 (DESIGN) As a user, I want a Blockchain Job Board so I can find professional work in the space #540 Handle multiple bounties per github issue URL #533 Fund an Issue Suggestion/FTUX #529 Display Tips on Leaderboard #522 How to Get Started (Repo Maintainer) #517 Http404 #481 new_bounty marketing emails need to be moved to a background job #477 Clean Up Bounty Creation Flow #429 Functioning Search Field #412 As a core team member, i want to Track deploys & releases for faster debugging #405 (unknown): Uncaught this network is not supported in bounty_address() for gitcoin #362 Add slack bot integration #259 As a team member, I'd like to be on the /about page, so I can show off that I'm part of the team. #222 Merged pull requests: fixes for https://gitcoincommunity.slack.com/archives/C8E45J5D0/p1525097521000711 #1024 ( owocki ) slack welcome messages #1012 ( owocki ) hotfix: wait for approval to issue bounty #1006 ( owocki ) adds rates estimate on bounty details page #998 ( owocki ) Action URLS Cleanup (and other goodies) #983 ( owocki ) Notify Gitcoin/Funder that Developer is Starting Work #981 ( darkdarkdragon ) unsupported network warnings when trying to do an aciton on a network we dont support #978 ( owocki ) warnings when youre looking at a non mainnet bounty #977 ( owocki ) pricing brackets #972 ( owocki ) Adds bounty flow doc to readme #956 ( owocki ) Add slack bot integration #955 ( darkdarkdragon ) smarter github notifications #948 ( owocki ) Tool modifications #944 ( mbeacom ) track hours worked on fulfillment #942 ( owocki ) about: Fix Origin Story #933 ( thelostone-mc ) verboseness of gitcoinbot reminders #931 ( owocki ) more feedback emails #930 ( owocki ) bounty: hide timeline on cancelled bounties #922 ( thelostone-mc ) fixes https://github.com/gitcoinco/web/issues/876 #919 ( owocki ) make expiration status less inclusive #918 ( owocki ) about: core team design revamp #916 ( thelostone-mc ) navbar responsive issues #904 ( kziemianek ) avatar cleanup - and adds the ability to blend in the gitcoin logo to an avatar #902 ( owocki ) ability to add a pr link to work submission #900 ( owocki ) nav + explorer fixes #890 ( thelostone-mc ) Upgrade deb image to Stretch #888 ( mbeacom ) Added team bios and community member links to /about page #887 ( jakerockland ) WIP - d3 data viz experiments #886 ( owocki ) dashboard: Tests cleanup. #857 ( cryptomental ) preferred language #810 ( kziemianek ) Initial commit for Search functionality #790 ( eswarasai ) Tool voting #763 ( kziemianek )","title":"pre-pr884 (2018-04-30)"},{"location":"mk_changelog/#20180416-2018-04-16","text":"Full Changelog Implemented enhancements: Detect GitHub issue activity other than comments #458 ( JakeStoeffler ) Fixed bugs: Cannot submit work #883 feedback crm just went a little haywire #873 Closed issues: TypeError: Object of type '__proxy__' is not JSON serializable #844 Detect \"Referencing\" as \"Work\" #576 Merged pull requests: Add admin link to navbar for staff and switch settings icon #899 ( mbeacom ) adds tutorials on help page #898 ( owocki ) Github comments when user is warned/removed (in addition to the emails that are sent when this happens) #897 ( owocki )","title":"20180416 (2018-04-16)"},{"location":"mk_changelog/#20180415master-2018-04-16","text":"Full Changelog Implemented enhancements: Feature/refactor value in usdt #853 ( cryptomental ) Fixed bugs: Bounty details screen on mobile not responsive #759 Closed issues: Incorrect dollar value shown for bounties #879 As a user, I want to break apart my email settings and my profile settings #795 Merged pull requests: Update Travis pipeline to use new stages #885 ( mbeacom ) identify trust wallet #882 ( kziemianek ) new nav for auth/login for site #881 ( owocki ) status update dates on the bounty model #878 ( owocki ) new_bounty emails #867 ( owocki ) in my settings, i should be able to disguise myself from the leaderboard/having a profile #745 ( owocki )","title":"20180415master (2018-04-16)"},{"location":"mk_changelog/#pre-853-2018-04-12","text":"Full Changelog Fixed bugs: admin login broken in prod #871 Closed issues: AttributeError: 'NoneType' object has no attribute 'email' #872 This is a test bounty for demo purposes #868 As a user, I only want to receive 1 match email per day, so I dont unsubscribe #454 Merged pull requests: Django Auth Redux #862 ( mbeacom )","title":"pre-853 (2018-04-12)"},{"location":"mk_changelog/#pre-django-auth-redux-2018-04-11","text":"Full Changelog Implemented enhancements: responsive profile #825 ( kziemianek ) Fixed bugs: Broken profile markup #817 alpha tag confusion #792 Fixed heights in tips list #787 Funded issues are shown up as expiring in search results #783 fix for bouty details buttons padding #842 ( kziemianek ) Bean/fix typos #829 ( StareIntoTheBeard ) Closed issues: update can_submit_after_expiration_date #855 Request Funding Increase #849 Expired bounty invalid days ago counter #839 Canceled Bounty gitcoinbot github message was wrong #838 bounty detail page - button padding is messed up at certain resolutions #836 IndexError: list index out of range #835 AssertionError: Cannot filter a query once a slice has been taken. #833 'done' bounties should not have the time left field visible #824 comment needs left padding #823 RelatedObjectDoesNotExist: User has no profile. #820 Document and check all possible status values #816 Logo width is incorrect #808 Performance Updates #777 design - /mentors page #565 Update Gitcoin Email Designs #563 Code - /pitch pages #506 Price fluctuates on the explorer stats page #491 As a site admin, I want a Gitcoin Drip Marketing Campaign that explains our vision (and how to use Gitcoin) over time, so we can enable our users to be successful. #448 I want to see the progress of my newly created bounty tickets #422 Issue Explorer Details Page V2 #419 Merged pull requests: Add ipdb and django shell access to docker setup #863 ( mbeacom ) docker shell fixes #861 ( owocki ) fix expiration tests #860 ( kziemianek ) update can_submit_after_expiration_date #856 ( owocki ) fix for Expired bounty invalid days ago counter #840 ( owocki ) bounty: hide progress bar on work done status #828 ( thelostone-mc ) Fixes: https://github.com/gitcoinco/web/issues/792 #827 ( willsputra ) docker / github login instructions #822 ( owocki ) todos should be falsy #821 ( owocki ) Django auth #818 ( mbeacom ) bug fix : bounty + landing + dashboard #807 ( thelostone-mc ) bounty: added progress bar #764 ( thelostone-mc ) bounty: mobile alignment fix #762 ( thelostone-mc ) Email design update #746 ( jakerockland )","title":"pre-django-auth-redux (2018-04-11)"},{"location":"mk_changelog/#pre-django-auth-1-2018-04-06","text":"Full Changelog Implemented enhancements: Profile should make use of the django user framework #312 Closed issues: See what my last actions were when I logged in (as bounty funder). #423 Merged pull requests: bounty: fixed avatar url + tooltip style #784 ( thelostone-mc ) bounty : minor changes #768 ( thelostone-mc ) Add django auth framework #574 ( mbeacom )","title":"pre-django-auth-1 (2018-04-06)"},{"location":"mk_changelog/#pre-django-auth-2018-04-06","text":"Full Changelog Fixed bugs: the big 'profile might need a redesign or some bugfixes' thread. #580 Closed issues: \"ReferenceError: Accounts is not defined\" Error printed to console when sending a tip #806 As a user, I would like to view profile bounties, repos, etc in a paginated fashion #550 An easy way to read the list of funded issues on my profile page #424","title":"pre-django-auth (2018-04-06)"},{"location":"mk_changelog/#20180404-template-1-2018-04-05","text":"Full Changelog","title":"20180404-template-1 (2018-04-05)"},{"location":"mk_changelog/#20180404-template-0-2018-04-05","text":"Full Changelog","title":"20180404-template-0 (2018-04-05)"},{"location":"mk_changelog/#20180404-base-template-2018-04-04","text":"Full Changelog Closed issues: Groundwork for Internationalization (Translation of App to Other Languages) #642 Merged pull requests: stylelint:fix info in CONTRIBUTING.md #803 ( kziemianek ) Limit Profile stat results to valid bounties #791 ( mbeacom ) Fixes: https://github.com/gitcoinco/web/issues/642 #728 ( bakaoh )","title":"20180404-base-template (2018-04-04)"},{"location":"mk_changelog/#pre-728-2018-04-04","text":"Full Changelog Closed issues: Responsive Design Issues On The Gitcoin Website #684","title":"pre-728 (2018-04-04)"},{"location":"mk_changelog/#pre-684-responsive-cleanup-2018-04-04","text":"Full Changelog Implemented enhancements: 'my projects' tab should be greyed out if user is not logged in #769 Issue Explorer Detail #737 issue funder should be able to stop work #666 Investigate Image Compression Across Gitcoin for Performance Improvements #608 inline validations #554 Need to be able to stop work bounties as the funder #463 standardbounties: automatically cross-process bounties posted to bounties.network to gitcoin #268 Static handling and cache invalidation #262 css: rebirth of the bounty #691 ( thelostone-mc ) fixing some width, flex, and spacing issues as discovered in issue #684 #688 ( joshmobley ) changed all target=new to target=_blank with rel=noopener #677 ( michelgotta ) revamped tool page #672 ( owocki ) Inline validations #571 ( KennethAshley ) Fixed bugs: Getting an Error When Trying to Tip User #776 Issue Explorer Check-box Undone #744 after sending tip, blue alert that should have had a success message in it said 'undefined' #687 refresh_bounties empty URL bug #686 TypeError: Object of type 'BountyFulfillment' is not JSON serializable #678 loading page is busted #653 KeyError: 'token' #649 standard bounties: multiple bounties per issue URL #251 standardbounties: if you try to fulfill a bounty that doesnt exist it spins forever #250 bug: need auto refresh on gitcoin submission pending page #179 explorer: added missing css stylesheet #747 ( thelostone-mc ) html: removed extra css link from header.html #739 ( thelostone-mc ) Closed issues: test 123 #788 Really thin kill bounty screen #786 messed up CSS on https://gitcoin.co/funding/process #780 avatar_url is wrong #779 Hardcoded year in emails copyright section. #765 Contributing Link in README.md doesn't work #755 test 123 #752 NameError: name 'time' is not defined #751 NameError: name 'time' is not defined #750 test 123 #734 test 123 #722 test 123 #720 reverse bounties #719 'accepted' time is wrong on bounty #714 Using docker to setup and got \"localhost refused to connect\" error, and ReadMe file is outdated #713 /explorer on mobile needs some alignment fixes #705 bounty explorer can be slow #689 as a user, i want to ahve an 'in alpha' badge on alpha tools, so i can know which tools aren't yet GA #685 gitcoin.co/new issue page not responsive #679 Scope of task #670 test 123 #654 Emails with [DEBUG] header in prod #650 Faucet giving 500 when submissino #646 Update Gitcoin Weekly Newsletter #632 as a user, i want gitcoin to integrate standardbounties contribute() method, so i can contribute more funds to a bounty #617 Tidy Up Issue Explorer #601 as an administrator, id like to add faucet distributions to activity_report, so i can track them #600 redesign embeddable widget for github reops #594 upgrade: font-awesome 5 #593 Add Gitcoin Newsletter Page #584 Latest News Updates #518 Clear and concise message about work started from Gitcoin Bot #508 Remove Subscribe to Funded Issues at top of Issue Detail Page #504 Longer titles are profile page overflow their bounds #501 gitcoinbot did not comment on github when work\\_done event fired #495 Issue explorer on mobile needs a quick cleanup #494 Exception: attempting to create a new bounty when is_greater_than_x_days_old = True #485 People shouldn't be able to start work on more than 3 issues at a time #478 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #467 BACKEND -- Gitcoin External Bounties tool #447 Clear Connection Between Notification and Error States #432 Consistent display of ETH and USD across app #421 To see only open issues #420 Consistent button styles across the app #416 Consistent H1 treatment #414 Clear and concise tooltips #410 Standardbounties expiration date treated differently than Gitcoin expiration date #393 Uncaught ReferenceError: getParam is not defined #390 Uncaught TypeError: Cannot read property 'coinbase' of undefined #389 Uncaught TypeError: Cannot read property 'accounts' of undefined #388 (unknown): \uad6c\ubb38 \uc624\ub958 #385 (unknown): ':' is required. #383 JSONDecodeError: Expecting value: line 1 column 1 (char 0) #382 Error: Access is denied. #381 (unknown): Syntax error #376 (CODE) as a user, i want to see bounties from other platforms, so i can work on bounties outside of the gitcoin ecosysstem #372 TypeError: an integer is required (got type NoneType) #360 Uncaught SyntaxError: Identifier 'slides' has already been declared #352 Uncaught SyntaxError: Identifier 'slides' has already been declared #349 Cannot read property '2' of null when submitting bounty #342 Test Issue #341 SyntaxError: expected expression, got '*' #339 Uncaught ReferenceError: web3 is not defined #336 Uncaught TypeError: Cannot read property 'accounts' of undefined #318 Error: Web3ProviderEngine does not support synchronous requests. #307 Error: Syntax error, unrecognized expression: select[name=deonomination #306 Uncaught ReferenceError: nextSlide is not defined #305 Uncaught ReferenceError: web3 is not defined #303 Uncaught SyntaxError: Unexpected token * #302 (unknown): Syntax error #300 (unknown): Script error. #297 ReferenceError: Can't find variable: nextSlide #295 Uncaught ReferenceError: nextSlide is not defined #294 ReferenceError: Can't find variable: nextSlide #293 Uncaught ReferenceError: nextSlide is not defined #292 Uncaught ReferenceError: web3 is not defined #291 Uncaught ReferenceError: web3 is not defined #290 Uncaught ReferenceError: nextSlide is not defined #289 Uncaught TypeError: Cannot read property 'coinbase' of undefined #287 Uncaught TypeError: Cannot read property 'accounts' of undefined #286 flow to reject a claim and payout to someone else is kind of cumbersome #275 StandardBounties: The ability to ingest Bounties.Network Bounties #264 ERC20 batch tip send #233 improvement - filtering bounties for repository #232 Issue Explorer Usability tweak #227 Treat claimed issues as open #225 design: index of bounties from other bounty projects #221 Detect profile from Metamask/Github #214 funded issue links are long and clunky #201 Environment variable based settings #144 saving search UI is broken on iphone 7 #8 Merged pull requests: explorer: updated label for issues with status done #785 ( thelostone-mc ) bounty: process + kill bounty width fix #782 ( thelostone-mc ) CSS clean up \ud83c\udf89 #775 ( sethmcleod ) disable my projects filters if user not logged in #771 ( kziemianek ) current year in copyright email section #766 ( kziemianek ) Alpha Tag #758 ( willsputra ) bounty: css letter spacing fix for h1..h6 #757 ( thelostone-mc ) Fixed Contributing Link in README.md #756 ( Sabihashaik ) bounty: css fix for wonky contributor info #741 ( thelostone-mc ) html: reordered css links #740 ( thelostone-mc ) bounty: display submit only on starting work #738 ( thelostone-mc ) #679 - new issue responsive updates #735 ( joshmobley ) fixed broken save search UI & missing save search text on mobile #731 ( willsputra ) accepted_on date in fulfillment model #729 ( owocki ) Optimize images in assets #724 ( mbeacom ) handle multiple bounties per github url #723 ( owocki ) Add image compression #712 ( cassidypignatello ) bounty: review feedback added #711 ( thelostone-mc ) workaround for web3 sync issues #709 ( owocki ) twitter.com/gitcoinfeed #708 ( owocki ) css: fixed explorer overflow on mobile #707 ( thelostone-mc ) Fixes: https://github.com/gitcoinco/web/issues/687 #699 ( kziemianek ) css: sidebar fixup #697 ( thelostone-mc ) Issue funder can remove users from issue #675 ( kziemianek ) Offchain Bounties #673 ( owocki ) doc: corrected setup path #667 ( thelostone-mc ) Records UserAction events for Tip, Start/Stop Work, and Bounty related things #664 ( owocki ) People shouldn't be able to start work on more than 3 issues at a time #663 ( owocki ) no faucet spoofing #662 ( owocki ) no faucet spoofing #661 ( owocki ) Add GeoIP2 and lang middleware #657 ( mbeacom ) Adds testimonial video to landing page #645 ( owocki ) Redesign and implementation of embed widget #644 ( michelgotta ) @gitcoinbot tune up! #641 ( zoek1 ) use AGPLv3 license #638 ( gasolin ) fontawesome: upgrade to v5 #635 ( thelostone-mc ) Refactors 3 requests down to 1 #634 ( owocki ) Integrate StandardBounties increasePayout() #626 ( msuess ) Refactors shared.js / web3 awareness code for more sanity #625 ( owocki ) explorer: updated view #621 ( thelostone-mc ) Update all alerts to include new alert style #553 ( KennethAshley ) Environment variable setting handling #359 ( mbeacom )","title":"pre-684-responsive-cleanup (2018-04-04)"},{"location":"mk_changelog/#pre_web3_awareness_reafctor-2018-03-16","text":"Full Changelog Implemented enhancements: nav: redesigned the dropdown #629 ( thelostone-mc ) explorer: updated tooltip #585 ( thelostone-mc ) Fixed bugs: AttributeError: 'NoneType' object has no attribute 'strip' #616 IndexError: list index out of range #613 profile_details.html references nonexistent profile.js resulting in Http404 #612 KeyError: 'comment' #598 fix for empty github notification #622 ( owocki ) Check dict existence in gitcoin bot payload view #599 ( mbeacom ) Closed issues: test 123 #595 Upgrade to the latest Django revision #583 Increase Code Coverage by 5% #408 Reminder to remove the legacy/* application once those bounties are done #406 Uncaught Error: Web3ProviderEngine does not support synchronous requests. #340 addd logo to metamask contract metadata repo #320 Bot / Github integration Revamp MVP #152 In tip flow, sometimes we are not able to get the email address of the user from github #75 Merged pull requests: css: dropdown fix #630 ( thelostone-mc ) Enable ESLint in pre-commit and on Travis CI #624 ( mbeacom ) Sends followup emails after 48 emails to bounty fulfiller and submitter #610 ( owocki ) tooltip: updated as per review comments #606 ( thelostone-mc ) slack notifications upon start / stop work #591 ( owocki ) destroys legacy bounty handling code (except for on legacy kill bounty page) #589 ( owocki ) nav: redesigned the dropdown #586 ( thelostone-mc ) General faucet cleanup #582 ( mbeacom ) Feature/faucet -- with kevin's changes #581 ( owocki ) removes optional add_bcc option from mailer #579 ( owocki ) explorer: added sort feature #578 ( thelostone-mc ) Cleanup syntax and linting issues for backend code #577 ( mbeacom ) css: refactored media queries #573 ( thelostone-mc ) mocks expiration date on standardbounties #566 ( owocki ) Writing coverage for marketing model, increasing coverage to 33% #524 ( leonprou ) ESLint configuration to help code with more style #468 ( michelgotta ) BOT / GITHUB INTEGRATION REVAMP MVP #236 ( romanjesus )","title":"pre_web3_awareness_reafctor (2018-03-16)"},{"location":"mk_changelog/#pre_faucet-2018-03-09","text":"Full Changelog Implemented enhancements: show tips on leaderboard / profiles #544 ( owocki ) Closed issues: IndexError: list index out of range #564 Explorer changes followup #555 Update Issue Explorer Front End #503 void #455 Show consistent top navigation across the app #415 Clear Distinction Between Web 3 States #413 Merged pull requests: sendgrid event hooks #568 ( owocki )","title":"pre_faucet (2018-03-09)"},{"location":"mk_changelog/#pre-clean-urls-2018-03-07","text":"Full Changelog Implemented enhancements: cleaner funded issue urls #452 ( owocki )","title":"pre-clean-urls (2018-03-07)"},{"location":"mk_changelog/#pre-clean-urls2-2018-03-07","text":"Full Changelog Implemented enhancements: As a user, I want the navigation bar to be consistent #548 Add form styles #514 ( KennethAshley ) Adding token conversion rate to bounties #387 ( bhenze ) Fixed bugs: Is there still a problem with 'start work' carrying over from bounty to bounty? #519 Http404 raising frequently on profile view #492 AttributeError: 'NoneType' object has no attribute 'pk' #483 Integration branch triage issues #474 void #462 Added remove filter functionality for Search Tags #562 ( eswarasai ) css : fixed display for devices below 380px #559 ( thelostone-mc ) FIX: Replace selects with select2 and update arrow #539 ( KennethAshley ) Closed issues: gitcoincobot doesnt work for ERC20 issues #536 Test #531 void #515 void #511 void #500 Consistent Form Styles Across the Gitcoin #498 As a user I'd like a cleaned up explorer page. #493 Version conflict when running tests #488 'new work' comments appear twice on github issue from gitcoincobot #480 void #479 void #476 DoesNotExist: BountyFulfillment matching query does not exist. #471 void #470 void #469 Issues in 'Work Started' should be 'Open' #466 void #464 void #460 status not populating correctly on legacy issues #453 bust the cloudfront cache when an issue updates #446 Consistent tone and voice to communicate with me #439 Create Gitcoin UI Kit #437 Align Current State of the Issue Explorer #436 Update White Paper Page Select List #434 Create Consistent Form Styles #433 dashboard_bountyfulfillment is not being updated properly #428 Clear understanding whether something is an error or informational #425 Show left rail radio filters when appropriate #411 TypeError: an integer is required (got type NoneType) #409 Fix lingering bounty_fulfiller (claimee) references #401 HTML/CSS Touch ups on Bounty Details Page #399 Make Process Bounty page more user friendly #398 Wrong issue title in gitcoin.co #366 TypeError: an integer is required (got type NoneType) #332 standardbounties cleanup: multiple fulfillments #308 standardbounties cleanup: state issues #284 Coloradocoin receive page (due Feb 1) #261 Push Open Source Forward => Grow Open Source #238 design- /pitch page - where people can pitch project ideas #198 link profile in nav somewhere #191 show conv rate rate at time of posting #165 As a user, I'd like to be able to close my browser window after I submit a web3 tx, so I can do other things without canceling. #128 GitHub oauth in new funding flow #98 Merged pull requests: review: added feedback for the explorer page #558 ( thelostone-mc ) Unify navbar template #549 ( mbeacom ) Add initial changelog #545 ( mbeacom ) WIP: Feature/faucet #541 ( KennethAshley ) Fix unselectable icons on select2 selects #532 ( KennethAshley ) Add Wyvern (WYV) token #525 ( protinam ) core: Rebirth of the explorer #523 ( thelostone-mc ) dashboard: base setup #505 ( thelostone-mc ) Update web3 and eth-utils to fix issue 488 #489 ( jasonrhaas ) html: removed left rails #486 ( thelostone-mc ) Correct typos and grammatical errors #484 ( cpbennett4 ) text: fixed typo #473 ( thelostone-mc ) alert user to local env networks #465 #472 ( ckhatri ) Fix ES Linting issues for leaderboard.js #461 ( tra38 ) Fix isort-check build failure #459 ( JakeStoeffler ) launches web3 what / why video #449 ( owocki ) easier tip redemption #396 ( owocki ) (WIP) February integration branch #379 ( owocki ) Add dummy external bounties #377 ( KennethAshley ) WIP -- COLO Coin Redemption #331 ( eswarasai ) css: prettified bounty_details page #323 ( thelostone-mc )","title":"pre-clean-urls2 (2018-03-07)"},{"location":"mk_changelog/#prefebint-2018-02-13","text":"Full Changelog Closed issues: Use BountyFulfillment for all fulfiller_ references #402 Fix dashboard/notifications.py #400 feb integration branch - remove references to Bounty.fulfiller\\_ #397 \"Are you still working on this?\" #394 (unknown): Syntax error #391 MultipleObjectsReturned: get() returned more than one Profile -- it returned 2! #386 This is a test issue for purposes of a demo during Consensys Mesh Retreat #384 Bounty creation transaction link points to rinkeby etherscan address. #370 Travis builds failing #367 AttributeError: 'NoneType' object has no attribute 'get' #361 Submitting work throws a \"Math is not a function\" #357 Profile Page needs to be sized up if it's smaller than it should be #355 Increase Code Coverage by 4% #353 RangeError: Maximum call stack size exceeded #351 RangeError: Maximum call stack size exceeded #350 html: setting max-width to 500px casues weird display #347 New funded issue form does not automatically add the URL from the querystring #346 SyntaxError: expected expression, got '*' #338 as a user, i want to be able to process two bounties in multiple tabs so i can be efficient. #334 in activity_report management command, add a from\\_address and to\\_address field #322 tip emails not going out #321 Issue summaries lose formatting like new lines #317 new bounty status #316 stanardbounties cleanup: tune rate limiter #281 standardbounties cleanup: why aren't 500 error emails to ADMINs working #279 This is a test issue for purposes of a demo during Rocky Mountain Blockchain #270 game mechanics for project wheatgrass #260 sometimes web3 buttons on the gitcoin interface take 60s to respond #226 code: signal to tell user that unclaimed issues may already be in progress #206 Code Faucet Page #184 twitter posts about new funded issues do not unfurl correctly #110 move to python3, django 2.0 #68 Bounty Life-cycle #61 Merged pull requests: Fix migration conflict #395 ( mbeacom ) rollbar: replaces ** with Math.pow #392 ( thelostone-mc ) Increase code coverage #375 ( tyleryasaka ) js: replaced ** with Math.pow() #374 ( thelostone-mc ) Default network should be mainnet #371 ( jasonrhaas ) Update Docker image to support Windows #365 ( mbeacom ) Changes Math to Math.pow for gwei->ether gas calculation #358 ( poffdeluxe ) Use ImageOps.fit instead of Image.thumbnail #356 ( poffdeluxe ) css: set max-width to 100% to fix display #348 ( thelostone-mc ) Modify static handling to use Whitenoise #345 ( mbeacom ) css: prettified /help page #337 ( thelostone-mc ) allows multiple pending transactions at once #335 ( owocki ) html: replaced slack image with font-awesome icon #333 ( thelostone-mc ) diff favicons in prod vs local #328 ( owocki ) adds user action table, stats cleanup #327 ( owocki ) Adjust email handling for tip flow #326 ( mbeacom ) javascript: convert to es6 and make sure it passes linting #325 ( ethikz ) Kevin/new statuses #319 ( owocki )","title":"prefebint (2018-02-13)"},{"location":"mk_changelog/#pre_january2018_feature_integration2-2018-01-29","text":"Full Changelog Fixed bugs: standardbounties cleanup: Github claim work comment/interest comment updating seems to fail #282 When attempting to sign up for gitcoin slack I get a CSRF Failure #276 Closed issues: Error on DB restore #309 Uncaught ReferenceError: web3 is not defined #304 ReferenceError: web3 is not defined #299 ReferenceError: Can't find variable: web3 #298 ReferenceError: Can't find variable: web3 #296 Test issue from Rollbar #283 why are all the 404s 500ing #280 The first LIVE StandardBounties Bounty on Gitcoin #278 standardbounties: where do we store info that's not in the bounty detail spec? #253 standardbounties: migration plan #252 standardbounties: figure out how to massage expressed interest PR in #249 new 404/500 error page #231 typography cleanup after PR 116 #151 Merged pull requests: Modify slack email invitation handling #314 ( mbeacom ) (WIP) January 2018 Multiple Integrations #240 ( mbeacom )","title":"pre_january2018_feature_integration2 (2018-01-29)"},{"location":"mk_changelog/#pre_january2018_feature_integration-2018-01-26","text":"Full Changelog Fixed bugs: www.gitcoin.co doesnt work #254 Closed issues: gh int: Add github logout method #266 standardbounties: support new IPFS schema #265 standardbounties: test ERC20 tokens #257 standardbounties: regression test the twitter notifications, github comments, and emails #256 standardbounties: estimateGas() #248 standardbounties: gas limit set too high #247 standardbounties: tx throws but the frontend thinks it succeeded anyway #246 standardbounties: integrate metamask gas estimates module #245 As a gitcoin founder, I want to send a demo funded issue, so I can demo the product to the mesh. #229 As a gitcoin founder, I want to send a demo funded issue, so I can demo the product to the mesh. #228 dataviz of gas costs vs confirmation time #209 design: waiting room quote while page is waiting for web3 updates #181 Code iOS landing page #174 core : contributing.md guideline + linter #65 Browser Extension Revamp #50 waiting room entertainment while tx mines #32 Mentors #30 Merged pull requests: Update notifications.py #277 ( tommycox ) Add Rollbar error handling #274 ( mbeacom ) doc: changed port to 8000 #272 ( thelostone-mc ) doc: changed port to 8000 in github integration steps #271 ( thelostone-mc ) Add initial pre-commit configuration #269 ( mbeacom ) roundup email 20170116 #243 ( owocki ) Fix the test suite isort failures #242 ( connorwarnock ) Changed bounties URL in JS to prevent 301 redirect #235 ( tossj ) backend db & API support to show how many comments exist for an issue #219 ( amites ) Gitcoin: Issue #174 #207 ( Elaniobro ) Changed links to MetaMask Chrome extension to MetaMask website #204 ( tossj ) Display random quote when a web3 transaction takes place #158 ( tra38 )","title":"pre_january2018_feature_integration (2018-01-26)"},{"location":"mk_changelog/#v01-2018-01-10","text":"Full Changelog Closed issues: test 123 #224 foo the bar #223 Error executing transaction #220 Search by nickname doesn't work #213 Design: Gitcoin Toolbox #133","title":"v0.1 (2018-01-10)"},{"location":"mk_changelog/#submit_working-2018-01-09","text":"Implemented enhancements: In the admin, create a view that shows bounties and tips over time #20 Design a more aesthetically pleasing bounty detail page #17 bounty details page should have a 'back' button on it #7 clawback expired bounty interface #5 Expose psql port in docker stack #217 ( mbeacom ) Fixed bugs: Tips: 7 second delay when clicking on 'send tip' on the mainnet. #16 Closed issues: Docker-based PostgreSQL port inaccessible locally #216 Toolbox page: launch it #196 design: signal to tell user that unclaimed issues may already be in progress #190 Disabled localStorage breaks Issue Explorer #188 code: /mission page #177 small module design: waiting room quote #175 Design: Faucet page #173 add /addon/ as firefox addon redirection #170 claim: gas limit is set over limit #169 Code HTML: Toolbox Page #168 Travis builds failing - ethereum dependency changes #163 oops #159 Csv export management command to spit out activity report #157 explore the idea of a gas faucet #153 In Issue Explorer, Double Quotes (\") are Displayed instead of Correct Single Quotes (') #150 Travis builds failing on cytoolz #142 Design: Mission, values, vision, how we interact #139 design: ios gitcoin.co landing page #137 Double @ sign in github bot comments #131 Some of the buttons are glitchy and unpolished. #126 remove uppercase text from text description #125 Pytest version conflict with ethereum package #123 Add missing migrations #121 Error in sync_profile #120 Python comment linting and semicolon/unused import removal #119 Specify validation error for email validation checks #118 AnonymousUser #117 css: resize images to fit within the timeline container #107 /slack page content view does not fill page width on mobile #105 mail: tip amount rounded off to 2 decimals showing cause incorrect amount on mail #103 Transaction Underpriced when you try to receive a tip #101 bug: roadmap items shift to adjust for content on hover #100 expire email should be targeted to personas #96 Old Etherdelta API 50x frequently #94 Testing Strategy #90 Some models don't handle plurals correctly in admin #86 Problem on claimming a issue #82 Missleading button \"Accept/reject claim\" for non founder of the issue #81 Database files not compatible with Postgres 10.x #78 Email heading messed up on mobile resolutions #77 Overhaul leaderboards page design #76 support ERC20 token conversion rates on tips/bounties funding #73 css: mailing list breathing space #66 bug: roadmap items move when hover over them #64 Code Testimonials into Landing page #63 Modify docker-compose.yml to reduce running/exited services / persistent volume #58 Add persistent volume for PostgreSQL data #57 Decrease Docker image size #56 The corners or #upper_left and .bounty don't line up #54 auto-estimate USD amount on gitcoin.co/tip #53 Design a testimonials module on the landing page #52 Wrong issue info #51 Post funded issue to Craigslist #42 Issues should be displayed in decreasing order of value #40 Submit a funded issue (or send a tip) and provide feedback on the UX. #37 docker container for running locally #33 Mock up an Organization Overview page #31 Ops: Create cloudfront invalidation programmatically upon deploy in deploy.bash. #19 Tip page link 404s #14 Demonstrate tipping via a video #12 draft a blog post about tim-berners lee #4 list of erc20 coins should be more elegant #3 Web3 bountydetails interface documentation #2 HTTP API Documentation #1 Merged pull requests: remove duplicate viewport meta #218 ( gasolin ) Update PULL_REQUEST_TEMPLATE.md #215 ( Elaniobro ) css: shrunk vertical navbar + refactoring #212 ( thelostone-mc ) Add RDN Token support #210 ( ice09 ) metamask gas price preview #205 ( owocki ) Gitcoin's Mission #203 ( eswarasai ) add \"setup database\" section to documentation #199 ( galaxy233 ) Remove all-caps default in /tip (yge) #195 ( bumi ) Add sane fallback for localStorage usage #189 ( eth-button ) html: fixed github repo link #187 ( thelostone-mc ) add activity_report management command #180 ( choochootrain ) toolbox: coded design #172 ( thelostone-mc ) carousel: fixed css #167 ( thelostone-mc ) Generate high-entropy secrets and codes #166 ( 10a7 ) Pin cytoolz to 0.9.0 to fulfill ethereum new reqs #164 ( mbeacom ) shared.js: Escape single quotes with &#39; #162 ( adtac ) TLDR section on landing page #161 ( owocki ) add http://arcade.city token base ARCD #155 ( ernaneluis ) docker: added node to configuration and css lint setup #147 ( thelostone-mc ) Resolve Travis failures on dependency conflict #143 ( mbeacom ) css: Quick style fix for buttons using the btn-info class #134 ( algae12 ) Glitches fixes and overall better buttons look and feel #127 ( algae12 ) Resolve false fail on Travis #124 ( mbeacom ) General python cleanup #122 ( mbeacom ) Remove all-caps (text-uppercase) classes #116 ( bumi ) fix roadmap items shift #100 #113 ( alx ) Remove misleading buttons on gitcoin UI #112 ( tra38 ) css: fixed overflow scroll on tip recieve page #109 ( thelostone-mc ) css: resize images to fit within the timeline container #108 ( algae12 ) fix: rounded tip amount to 3 decimal places in mail #104 ( thelostone-mc ) Add Travis and Codecov integrations #102 ( mbeacom ) small fix for forcing the images of podium be bigger on leaderboard #99 ( ernaneluis ) doc: added contributing.md #97 ( thelostone-mc ) Update get_prices to use new etherdelta WS API #95 ( mbeacom ) Simplify bounty management command #93 ( mbeacom ) fix of issue #76 Overhaul leaderboards page design #91 ( ernaneluis ) Fix display of plurals for some models in admin #88 ( mbeacom ) PostgreSQL alpine and docker compose restart policies #85 ( mbeacom ) Tips now show USD estimates #84 ( rajatkapoor ) Fix grammer in alert on tip page #83 ( edkek ) testimonial: added carousel on landing page #80 ( thelostone-mc ) css: prettify the subscribe button #74 ( thelostone-mc ) Update tip page to auto calculate USD #72 ( mbeacom ) Cleanup python imports #71 ( mbeacom ) Fix roadmap items move when hover over them. #67 ( sc0Vu ) Add psql persistence and remove redundant services #60 ( mbeacom ) Decrease Docker image size #59 ( mbeacom ) fix bounty definition height #54 #55 ( Kielek ) Correct comma typo in statement of Gitcoin aliases #49 ( iamchrissmith ) WEB3 API documentation #47 ( lawrencelink ) Minor Typo Error #45 ( k4m4 ) Craigslist #44 ( rajatkapoor ) HTTP Strict Transport Security #41 ( sergio-alonso ) Standard pseudo-random generators are not suitable for security/cryptographic purposes. #39 ( sergio-alonso ) Update link on image #15 ( bransbury ) add dropdown menu search via select2, fix #3 #13 ( gasolin ) Fix space, typo and rename #11 ( gamwe6 ) Send tips in one step via Gitcoin.co #10 ( owocki ) Fix instruction for running locally #9 ( cifvts ) Documents API Fields & Filter/Sort URL Parameters #6 ( anglinb ) * This Change Log was automatically generated by github_changelog_generator","title":"submit_working (2018-01-09)"},{"location":"mk_contributors/","text":"Contributing to Gitcoin Contributions to gitcoin could come in different forms. Some contribute code changes, others contribute docs, others help answer questions from users, help keep the infrastructure running, We welcome all contributions from folks who are willing to work in good faith with the community. No contribution is too small and all contributions are valued. Monetization Policy Code of Conduct Issues Discussions And General Help Pull Requests Step 1: Fork Step 2: Branch Step 3: Code Step 4: Commit Step 5: Rebase Step 6: PRs Python Docstrings Classes Methods Example VSCode Remote Debugger VSCode Prerequisites Add Launch Configuration VSCode Additional Resources Additional Resources FAQ Contributing Static Assets Monetization Policy This repo uses Gitcoin to incentivize contributions from contributors all around the world. We believe that properly incentivizing Open Source Software means providing funding to support contributors, but we also recognize the dangerous precedent that is set when contributors who have been contributing for intrinsic reasons begin to expect extrinsic rewards for their contributions. Gitcoin has written about this, in the abstract, here . Tangibly, our monetary policy is: Our mission is to \"Grow Open Source\". Read More about our Mission here . We believe that contributors should contribute for intrinsic reasons first (see mission statement above), and we hereby provide notice that we will not be able to fund all contributions. Appreciate it if and when a Tip comes! Scope that is explicitly funded upfront will be posted to the Github Issue by @gitcoinbot , and will also be posted to the Gitcoin Issue Explorer . Code of Conduct Contributions to Gitcoin are governed by the Contributor Covenant version 1.4 . All contributors and participants agree to abide by its terms. To report violations, shoot out an email to founders@gitcoin.co The Code of Conduct is designed and intended, above all else, to help establish a culture within the project that allows anyone and everyone who wants to contribute to feel safe doing so. Open, diverse, and inclusive communities live and die on the basis of trust. Contributors can disagree with one another so long as they are done in good faith and everyone is working towards a common goal. Issues Issues in gitcoin/web are the primary means by which bug reports and general discussions are made. A contributor is allowed to create an issue, discuss, and provide a fix if needed. Before opening an issue, https://waffle.io/gitcoinco/web is a good place to go to see if there are any current issues with similar key words. This helps us cut down on duplicate tickets. When you open an issue , you'll notice four templates (bug, custom, discussion, feature) with the user-story format we like for our issue reports. When starting a new issue, please do your best to be as detailed and specific as possible. Bug report - use this to create a bug report to help us improve Gitcoin Discussion - use this template to start a discussion Feature request - use this to suggest a project idea Custom report - use this to report an issue that doesn't fall under any other category Discussions And General Help As Gitcoin is still at its early stages, drop by gitcoin.co/slack and say hi to know what's next / to get your answers cleared up. Pull Requests Pull Requests are the way in which concrete changes are made to the code and documentation. Prerequisites You must install pre-commit in order to enable our precommit hooks and pre-commit install from your gitcoinco/web root directory. In order to make use of the pre-commit hooks used for this repository, you should have a valid installation of node / npm , isort ( pip install isort ), yapf ( pip install yapf ), stylelint ( npm install -g stylelint ), and eslint ( npm install -g eslint ). User facing copy / text should be run through Django Translation Framework . For example, HTML user-facing pieces of copy are in {% blocktrans %} or {% trans %} fields. javascript user-facing pieces of copy are in ngettext fields. each of the views.py user-facing pieces of copy are in gettext_lazy fields each of the models help_text s are internationalized as are all the emails in marketing/mails.py run make autotranslate or a combination of the necessary ./manage.py makemessages and ./manage.py compilemessages commands. Take a look at /styleguide-alpha (ui_inventory.html), for a quick reference of user interface components. If you are contributing user-facing assets, interface components or other relevant visuals, then please add them to our UI Inventory page. Step 1: Fork Fork the project on GitHub and clone your fork locally. git clone git@github.com:username/web.git cd web git remote add upstream https://github.com/gitcoinco/web.git git fetch upstream Step 2: Branch It's always better to create local branches to work on a specific issue. Makes life easier for you if you are the kind who enjoys multiple things parallely. These should also be created directly off of the master branch. git checkout -b my-branch -t upstream/master Step 3: Code To keep the style of the Javascript code consistent we have a basic linting configured. To check your contributed code for errors run npm run eslint . To make life easy use the automatic fixing by running npm run eslint:fix before your commit. Use the pre-configured eslint for Javascript Avoid trailing whitespace & un-necessary white lines Indentation is as follows 1 tab = 2 spaces for .html and .js files 1 tab = 4 spaces for everything else Use rem for CSS when applicable Add relevant unit tests for all new Python logic and update existing tests to accommodate new logic. Step 4: Commit Ensure your code changes adhere to our styling and linting standards: npm run eslint:fix; npm run stylelint:fix; isort -rc --atomic . List all your changes as a list if needed else simply give a brief description on what the changes are. All lines at 100 columns. If your PR fixed an issue, Use the Fixes: prefix and the full issue URL. For other references use Refs: . Examples: Fixes: https://github.com/gitcoinco/web/issues/87 Refs: https://github.com/gitcoinco/web/issues/91 Sample commit A ```txt if you can write down the changes explaining it in a paragraph which each line wrapped within 100 lines. Fixes: https://github.com/gitcoinco/web/issues/87 Refs: https://github.com/gitcoinco/web/issues/91 ``` Sample commit B ```txt - list out your changes as points if there are many changes - if needed you can also send it across as - all wrapped within 100 lines Fixes: https://github.com/gitcoinco/web/issues/87 Refs: https://github.com/gitcoinco/web/issues/91 ``` 6. Squashing and Merging your commits to make our history neater is always welcomed, but squashing can be handled during the merge process. Step 5: Rebase Ensure you neat description on what your PR is for, so that it's easier for folks to understand the gist of it before jumping to the the code / doc. As a best practice, once you have committed your changes, it is a good idea to use git rebase (not git merge ) to ensure your changes are placed at the top. Plus merge conflicts can be resolved git fetch upstream git rebase upstream/master Step 6: PRs Please ensure that your pull request follows all of the community guidelines to include: Title is descriptive and generally focused on what the PR addresses (If your PR is a work in progress, include WIP in the title. Once the PR is ready for review, please remove WIP ) Description explains what the PR achieves or addresses If the PR modifies the frontend in any way, please attach screenshots and/or GIFs of all purposeful changes (before and after screens are recommended) The PR passes all CI checks, to include Stickler, codecov, and Travis. Python Docstrings Gitcoin attempts to adhere to PEP-257 while employing the Google Python Style Guide approach to docstring formatting. Classes class Gitcoin: \"\"\"Define the overall Gitcoin object. Attributes: repo (str): The Gitcoin repository. \"\"\" repo = 'gitcoinco/web' Methods def foo(bar='bar'): \"\"\"Handle string concatenation of the provided suffix. Args: bar (str): The foo suffix. Defaults to: bar. Attributes: foobar (str): The foo string concatentated with the provided bar variable. Returns: str: The concatenated string. \"\"\" foobar = f'foo{bar}' return foobar Example from __future__ import braces class Example: \"\"\"Define the overall Example object.\"\"\" # Class attributes. repo = 'gitcoinco/web' known_dances = ['tango'] def example(self): \"\"\"Some Example.example class method docstring. Returns: bool: Whether or not the Example performs the specified dance. \"\"\" return 'example' def example2(self): \"\"\"Some Example.example2 class method docstring. Attributes: var (str): The example2 variable. \"\"\" var = 'example2' def can_dance(example, dance='tango'): \"\"\"Handle determining whether or not Example can perform the provided dance. Args: dingo (dashboard.Example): The Example object. dance (str): The dance type. Defaults to: tango. Returns: bool: Whether or not the Example performs the specified dance. \"\"\" return dance in example.known_dances def example3(self): \"\"\"Some example3 method docstring. Attributes: var (str): The example3 variable. Returns: str: The example var text. \"\"\" var = 'example3' return var VSCode Remote Debugger One benefit of using VSCode is the built-in debugger and you can use the vscode debugger with Gitcoin! You must complete all prerequisite steps, add the launch.json configuration snippet, and ensure the Gitcoin web docker container is running. If this is your first time using the debugger, it's advised that you stop your existing docker-compose services: docker-compose down , add the necessary environment variable to .env , and rebuild the web image via: docker-compose build web or docker-compose up -d --build to additionally start the services following the build. Once you have completed all of the below outlined steps, you should be able to start debugging! VSCode Prerequisites VSCode Python support extension is installed. Gitcoin Docker Setup has been completed. Add VSCODE_DEBUGGER_ENABLED=on to your .env file. (This envvar must be added before downing/starting the compose services in order for the necessary ptvsd req to be installed) Please note: Completely restart the docker-compose services ( docker-compose down; docker-compose up -d ) following successful completion of all steps. Add Launch Configuration In order to use the vscode remote debugger for the Gitcoin Django app, you must add the below snippet to your Python debugger launch.json configuration. You can do this by: Switch to the Debugging tab ( \u21e7\u2318D ) Select Add Configuration... from the dropdown menu Add the following json snippet to the configurations array and save the file: { \"name\": \"Gitcoin Remote Debugger\", \"type\": \"python\", \"request\": \"attach\", \"localRoot\": \"${workspaceRoot}\", \"remoteRoot\": \"/code\", \"port\": 3030, \"host\": \"localhost\" } Additional VSCode Resources VSCode Debugging Overview VSCode Debugging Intro Video Additional Resources We either strongly employ or encourage the review and implementation of the following resources: Python Style Guide: PEP-8 The Zen of Python: PEP-20 Docstrings: PEP-257 Docutils: PEP-258 f-strings: PEP-498 Google Python Style Guide Hitchhiker's Guide to Python Django Documentation FAQ Contributing Static Assets Note: Please remember to optimize/compress your image assets via: make compress-images (Requires: jpeq-recompress, optipng, and svgo in PATH ) You can install the necessary binaries via: npm install -g jpeg-recompress-bin pngquant-bin svgo brew install optipng Q: I need to add static assets... Where to I put them? All assets that will be used as static resources must be placed into their appropriate place in the app/assets directory. Q: I've added the new assets to the appropriate directory, but can't seem to use them. How do I make Django recognize my newly added assets? Run: make collect-static if using Docker or cd app; python3 manage.py collectstatic -i other for virtualenv/local setup. Additionally, you can check out the Django Managing Static Files Documentation Welcome to the gitcoin community. Lets Grow Open Source Software.","title":"Contributors Guide"},{"location":"mk_contributors/#contributing-to-gitcoin","text":"Contributions to gitcoin could come in different forms. Some contribute code changes, others contribute docs, others help answer questions from users, help keep the infrastructure running, We welcome all contributions from folks who are willing to work in good faith with the community. No contribution is too small and all contributions are valued. Monetization Policy Code of Conduct Issues Discussions And General Help Pull Requests Step 1: Fork Step 2: Branch Step 3: Code Step 4: Commit Step 5: Rebase Step 6: PRs Python Docstrings Classes Methods Example VSCode Remote Debugger VSCode Prerequisites Add Launch Configuration VSCode Additional Resources Additional Resources FAQ Contributing Static Assets","title":"Contributing to Gitcoin"},{"location":"mk_contributors/#monetization-policy","text":"This repo uses Gitcoin to incentivize contributions from contributors all around the world. We believe that properly incentivizing Open Source Software means providing funding to support contributors, but we also recognize the dangerous precedent that is set when contributors who have been contributing for intrinsic reasons begin to expect extrinsic rewards for their contributions. Gitcoin has written about this, in the abstract, here . Tangibly, our monetary policy is: Our mission is to \"Grow Open Source\". Read More about our Mission here . We believe that contributors should contribute for intrinsic reasons first (see mission statement above), and we hereby provide notice that we will not be able to fund all contributions. Appreciate it if and when a Tip comes! Scope that is explicitly funded upfront will be posted to the Github Issue by @gitcoinbot , and will also be posted to the Gitcoin Issue Explorer .","title":"Monetization Policy"},{"location":"mk_contributors/#code-of-conduct","text":"Contributions to Gitcoin are governed by the Contributor Covenant version 1.4 . All contributors and participants agree to abide by its terms. To report violations, shoot out an email to founders@gitcoin.co The Code of Conduct is designed and intended, above all else, to help establish a culture within the project that allows anyone and everyone who wants to contribute to feel safe doing so. Open, diverse, and inclusive communities live and die on the basis of trust. Contributors can disagree with one another so long as they are done in good faith and everyone is working towards a common goal.","title":"Code of Conduct"},{"location":"mk_contributors/#issues","text":"Issues in gitcoin/web are the primary means by which bug reports and general discussions are made. A contributor is allowed to create an issue, discuss, and provide a fix if needed. Before opening an issue, https://waffle.io/gitcoinco/web is a good place to go to see if there are any current issues with similar key words. This helps us cut down on duplicate tickets. When you open an issue , you'll notice four templates (bug, custom, discussion, feature) with the user-story format we like for our issue reports. When starting a new issue, please do your best to be as detailed and specific as possible. Bug report - use this to create a bug report to help us improve Gitcoin Discussion - use this template to start a discussion Feature request - use this to suggest a project idea Custom report - use this to report an issue that doesn't fall under any other category","title":"Issues"},{"location":"mk_contributors/#discussions-and-general-help","text":"As Gitcoin is still at its early stages, drop by gitcoin.co/slack and say hi to know what's next / to get your answers cleared up.","title":"Discussions And General Help"},{"location":"mk_contributors/#pull-requests","text":"Pull Requests are the way in which concrete changes are made to the code and documentation.","title":"Pull Requests"},{"location":"mk_contributors/#prerequisites","text":"You must install pre-commit in order to enable our precommit hooks and pre-commit install from your gitcoinco/web root directory. In order to make use of the pre-commit hooks used for this repository, you should have a valid installation of node / npm , isort ( pip install isort ), yapf ( pip install yapf ), stylelint ( npm install -g stylelint ), and eslint ( npm install -g eslint ). User facing copy / text should be run through Django Translation Framework . For example, HTML user-facing pieces of copy are in {% blocktrans %} or {% trans %} fields. javascript user-facing pieces of copy are in ngettext fields. each of the views.py user-facing pieces of copy are in gettext_lazy fields each of the models help_text s are internationalized as are all the emails in marketing/mails.py run make autotranslate or a combination of the necessary ./manage.py makemessages and ./manage.py compilemessages commands. Take a look at /styleguide-alpha (ui_inventory.html), for a quick reference of user interface components. If you are contributing user-facing assets, interface components or other relevant visuals, then please add them to our UI Inventory page.","title":"Prerequisites"},{"location":"mk_contributors/#step-1-fork","text":"Fork the project on GitHub and clone your fork locally. git clone git@github.com:username/web.git cd web git remote add upstream https://github.com/gitcoinco/web.git git fetch upstream","title":"Step 1: Fork"},{"location":"mk_contributors/#step-2-branch","text":"It's always better to create local branches to work on a specific issue. Makes life easier for you if you are the kind who enjoys multiple things parallely. These should also be created directly off of the master branch. git checkout -b my-branch -t upstream/master","title":"Step 2: Branch"},{"location":"mk_contributors/#step-3-code","text":"To keep the style of the Javascript code consistent we have a basic linting configured. To check your contributed code for errors run npm run eslint . To make life easy use the automatic fixing by running npm run eslint:fix before your commit. Use the pre-configured eslint for Javascript Avoid trailing whitespace & un-necessary white lines Indentation is as follows 1 tab = 2 spaces for .html and .js files 1 tab = 4 spaces for everything else Use rem for CSS when applicable Add relevant unit tests for all new Python logic and update existing tests to accommodate new logic.","title":"Step 3: Code"},{"location":"mk_contributors/#step-4-commit","text":"Ensure your code changes adhere to our styling and linting standards: npm run eslint:fix; npm run stylelint:fix; isort -rc --atomic . List all your changes as a list if needed else simply give a brief description on what the changes are. All lines at 100 columns. If your PR fixed an issue, Use the Fixes: prefix and the full issue URL. For other references use Refs: . Examples: Fixes: https://github.com/gitcoinco/web/issues/87 Refs: https://github.com/gitcoinco/web/issues/91 Sample commit A ```txt if you can write down the changes explaining it in a paragraph which each line wrapped within 100 lines. Fixes: https://github.com/gitcoinco/web/issues/87 Refs: https://github.com/gitcoinco/web/issues/91 ``` Sample commit B ```txt - list out your changes as points if there are many changes - if needed you can also send it across as - all wrapped within 100 lines Fixes: https://github.com/gitcoinco/web/issues/87 Refs: https://github.com/gitcoinco/web/issues/91 ``` 6. Squashing and Merging your commits to make our history neater is always welcomed, but squashing can be handled during the merge process.","title":"Step 4: Commit"},{"location":"mk_contributors/#step-5-rebase","text":"Ensure you neat description on what your PR is for, so that it's easier for folks to understand the gist of it before jumping to the the code / doc. As a best practice, once you have committed your changes, it is a good idea to use git rebase (not git merge ) to ensure your changes are placed at the top. Plus merge conflicts can be resolved git fetch upstream git rebase upstream/master","title":"Step 5: Rebase"},{"location":"mk_contributors/#step-6-prs","text":"Please ensure that your pull request follows all of the community guidelines to include: Title is descriptive and generally focused on what the PR addresses (If your PR is a work in progress, include WIP in the title. Once the PR is ready for review, please remove WIP ) Description explains what the PR achieves or addresses If the PR modifies the frontend in any way, please attach screenshots and/or GIFs of all purposeful changes (before and after screens are recommended) The PR passes all CI checks, to include Stickler, codecov, and Travis.","title":"Step 6: PRs"},{"location":"mk_contributors/#python","text":"","title":"Python"},{"location":"mk_contributors/#docstrings","text":"Gitcoin attempts to adhere to PEP-257 while employing the Google Python Style Guide approach to docstring formatting.","title":"Docstrings"},{"location":"mk_contributors/#classes","text":"class Gitcoin: \"\"\"Define the overall Gitcoin object. Attributes: repo (str): The Gitcoin repository. \"\"\" repo = 'gitcoinco/web'","title":"Classes"},{"location":"mk_contributors/#methods","text":"def foo(bar='bar'): \"\"\"Handle string concatenation of the provided suffix. Args: bar (str): The foo suffix. Defaults to: bar. Attributes: foobar (str): The foo string concatentated with the provided bar variable. Returns: str: The concatenated string. \"\"\" foobar = f'foo{bar}' return foobar","title":"Methods"},{"location":"mk_contributors/#example","text":"from __future__ import braces class Example: \"\"\"Define the overall Example object.\"\"\" # Class attributes. repo = 'gitcoinco/web' known_dances = ['tango'] def example(self): \"\"\"Some Example.example class method docstring. Returns: bool: Whether or not the Example performs the specified dance. \"\"\" return 'example' def example2(self): \"\"\"Some Example.example2 class method docstring. Attributes: var (str): The example2 variable. \"\"\" var = 'example2' def can_dance(example, dance='tango'): \"\"\"Handle determining whether or not Example can perform the provided dance. Args: dingo (dashboard.Example): The Example object. dance (str): The dance type. Defaults to: tango. Returns: bool: Whether or not the Example performs the specified dance. \"\"\" return dance in example.known_dances def example3(self): \"\"\"Some example3 method docstring. Attributes: var (str): The example3 variable. Returns: str: The example var text. \"\"\" var = 'example3' return var","title":"Example"},{"location":"mk_contributors/#vscode-remote-debugger","text":"One benefit of using VSCode is the built-in debugger and you can use the vscode debugger with Gitcoin! You must complete all prerequisite steps, add the launch.json configuration snippet, and ensure the Gitcoin web docker container is running. If this is your first time using the debugger, it's advised that you stop your existing docker-compose services: docker-compose down , add the necessary environment variable to .env , and rebuild the web image via: docker-compose build web or docker-compose up -d --build to additionally start the services following the build. Once you have completed all of the below outlined steps, you should be able to start debugging!","title":"VSCode Remote Debugger"},{"location":"mk_contributors/#vscode-prerequisites","text":"VSCode Python support extension is installed. Gitcoin Docker Setup has been completed. Add VSCODE_DEBUGGER_ENABLED=on to your .env file. (This envvar must be added before downing/starting the compose services in order for the necessary ptvsd req to be installed) Please note: Completely restart the docker-compose services ( docker-compose down; docker-compose up -d ) following successful completion of all steps.","title":"VSCode Prerequisites"},{"location":"mk_contributors/#add-launch-configuration","text":"In order to use the vscode remote debugger for the Gitcoin Django app, you must add the below snippet to your Python debugger launch.json configuration. You can do this by: Switch to the Debugging tab ( \u21e7\u2318D ) Select Add Configuration... from the dropdown menu Add the following json snippet to the configurations array and save the file: { \"name\": \"Gitcoin Remote Debugger\", \"type\": \"python\", \"request\": \"attach\", \"localRoot\": \"${workspaceRoot}\", \"remoteRoot\": \"/code\", \"port\": 3030, \"host\": \"localhost\" }","title":"Add Launch Configuration"},{"location":"mk_contributors/#additional-vscode-resources","text":"VSCode Debugging Overview VSCode Debugging Intro Video","title":"Additional VSCode Resources"},{"location":"mk_contributors/#additional-resources","text":"We either strongly employ or encourage the review and implementation of the following resources: Python Style Guide: PEP-8 The Zen of Python: PEP-20 Docstrings: PEP-257 Docutils: PEP-258 f-strings: PEP-498 Google Python Style Guide Hitchhiker's Guide to Python Django Documentation","title":"Additional Resources"},{"location":"mk_contributors/#faq","text":"","title":"FAQ"},{"location":"mk_contributors/#contributing-static-assets","text":"Note: Please remember to optimize/compress your image assets via: make compress-images (Requires: jpeq-recompress, optipng, and svgo in PATH ) You can install the necessary binaries via: npm install -g jpeg-recompress-bin pngquant-bin svgo brew install optipng Q: I need to add static assets... Where to I put them? All assets that will be used as static resources must be placed into their appropriate place in the app/assets directory. Q: I've added the new assets to the appropriate directory, but can't seem to use them. How do I make Django recognize my newly added assets? Run: make collect-static if using Docker or cd app; python3 manage.py collectstatic -i other for virtualenv/local setup. Additionally, you can check out the Django Managing Static Files Documentation Welcome to the gitcoin community. Lets Grow Open Source Software.","title":"Contributing Static Assets"},{"location":"mk_envvars/","text":"Recognized Environment Variables The following environment variables are currently accepted by the local web application. You can overwrite the default values for these environment variables by adding them to the web/app/app/.env file. All of the environment variables used by this application conform to the django-environ documentation . Initial Overrides Variable Description Type Default CACHE_URL The django-environ compatible uri to your cache. str dbcache://my_cache_table DATABASE_URL The django-environ compatible uri to your database. str psql://postgres:postgres@db:5432/postgres DEBUG Whether or not to run the environment in Debug mode. bool True SECRET_KEY The secret key to use for your Django environment. str TODO Project / Entry Specific Variable Description Type Default FORCE_PROVISION Whether or not to force provisioning even if the container has been previously provisioned bool False FORCE_GET_PRICES Whether or not to force pulling fresh conversion rate data from etherdelta and poloniex bool False Amazon Web Services Variable Description Type Default AWS_ACCESS_KEY_ID Your AWS access key ID. str '' AWS_SECRET_ACCESS_KEY Your AWS secret access key str '' S3_REPORT_BUCKET The S3 bucket to be used to store reports. str TODO S3_REPORT_PREFIX The S3 path prefix to be used when storing reports. str TODO Colorado Coin Variable Description Type Default COLO_ACCOUNT_ADDRESS The coin distribution address. str '' COLO_ACCOUNT_PRIVATE_KEY The coin distribution private key. str '' Django Variable Description Type Default INSTALLED_APPS A list of additional apps to be recognized by Django. list [] Github Authentication Variable Description Type Default GITHUB_API_BASE_URL The Github API URL. str https://api.github.com GITHUB_AUTH_BASE_URL The Github OAuth authorization URL. str https://github.com/login/oauth/authorize GITHUB_TOKEN_URL The Github OAuth access token URL. str https://github.com/login/oauth/access_token GITHUB_SCOPE The Github application scope. str read:user,user:email,read:org GITHUB_CLIENT_ID The client ID of the Github OAuth app. str TODO GITHUB_CLIENT_SECRET The client secret of the Github OAuth app. str TODO GITHUB_API_USER The username of the Github account. str TODO GITHUB_API_TOKEN The token of the Github account. str TODO GITHUB_APP_NAME The name of your Github OAuth application. str gitcoin-local Gitcoin Bot For further information, please check out the Gitcoin Bot Documentation . Variable Description Type Default GITCOINBOT_APP_ID The Gitcoin Bot App ID provided by Github. str '' GITCOIN_BOT_CERT_PATH The relative path to the Gitcoin Bot pem certificate. str '' GITHUB_EVENT_HOOK_URL The Github event hook payload URL for Gitcoin Bot. str github/payload/ IGNORE_COMMENTS_FROM A list of Github handles to ignore comments from. list ['gitcoinbot', ] Sentry Variable Description Type Default SENTRY_USER The Sentry user name. str '' SENTRY_PASSWORD The Sentry password. str '' SENTRY_ADDRESS The Sentry host address. str '' SENTRY_PROJECT The Sentry project number. int '' SendGrid Variable Description Type Default SENDGRID_EVENT_HOOK_URL The SendGrid event hook URL. str sg_event_process SENDGRID_API_KEY The SendGrid API Key, required for sending emails. str None Slack Variable Description Type Default SLACK_TOKEN The API token to be used for interacting with Slack. str TODO Silk The below environment variables are useful for overwriting Django Silk settings. Variable Description Type Default ENABLE_SILK Whether or not to enable the Django Silk profiling and inspection tool. bool False SILKY_PYTHON_PROFILER Whether or not to enable the function profiler . bool True SILKY_PYTHON_PROFILER_BINARY Whether or not to enable the generation of .prof files. bool False SILKY_AUTHENTICATION Whether or not to require user authentication to access Silk. bool False SILKY_AUTHORISATION Whether or not to require is_staff to access Silk. bool False SILKY_META Whether or not to enable meta profiling . bool True SILKY_INTERCEPT_PERCENT Limit the number of request/responses stored by Silk. int 100 SILKY_MAX_RECORDED_REQUESTS Limit the number of request/response rows stored by Silk. int 10000 SILKY_MAX_RECORDED_REQUESTS_CHECK_PERCENT The percent of recorded data to perform gargbase collection on. int 10 SILKY_DYNAMIC_PROFILING dict {} Web3 Variable Description Type Default WEB3_HTTP_PROVIDER The Web3 HTTP provider URI to be used. str https://rinkeby.infura.io VSCode Remote Debugging If you opt to modify the port or listener interface, you must update your launch.json configuration accordingly. Variable Description Type Default VSCODE_DEBUGGER_ENABLED Whether or not to enable the ptvsd remote debugging service. bool False VSCODE_DEBUGGER_PORT The ptvsd port to be used for debugging. str 3030 VSCODE_DEBUGGER_INTERFACE The ptvsd network interface to be used for debugging. str 0.0.0.0 Miscellaneous Variable Description Type Default FAUCET_AMOUNT The amount of ETH to be distributed for approved faucet requests. float .0005 GITTER_TOKEN The Gitter chat API token. str False","title":"Environment Variables"},{"location":"mk_envvars/#recognized-environment-variables","text":"The following environment variables are currently accepted by the local web application. You can overwrite the default values for these environment variables by adding them to the web/app/app/.env file. All of the environment variables used by this application conform to the django-environ documentation .","title":"Recognized Environment Variables"},{"location":"mk_envvars/#initial-overrides","text":"Variable Description Type Default CACHE_URL The django-environ compatible uri to your cache. str dbcache://my_cache_table DATABASE_URL The django-environ compatible uri to your database. str psql://postgres:postgres@db:5432/postgres DEBUG Whether or not to run the environment in Debug mode. bool True SECRET_KEY The secret key to use for your Django environment. str TODO","title":"Initial Overrides"},{"location":"mk_envvars/#project-entry-specific","text":"Variable Description Type Default FORCE_PROVISION Whether or not to force provisioning even if the container has been previously provisioned bool False FORCE_GET_PRICES Whether or not to force pulling fresh conversion rate data from etherdelta and poloniex bool False","title":"Project / Entry Specific"},{"location":"mk_envvars/#amazon-web-services","text":"Variable Description Type Default AWS_ACCESS_KEY_ID Your AWS access key ID. str '' AWS_SECRET_ACCESS_KEY Your AWS secret access key str '' S3_REPORT_BUCKET The S3 bucket to be used to store reports. str TODO S3_REPORT_PREFIX The S3 path prefix to be used when storing reports. str TODO","title":"Amazon Web Services"},{"location":"mk_envvars/#colorado-coin","text":"Variable Description Type Default COLO_ACCOUNT_ADDRESS The coin distribution address. str '' COLO_ACCOUNT_PRIVATE_KEY The coin distribution private key. str ''","title":"Colorado Coin"},{"location":"mk_envvars/#django","text":"Variable Description Type Default INSTALLED_APPS A list of additional apps to be recognized by Django. list []","title":"Django"},{"location":"mk_envvars/#github-authentication","text":"Variable Description Type Default GITHUB_API_BASE_URL The Github API URL. str https://api.github.com GITHUB_AUTH_BASE_URL The Github OAuth authorization URL. str https://github.com/login/oauth/authorize GITHUB_TOKEN_URL The Github OAuth access token URL. str https://github.com/login/oauth/access_token GITHUB_SCOPE The Github application scope. str read:user,user:email,read:org GITHUB_CLIENT_ID The client ID of the Github OAuth app. str TODO GITHUB_CLIENT_SECRET The client secret of the Github OAuth app. str TODO GITHUB_API_USER The username of the Github account. str TODO GITHUB_API_TOKEN The token of the Github account. str TODO GITHUB_APP_NAME The name of your Github OAuth application. str gitcoin-local","title":"Github Authentication"},{"location":"mk_envvars/#gitcoin-bot","text":"For further information, please check out the Gitcoin Bot Documentation . Variable Description Type Default GITCOINBOT_APP_ID The Gitcoin Bot App ID provided by Github. str '' GITCOIN_BOT_CERT_PATH The relative path to the Gitcoin Bot pem certificate. str '' GITHUB_EVENT_HOOK_URL The Github event hook payload URL for Gitcoin Bot. str github/payload/ IGNORE_COMMENTS_FROM A list of Github handles to ignore comments from. list ['gitcoinbot', ]","title":"Gitcoin Bot"},{"location":"mk_envvars/#sentry","text":"Variable Description Type Default SENTRY_USER The Sentry user name. str '' SENTRY_PASSWORD The Sentry password. str '' SENTRY_ADDRESS The Sentry host address. str '' SENTRY_PROJECT The Sentry project number. int ''","title":"Sentry"},{"location":"mk_envvars/#sendgrid","text":"Variable Description Type Default SENDGRID_EVENT_HOOK_URL The SendGrid event hook URL. str sg_event_process SENDGRID_API_KEY The SendGrid API Key, required for sending emails. str None","title":"SendGrid"},{"location":"mk_envvars/#slack","text":"Variable Description Type Default SLACK_TOKEN The API token to be used for interacting with Slack. str TODO","title":"Slack"},{"location":"mk_envvars/#silk","text":"The below environment variables are useful for overwriting Django Silk settings. Variable Description Type Default ENABLE_SILK Whether or not to enable the Django Silk profiling and inspection tool. bool False SILKY_PYTHON_PROFILER Whether or not to enable the function profiler . bool True SILKY_PYTHON_PROFILER_BINARY Whether or not to enable the generation of .prof files. bool False SILKY_AUTHENTICATION Whether or not to require user authentication to access Silk. bool False SILKY_AUTHORISATION Whether or not to require is_staff to access Silk. bool False SILKY_META Whether or not to enable meta profiling . bool True SILKY_INTERCEPT_PERCENT Limit the number of request/responses stored by Silk. int 100 SILKY_MAX_RECORDED_REQUESTS Limit the number of request/response rows stored by Silk. int 10000 SILKY_MAX_RECORDED_REQUESTS_CHECK_PERCENT The percent of recorded data to perform gargbase collection on. int 10 SILKY_DYNAMIC_PROFILING dict {}","title":"Silk"},{"location":"mk_envvars/#web3","text":"Variable Description Type Default WEB3_HTTP_PROVIDER The Web3 HTTP provider URI to be used. str https://rinkeby.infura.io","title":"Web3"},{"location":"mk_envvars/#vscode-remote-debugging","text":"If you opt to modify the port or listener interface, you must update your launch.json configuration accordingly. Variable Description Type Default VSCODE_DEBUGGER_ENABLED Whether or not to enable the ptvsd remote debugging service. bool False VSCODE_DEBUGGER_PORT The ptvsd port to be used for debugging. str 3030 VSCODE_DEBUGGER_INTERFACE The ptvsd network interface to be used for debugging. str 0.0.0.0","title":"VSCode Remote Debugging"},{"location":"mk_envvars/#miscellaneous","text":"Variable Description Type Default FAUCET_AMOUNT The amount of ETH to be distributed for approved faucet requests. float .0005 GITTER_TOKEN The Gitter chat API token. str False","title":"Miscellaneous"},{"location":"mk_rest_api/","text":"HTTPS API Gitcoin provides a simple HTTPS API to access data without having to run your own Ethereum node. The API is live at https://gitcoin.co/api/v0.1 Datatypes Beyond simple datatypes like string or integer the API returns datatypes like dates that are serialized in a very specific fashion. Datatype Description Example date_time Date and time represented in ISO 8601 2017-09-24T18:59:53.964344Z ethereum_address An ethereum token address with the leading 0x 0x636f3093258412b96c43bef3663f1b853253ec59 token_type The type of token offered as a reward. Ex: ETH or GIT ETH bounties The bounties endpoint provides a listing of bounties and their current status. There are two endpoints that access bounties: https://gitcoin.co/api/v0.1/bounties - Returns a list of bounties https://gitcoin.co/api/v0.1/bounties/<bountyId> - Returns a single bounty by ID. Fields Field Key Datatype Description url string URL for this specific bounty Ex: api/v0.1/bounties/9 created_on date_time Creation timestamp modified_on date_time Last modified timestamp title string Title of the bounty web3_created date_time Creation timestamp for the transaction that holds this bounty value_in_token integer Amount of tokens rewarded for bounty token_name token_type Type of token. Ex: ETH , GIT token_address ethereum_address Address where the tokens are located bounty_type string Type of bounty. Ex: Bug , Feature , Security project_length string Relative length of project Ex: Hours , Days , Weeks , Months experience_level string Recommended experience level github_url string URL on GitHub where you can find the bounty description github_org_name string github org name github_repo_name string github repo name github_issue_number string github issue number keywords string comma delimited list of keywords current_bounty boolean Whether this bounty is the most current revision one or not expires_date date_time Date before which the bounty must be compelted value_in_eth integer Value of the bounty in Ethereum value_in_usdt float Approximation of value in USD at bounty web3_created timestamp value_in_usdt_now float Approximation of current value in USD now date_time Current date_time on the server action_urls dict a list of urls where user can take action against the bounty paid array List of users who have been paid from the bounty Current Status Field Key Datatype Description is_open boolean True if the bounty has not been completed status string Current status enum: ( open , The bounty was created), ( started , The bounty was started) ( submitted , Someone submitted work for the bounty) ( done , Someone fulfilled and completed the bounty) ( expired , The bounty expired w/o completion) Bounty Creator & Bounty Fulfiller Field Key Datatype Description bounty_owner_address ethereum_address Address of the person who owns the bounty bounty_owner_email string Email of the bounty owner bounty_owner_github_username string Username of the bounty owner metadata dictionary Misc metadata about the bounty and the creator fulfiller_address ethereum_address Address of the person who fulfilled the bounty fulfiller_email string Email of the person fulfilling the bounty fulfiller_github_username string Username of the fulfiller fulfiller_metadata dictionary githubUsername and notificationEmail for the fulfiller URL Parameters Filters You can filter the data returned from the API buy providing these keys as URL parameters experience_level , project_length , bounty_type , bounty_owner_address , is_open , and github_url . github_url can take a comma-seperated list of GitHub urls Order By By passing an order_by parameter you can order the data by the provided key. Ex: ?order_by=expires_date . To sort in the opposite direction you can add a - in from the the key ?order_by=-expires_date . Example Request ~ % curl \"https://gitcoin.co/api/v0.1/bounties/?&order_by=web3_created\" [ { \"url\": \"https:\\/\\/gitcoin.co\\/api\\/v0.1\\/bounties\\/87\\/\", \"created_on\": \"2017-09-22T01:42:07.060841Z\", \"modified_on\": \"2017-09-23T12:36:11.946334Z\", \"title\": \"Update local_settings.py.example\", \"web3_created\": \"2017-09-22T01:42:04Z\", \"value_in_token\": \"1000000000000000000.00\", \"token_name\": \"ETH\", \"token_address\": \"0x0000000000000000000000000000000000000000\", \"bounty_type\": \"\", \"project_length\": \"\", \"experience_level\": \"\", \"github_url\": \"https:\\/\\/github.com\\/owocki\\/pytrader\\/pull\\/83232\", \"bounty_owner_address\": \"0xd3d280c2866eaa795fc72bd850c48e7cce166e23\", \"bounty_owner_email\": \"ksowocki@gmail.com\", \"bounty_owner_github_username\": \"owocki\", \"fulfiller_address\": \"0x0000000000000000000000000000000000000000\", \"fulfiller_email\": null, \"fulfiller_github_username\": null, \"is_open\": true, \"expires_date\": \"2017-09-23T01:42:04Z\", \"fulfiller_metadata\": { }, \"current_bounty\": true, \"value_in_eth\": 1.0e+18, \"value_in_usdt_now\": 280.65, \"status\": \"expired\", \"now\": \"2017-09-24T18:59:53.964344Z\" }, .... ] WEB3 API You may interact with the HTTPS API as follows truffle(development)> BountyIndex.at('0x0ed0c2a859e9e576cdff840c51d29b6f8a405bdd').bountydetails.call('https://github.com/owocki/pytrader/pull/83'); [ { [String: '100000000000000000'] s: 1, e: 17, c: [ 1000 ] }, '0x0000000000000000000000000000000000000000', '0xd3d280c2866eaa795fc72bd850c48e7cce166e23', '0x0000000000000000000000000000000000000000', true, true, 'https://github.com/owocki/pytrader/pull/83', { [String: '1506220425'] s: 1, e: 9, c: [ 1506220425 ] }, '{\"issueTitle\":\"\",\"issueKeywords\":\"\",\"tokenName\":\"ETH\",\"githubUsername\":\"owocki\",\"notificationEmail\":\"ksowocki@gmail.com\",\"experienceLevel\":\"\",\"projectLength\":\"\",\"bountyType\":\"\"}', { [String: '1537756425'] s: 1, e: 9, c: [ 1537756425 ] }, '' ] be sure to replace 0x0ed0c2a859e9e576cdff840c51d29b6f8a405bdd with the BountyIndex contract address. be sure to replace https://github.com/owocki/pytrader/pull/83 with the issue that you care about. Further information on the smart contract interface is available at https://github.com/gitcoinco/smart_contracts/blob/master/contracts/bounty/BountyIndex.sol _bountydetails function returns the following fields: Fields Field Key Datatype Description amount float Bounty amount in ETH or specified ERC20 token amount_denomination string Denomination of the bounty action_url string URL of the bounty title string Title of hte bounty description string Description of the bounty created_on datetime Creation timestamp source_project string Source Project the bounty came from tags strings tags to classify the bounthy Bounties Universe API Access it at https://gitcoin.co/api/v0.1/universe The bounties universe API lists all bounties (offchain) that have not yet been put into the blockchain or (onchain) that aren't in standard bounties :)","title":"Rest API"},{"location":"mk_rest_api/#https-api","text":"Gitcoin provides a simple HTTPS API to access data without having to run your own Ethereum node. The API is live at https://gitcoin.co/api/v0.1","title":"HTTPS API"},{"location":"mk_rest_api/#datatypes","text":"Beyond simple datatypes like string or integer the API returns datatypes like dates that are serialized in a very specific fashion. Datatype Description Example date_time Date and time represented in ISO 8601 2017-09-24T18:59:53.964344Z ethereum_address An ethereum token address with the leading 0x 0x636f3093258412b96c43bef3663f1b853253ec59 token_type The type of token offered as a reward. Ex: ETH or GIT ETH","title":"Datatypes"},{"location":"mk_rest_api/#bounties","text":"The bounties endpoint provides a listing of bounties and their current status. There are two endpoints that access bounties: https://gitcoin.co/api/v0.1/bounties - Returns a list of bounties https://gitcoin.co/api/v0.1/bounties/<bountyId> - Returns a single bounty by ID.","title":"bounties"},{"location":"mk_rest_api/#fields","text":"Field Key Datatype Description url string URL for this specific bounty Ex: api/v0.1/bounties/9 created_on date_time Creation timestamp modified_on date_time Last modified timestamp title string Title of the bounty web3_created date_time Creation timestamp for the transaction that holds this bounty value_in_token integer Amount of tokens rewarded for bounty token_name token_type Type of token. Ex: ETH , GIT token_address ethereum_address Address where the tokens are located bounty_type string Type of bounty. Ex: Bug , Feature , Security project_length string Relative length of project Ex: Hours , Days , Weeks , Months experience_level string Recommended experience level github_url string URL on GitHub where you can find the bounty description github_org_name string github org name github_repo_name string github repo name github_issue_number string github issue number keywords string comma delimited list of keywords current_bounty boolean Whether this bounty is the most current revision one or not expires_date date_time Date before which the bounty must be compelted value_in_eth integer Value of the bounty in Ethereum value_in_usdt float Approximation of value in USD at bounty web3_created timestamp value_in_usdt_now float Approximation of current value in USD now date_time Current date_time on the server action_urls dict a list of urls where user can take action against the bounty paid array List of users who have been paid from the bounty Current Status Field Key Datatype Description is_open boolean True if the bounty has not been completed status string Current status enum: ( open , The bounty was created), ( started , The bounty was started) ( submitted , Someone submitted work for the bounty) ( done , Someone fulfilled and completed the bounty) ( expired , The bounty expired w/o completion) Bounty Creator & Bounty Fulfiller Field Key Datatype Description bounty_owner_address ethereum_address Address of the person who owns the bounty bounty_owner_email string Email of the bounty owner bounty_owner_github_username string Username of the bounty owner metadata dictionary Misc metadata about the bounty and the creator fulfiller_address ethereum_address Address of the person who fulfilled the bounty fulfiller_email string Email of the person fulfilling the bounty fulfiller_github_username string Username of the fulfiller fulfiller_metadata dictionary githubUsername and notificationEmail for the fulfiller","title":"Fields"},{"location":"mk_rest_api/#url-parameters","text":"Filters You can filter the data returned from the API buy providing these keys as URL parameters experience_level , project_length , bounty_type , bounty_owner_address , is_open , and github_url . github_url can take a comma-seperated list of GitHub urls Order By By passing an order_by parameter you can order the data by the provided key. Ex: ?order_by=expires_date . To sort in the opposite direction you can add a - in from the the key ?order_by=-expires_date .","title":"URL Parameters"},{"location":"mk_rest_api/#example-request","text":"~ % curl \"https://gitcoin.co/api/v0.1/bounties/?&order_by=web3_created\" [ { \"url\": \"https:\\/\\/gitcoin.co\\/api\\/v0.1\\/bounties\\/87\\/\", \"created_on\": \"2017-09-22T01:42:07.060841Z\", \"modified_on\": \"2017-09-23T12:36:11.946334Z\", \"title\": \"Update local_settings.py.example\", \"web3_created\": \"2017-09-22T01:42:04Z\", \"value_in_token\": \"1000000000000000000.00\", \"token_name\": \"ETH\", \"token_address\": \"0x0000000000000000000000000000000000000000\", \"bounty_type\": \"\", \"project_length\": \"\", \"experience_level\": \"\", \"github_url\": \"https:\\/\\/github.com\\/owocki\\/pytrader\\/pull\\/83232\", \"bounty_owner_address\": \"0xd3d280c2866eaa795fc72bd850c48e7cce166e23\", \"bounty_owner_email\": \"ksowocki@gmail.com\", \"bounty_owner_github_username\": \"owocki\", \"fulfiller_address\": \"0x0000000000000000000000000000000000000000\", \"fulfiller_email\": null, \"fulfiller_github_username\": null, \"is_open\": true, \"expires_date\": \"2017-09-23T01:42:04Z\", \"fulfiller_metadata\": { }, \"current_bounty\": true, \"value_in_eth\": 1.0e+18, \"value_in_usdt_now\": 280.65, \"status\": \"expired\", \"now\": \"2017-09-24T18:59:53.964344Z\" }, .... ]","title":"Example Request"},{"location":"mk_rest_api/#web3-api","text":"You may interact with the HTTPS API as follows truffle(development)> BountyIndex.at('0x0ed0c2a859e9e576cdff840c51d29b6f8a405bdd').bountydetails.call('https://github.com/owocki/pytrader/pull/83'); [ { [String: '100000000000000000'] s: 1, e: 17, c: [ 1000 ] }, '0x0000000000000000000000000000000000000000', '0xd3d280c2866eaa795fc72bd850c48e7cce166e23', '0x0000000000000000000000000000000000000000', true, true, 'https://github.com/owocki/pytrader/pull/83', { [String: '1506220425'] s: 1, e: 9, c: [ 1506220425 ] }, '{\"issueTitle\":\"\",\"issueKeywords\":\"\",\"tokenName\":\"ETH\",\"githubUsername\":\"owocki\",\"notificationEmail\":\"ksowocki@gmail.com\",\"experienceLevel\":\"\",\"projectLength\":\"\",\"bountyType\":\"\"}', { [String: '1537756425'] s: 1, e: 9, c: [ 1537756425 ] }, '' ] be sure to replace 0x0ed0c2a859e9e576cdff840c51d29b6f8a405bdd with the BountyIndex contract address. be sure to replace https://github.com/owocki/pytrader/pull/83 with the issue that you care about. Further information on the smart contract interface is available at https://github.com/gitcoinco/smart_contracts/blob/master/contracts/bounty/BountyIndex.sol _bountydetails function returns the following fields:","title":"WEB3 API"},{"location":"mk_rest_api/#fields_1","text":"Field Key Datatype Description amount float Bounty amount in ETH or specified ERC20 token amount_denomination string Denomination of the bounty action_url string URL of the bounty title string Title of hte bounty description string Description of the bounty created_on datetime Creation timestamp source_project string Source Project the bounty came from tags strings tags to classify the bounthy","title":"Fields"},{"location":"mk_rest_api/#bounties-universe-api","text":"Access it at https://gitcoin.co/api/v0.1/universe The bounties universe API lists all bounties (offchain) that have not yet been put into the blockchain or (onchain) that aren't in standard bounties :)","title":"Bounties Universe API"},{"location":"mk_setup/","text":"Running Locally with Docker (Recommended) git clone https://github.com/gitcoinco/web.git cd web cp app/app/local.env app/app/.env Startup server Running in Detached mode docker-compose up -d --build Running in the foreground docker-compose up --build Viewing Logs Actively follow a container's log: docker-compose logs -f web # Or any other container name View all container logs: docker-compose logs Navigate to http://localhost:8000/ . Note: Running docker-compose logs --tail=50 -f <optional container_name> will follow all container output in the active terminal window, while specifying a container name will follow that specific container's output. --tail is optional. Check out the Docker Compose CLI Reference for more information. You will need to edit the app/.env file with your local environment variables. Look for config items that are marked # required . Integration Setup (recommended) If you plan on using the Github integration, please read the third party integration guide . Static Asset Handling (optional) If you're testing in a staging or production style environment behind a CDN, pass the DJANGO_STATIC_HOST environment variable to your django web instance specifying the CDN URL. For example: DJANGO_STATIC_HOST='https://gitcoin.co Create Django Admin docker-compose exec web python3 app/manage.py createsuperuser Optional: Import bounty data from web3 to your database This can be useful if you'd like data to test with: docker-compose exec web python3 app/manage.py sync_geth or equivalently: docker-compose exec web python3 app/manage.py sync_geth rinkeby 402 99999999999 FAQ Running Tests Q: How can I run the tests locally? You can ensure your project will pass all Travis tests by running: make tests # docker-compose exec -e DJANGO_SETTINGS_MODULE=app.settings web pytest -p no:ethereum; npm run eslint; The above make command will run eslint and pytest . Fresh rebuild Q: My environment is erroring out due to missing modules/packages or postgresql errors. How can I fix it? make fresh # docker-compose down -v; docker-compose up -d --build; Create superuser Q: How can I access the django administration login? make superuser # docker-compose exec web python3 app/manage.py createsuperuser open http://localhost:8000/_administration Fix local test issues Q: How can I attempt automatic remediation of eslint and isort test failures? make fix # npm run eslint:fix; docker-compose exec web isort -rc --atomic .; Makefile Help Q: How can I see a complete list of Makefile commands and descriptions? make # make help On-chain activities Q: Which network should I be using for local testing? It is recommended to use the Rinkeby testnet for local development testing. You can receive some testnet eth by visiting the Rinkeby Faucet Alternatively, you can use the local ganache-cli test rpc network that ships with the docker compose stack by switching to Localhost 8545 in Metamask. Address already in use Q: I am receiving a \"address already in use\" error when attempting to run: docker-compose up This error can occur when you are already running a local instance of PostgreSQL or another service on any of the ports specified in the docker-compose.yml . You can identify which process is currently bound to the port with: lsof -i :<port_number> | grep LISTEN - for example: lsof -i :8000 | grep LISTEN and simply sudo kill <pid> , substituting the PID returned from lsof . Github Login Q: How can I enable the Github Login functionality on my local docker instance? If you plan on using the Github integration, please read the third party integration guide . ipdb Q: what's the best way to import ipdb; ipdb.set_trace() a HTTP request via docker? Add import ipdb;ipdb.set_trace() to the method you want to inspect, you then run: make get_ipdb_shell to drop into the active shell for inspection. Access Django Shell Q: How can I access the Django shell, similar to: python manage.py shell ? Simply run: make get_django_shell or docker-compose exec web python app/manage.py shell Access BASH Q: I want to inspect or manipulate the container via bash. How can I access the root shell of the container? Run: docker-compose exec web bash","title":"Setup Environment (recommended)"},{"location":"mk_setup/#running-locally-with-docker-recommended","text":"git clone https://github.com/gitcoinco/web.git cd web cp app/app/local.env app/app/.env","title":"Running Locally with Docker (Recommended)"},{"location":"mk_setup/#startup-server","text":"","title":"Startup server"},{"location":"mk_setup/#running-in-detached-mode","text":"docker-compose up -d --build","title":"Running in Detached mode"},{"location":"mk_setup/#running-in-the-foreground","text":"docker-compose up --build","title":"Running in the foreground"},{"location":"mk_setup/#viewing-logs","text":"Actively follow a container's log: docker-compose logs -f web # Or any other container name View all container logs: docker-compose logs Navigate to http://localhost:8000/ . Note: Running docker-compose logs --tail=50 -f <optional container_name> will follow all container output in the active terminal window, while specifying a container name will follow that specific container's output. --tail is optional. Check out the Docker Compose CLI Reference for more information. You will need to edit the app/.env file with your local environment variables. Look for config items that are marked # required .","title":"Viewing Logs"},{"location":"mk_setup/#integration-setup-recommended","text":"If you plan on using the Github integration, please read the third party integration guide .","title":"Integration Setup (recommended)"},{"location":"mk_setup/#static-asset-handling-optional","text":"If you're testing in a staging or production style environment behind a CDN, pass the DJANGO_STATIC_HOST environment variable to your django web instance specifying the CDN URL. For example: DJANGO_STATIC_HOST='https://gitcoin.co","title":"Static Asset Handling (optional)"},{"location":"mk_setup/#create-django-admin","text":"docker-compose exec web python3 app/manage.py createsuperuser","title":"Create Django Admin"},{"location":"mk_setup/#optional-import-bounty-data-from-web3-to-your-database","text":"This can be useful if you'd like data to test with: docker-compose exec web python3 app/manage.py sync_geth or equivalently: docker-compose exec web python3 app/manage.py sync_geth rinkeby 402 99999999999","title":"Optional: Import bounty data from web3 to your database"},{"location":"mk_setup/#faq","text":"","title":"FAQ"},{"location":"mk_setup/#running-tests","text":"Q: How can I run the tests locally? You can ensure your project will pass all Travis tests by running: make tests # docker-compose exec -e DJANGO_SETTINGS_MODULE=app.settings web pytest -p no:ethereum; npm run eslint; The above make command will run eslint and pytest .","title":"Running Tests"},{"location":"mk_setup/#fresh-rebuild","text":"Q: My environment is erroring out due to missing modules/packages or postgresql errors. How can I fix it? make fresh # docker-compose down -v; docker-compose up -d --build;","title":"Fresh rebuild"},{"location":"mk_setup/#create-superuser","text":"Q: How can I access the django administration login? make superuser # docker-compose exec web python3 app/manage.py createsuperuser open http://localhost:8000/_administration","title":"Create superuser"},{"location":"mk_setup/#fix-local-test-issues","text":"Q: How can I attempt automatic remediation of eslint and isort test failures? make fix # npm run eslint:fix; docker-compose exec web isort -rc --atomic .;","title":"Fix local test issues"},{"location":"mk_setup/#makefile-help","text":"Q: How can I see a complete list of Makefile commands and descriptions? make # make help","title":"Makefile Help"},{"location":"mk_setup/#on-chain-activities","text":"Q: Which network should I be using for local testing? It is recommended to use the Rinkeby testnet for local development testing. You can receive some testnet eth by visiting the Rinkeby Faucet Alternatively, you can use the local ganache-cli test rpc network that ships with the docker compose stack by switching to Localhost 8545 in Metamask.","title":"On-chain activities"},{"location":"mk_setup/#address-already-in-use","text":"Q: I am receiving a \"address already in use\" error when attempting to run: docker-compose up This error can occur when you are already running a local instance of PostgreSQL or another service on any of the ports specified in the docker-compose.yml . You can identify which process is currently bound to the port with: lsof -i :<port_number> | grep LISTEN - for example: lsof -i :8000 | grep LISTEN and simply sudo kill <pid> , substituting the PID returned from lsof .","title":"Address already in use"},{"location":"mk_setup/#github-login","text":"Q: How can I enable the Github Login functionality on my local docker instance? If you plan on using the Github integration, please read the third party integration guide .","title":"Github Login"},{"location":"mk_setup/#ipdb","text":"Q: what's the best way to import ipdb; ipdb.set_trace() a HTTP request via docker? Add import ipdb;ipdb.set_trace() to the method you want to inspect, you then run: make get_ipdb_shell to drop into the active shell for inspection.","title":"ipdb"},{"location":"mk_setup/#access-django-shell","text":"Q: How can I access the Django shell, similar to: python manage.py shell ? Simply run: make get_django_shell or docker-compose exec web python app/manage.py shell","title":"Access Django Shell"},{"location":"mk_setup/#access-bash","text":"Q: I want to inspect or manipulate the container via bash. How can I access the root shell of the container? Run: docker-compose exec web bash","title":"Access BASH"},{"location":"mk_styleguide/","text":"Styleguide This is a WIP in order to standardize and unify the look and feel of the product All Gitcoin UI styled classes are prefixed with g- to distincly identify them. Typography g-font-muli (Muli - Default) g-font-futura (Futura - For Marketing Pages) The font variations used in Gitcoin can be found in typography.css Note: All pages within gitcoin are expected to reuse these classes as applicable as opposed to declaring the font within the templates css file.","title":"StyleGuide"},{"location":"mk_styleguide/#styleguide","text":"This is a WIP in order to standardize and unify the look and feel of the product All Gitcoin UI styled classes are prefixed with g- to distincly identify them.","title":"Styleguide"},{"location":"mk_styleguide/#typography","text":"g-font-muli (Muli - Default) g-font-futura (Futura - For Marketing Pages) The font variations used in Gitcoin can be found in typography.css Note: All pages within gitcoin are expected to reuse these classes as applicable as opposed to declaring the font within the templates css file.","title":"Typography"},{"location":"mk_third_party_integrations/","text":"Third party integrations Setup Github OAuth2 App Integration (Recommended) Navigate to: Github - New Application and enter similar values to: Enter Application Name: MyGitcoinApp Homepage URL: http://localhost Application description: My Gitcoin App Authorization callback URL: http://localhost:8000/ (required) The authorization callback URL should match your BASE_URL value in web/app/app/.env Update the web/app/app/.env file to include the values provided by Github: GITHUB_CLIENT_ID=xxxx GITHUB_CLIENT_SECRET=xxx GITHUB_APP_NAME=MyGitcoinApp Please docker-compose down; docker-compose up -d to have the environment variable changes reflect in your local Gitcoin environment. Setup Github User Integration (Recommended) Navigate to: Github - New Token At minimum, select user scope. Update the web/app/app/.env file to include the values provided by Github: GITHUB_API_TOKEN=xxx GITHUB_API_USER=xxx Make sure you disable gitcoinbot notifications on your local, unless you are specifically testing that feature By default, we disable outbound GitHub notifications to any repository that isn't under the GITHUB_API_USER repositories. For example, if settings.GITHUB_API_USER == gitcoinco only github.com/gitcoinco/<repos> bounties and associated tips will post Github comments. Setup SendGrid to Send Emails (Recommended) Create a new SendGrid Account at https://sendgrid.com Go to https://app.sendgrid.com/settings/api_keys and create a new Sendgrid API key: Update the web/app/app/.env file to include the values provided by Github: SENDGRID_API_KEY=xxx # Be VERY CAREFUL when changing this setting. You don't want to accidently # send a bunch of github notifications :) ENABLE_NOTIFICATIONS_ON_NETWORK=None Gitcoinbot Installation Instructions This integration requires the Github OAuth2 App Integration Navigate to: Gitcoinbot Github App Copy the application ID found on the page as the GITCOINBOT_APP_ID environment variable. Make sure you disable gitcoinbot notifications on your local, unless you are specifically testing that feature # Be VERY CAREFUL when changing this setting. You don't want to accidentally # send a bunch of github notifications :) ENABLE_NOTIFICATIONS_ON_NETWORK=None The following environment variables must be set for gitcoinbot to work correctly: GITHUB_API_USER=gitcoinbot # Github Profile name of the bot. Defaults to: gitcoinbot GITCOINBOT_APP_ID=APP_ID_FROM_ABOVE # Defaults to empty. GITCOIN_BOT_CERT_PATH=RELATIVE_PATH_TO_CERT_FILE # Defaults to empty. Example GITHUB_API_USER=gitcoinbot # Github Profile name of the bot. Defaults to: gitcoinbot GITCOINBOT_APP_ID=7735 # Gitcoin Bot App ID GITCOIN_BOT_CERT_PATH=app/gitcoin_bot_secret.pem # If pem file is located at web/app/app/gitcoin_bot_secret.pem Aside from these environment variables, the settings page of the gitcoin bot application must have the correct url for webhook events to post to. It should be set to https://gitcoin.co/payload based on urls.py line 131. After running the migrations and deploying the gitcoin.co website, gitcoinbot will begin to receive webhook events from any repository that it is installed into. This application will then parse through the comments and respond if it is called with @gitcoinbot + registered action call. Sentry Integration Error tracking is entirely optional and primarily for internal staging and production tracking. If you would like to track errors of your local environment, setup an account at: Sentry.io Once you have access to your project secrets, you can enable Sentry error tracking for both the backend and frontend by adding the following environment variables to web/app/app/.env : SENTRY_USER=xxx SENTRY_PASSWORD=xxx SENTRY_ADDRESS=https://sentry.example.xxx SENTRY_PROJECT=2","title":"Third Party Integration Setup"},{"location":"mk_third_party_integrations/#third-party-integrations","text":"","title":"Third party integrations"},{"location":"mk_third_party_integrations/#setup-github-oauth2-app-integration-recommended","text":"Navigate to: Github - New Application and enter similar values to: Enter Application Name: MyGitcoinApp Homepage URL: http://localhost Application description: My Gitcoin App Authorization callback URL: http://localhost:8000/ (required) The authorization callback URL should match your BASE_URL value in web/app/app/.env Update the web/app/app/.env file to include the values provided by Github: GITHUB_CLIENT_ID=xxxx GITHUB_CLIENT_SECRET=xxx GITHUB_APP_NAME=MyGitcoinApp Please docker-compose down; docker-compose up -d to have the environment variable changes reflect in your local Gitcoin environment.","title":"Setup Github OAuth2 App Integration (Recommended)"},{"location":"mk_third_party_integrations/#setup-github-user-integration-recommended","text":"Navigate to: Github - New Token At minimum, select user scope. Update the web/app/app/.env file to include the values provided by Github: GITHUB_API_TOKEN=xxx GITHUB_API_USER=xxx Make sure you disable gitcoinbot notifications on your local, unless you are specifically testing that feature By default, we disable outbound GitHub notifications to any repository that isn't under the GITHUB_API_USER repositories. For example, if settings.GITHUB_API_USER == gitcoinco only github.com/gitcoinco/<repos> bounties and associated tips will post Github comments.","title":"Setup Github User Integration (Recommended)"},{"location":"mk_third_party_integrations/#setup-sendgrid-to-send-emails-recommended","text":"Create a new SendGrid Account at https://sendgrid.com Go to https://app.sendgrid.com/settings/api_keys and create a new Sendgrid API key: Update the web/app/app/.env file to include the values provided by Github: SENDGRID_API_KEY=xxx # Be VERY CAREFUL when changing this setting. You don't want to accidently # send a bunch of github notifications :) ENABLE_NOTIFICATIONS_ON_NETWORK=None","title":"Setup SendGrid to Send Emails (Recommended)"},{"location":"mk_third_party_integrations/#gitcoinbot-installation-instructions","text":"","title":"Gitcoinbot Installation Instructions"},{"location":"mk_third_party_integrations/#this-integration-requires-the-github-oauth2-app-integration","text":"Navigate to: Gitcoinbot Github App Copy the application ID found on the page as the GITCOINBOT_APP_ID environment variable. Make sure you disable gitcoinbot notifications on your local, unless you are specifically testing that feature # Be VERY CAREFUL when changing this setting. You don't want to accidentally # send a bunch of github notifications :) ENABLE_NOTIFICATIONS_ON_NETWORK=None The following environment variables must be set for gitcoinbot to work correctly: GITHUB_API_USER=gitcoinbot # Github Profile name of the bot. Defaults to: gitcoinbot GITCOINBOT_APP_ID=APP_ID_FROM_ABOVE # Defaults to empty. GITCOIN_BOT_CERT_PATH=RELATIVE_PATH_TO_CERT_FILE # Defaults to empty.","title":"This integration requires the Github OAuth2 App Integration"},{"location":"mk_third_party_integrations/#example","text":"GITHUB_API_USER=gitcoinbot # Github Profile name of the bot. Defaults to: gitcoinbot GITCOINBOT_APP_ID=7735 # Gitcoin Bot App ID GITCOIN_BOT_CERT_PATH=app/gitcoin_bot_secret.pem # If pem file is located at web/app/app/gitcoin_bot_secret.pem Aside from these environment variables, the settings page of the gitcoin bot application must have the correct url for webhook events to post to. It should be set to https://gitcoin.co/payload based on urls.py line 131. After running the migrations and deploying the gitcoin.co website, gitcoinbot will begin to receive webhook events from any repository that it is installed into. This application will then parse through the comments and respond if it is called with @gitcoinbot + registered action call.","title":"Example"},{"location":"mk_third_party_integrations/#sentry-integration","text":"Error tracking is entirely optional and primarily for internal staging and production tracking. If you would like to track errors of your local environment, setup an account at: Sentry.io Once you have access to your project secrets, you can enable Sentry error tracking for both the backend and frontend by adding the following environment variables to web/app/app/.env : SENTRY_USER=xxx SENTRY_PASSWORD=xxx SENTRY_ADDRESS=https://sentry.example.xxx SENTRY_PROJECT=2","title":"Sentry Integration"},{"location":"mk_welcomebot/","text":"Gitcoin Slack Welcomebot Github The Gitcoin Slack Welcomebot is a Flask application meant to run on AWS Lambda using Zappa . This bot is intended to be ran as a Python 3.6 AWS Lambda function. Get started with the welcomebot by running make init . You will need to follow the Slack Bot setup instructions outlined in the Python Slack Event API client documentation. The majority of this application resides in welcomebot/app.py","title":"Readme"},{"location":"mk_welcomebot/#gitcoin-slack-welcomebot","text":"Github The Gitcoin Slack Welcomebot is a Flask application meant to run on AWS Lambda using Zappa . This bot is intended to be ran as a Python 3.6 AWS Lambda function. Get started with the welcomebot by running make init . You will need to follow the Slack Bot setup instructions outlined in the Python Slack Event API client documentation. The majority of this application resides in welcomebot/app.py","title":"Gitcoin Slack Welcomebot"},{"location":"mk_widget/","text":"Widgets Why These widgets will help you advertise your support for Gitcoin bounties. We support both image widgets (see below) and dynamically resizing javascript widgets (see directly below) Dynamic Javascript Widget Preview The JS image is responsive. Here are some screenshots of it: Example Click here to see an example JSFiddle widget Step 1: Include the JavaScript SDK on your page once, ideally right after the opening body tag. <div id=\"gc-root\"></div> <script>(function(d, s, id) { var js, gjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = \"https://unpkg.com/gitcoin-sdk\"; gjs.parentNode.insertBefore(js, gjs); }(document, 'script', 'gitcoin-jssdk'));</script> Step 2: Place this code wherever you want the plugin to appear on your page. <div class=\"gitcoin-widget\" data-limit=\"2\" data-order-by=\"-expires_date\" data-organization=\"MetaMask\" data-repository=\"metamask-extension\" ></div> Autoloading Importing the SDK into your application will attempt to autoload the widget by searching for '.gitcoin-widget' selectors import 'gitcoin-sdk'; or require('gitcoin-sdk'); Programmatically You can also use the Widget programmatically. import { Widget } from 'gitcoin-sdk'; or const { Widget } = require('gitcoin-sdk'); Widget can be instantiated by passing a selector option, or an element reference. new Widget({ limit: 10, orderBy: '-expires_date', organization: 'MetaMask', repository: 'metamask-extension', selector: '.gitcoin-widget', }); Static Image Widget Example <a href=\"https://gitcoin.co/explorer?q=gitcoinco\"> <img src=\"https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco/web\"> </a> Results Repos that have this widget can expect to see 35% more interest in their repo's bounties Code Place the following code into your repo readme: <a href=\"https://gitcoin.co/explorer?q=YOUR_REPO_NAME\"> <img src=\"https://gitcoin.co/funding/embed?repo=https://github.com/YOUR_ORG_NAME/YOUR_REPO_NAME\"> </a> Make sure to replace the YOUR_ORG_NAME and YOUR_REPO_NAME text with your org and repo names! Example: <a href=\"https://gitcoin.co/explorer?q=gitcoinco\"> <img src=\"https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco/web\"> </a> Also, if you add &badge=1 to the image URL, a la <a href=\"https://gitcoin.co/explorer?q=gitcoinco\"> <img src=\"https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco/web&badge=1\"> </a> you will see a badge version of this widget. More Examples Badge Metamask Widget Ethereum web3py Widget Market Protocol Widget","title":"Widget Setup"},{"location":"mk_widget/#widgets","text":"","title":"Widgets"},{"location":"mk_widget/#why","text":"These widgets will help you advertise your support for Gitcoin bounties. We support both image widgets (see below) and dynamically resizing javascript widgets (see directly below)","title":"Why"},{"location":"mk_widget/#dynamic-javascript-widget","text":"","title":"Dynamic Javascript Widget"},{"location":"mk_widget/#preview","text":"The JS image is responsive. Here are some screenshots of it:","title":"Preview"},{"location":"mk_widget/#example","text":"Click here to see an example JSFiddle widget Step 1: Include the JavaScript SDK on your page once, ideally right after the opening body tag. <div id=\"gc-root\"></div> <script>(function(d, s, id) { var js, gjs = d.getElementsByTagName(s)[0]; if (d.getElementById(id)) return; js = d.createElement(s); js.id = id; js.src = \"https://unpkg.com/gitcoin-sdk\"; gjs.parentNode.insertBefore(js, gjs); }(document, 'script', 'gitcoin-jssdk'));</script> Step 2: Place this code wherever you want the plugin to appear on your page. <div class=\"gitcoin-widget\" data-limit=\"2\" data-order-by=\"-expires_date\" data-organization=\"MetaMask\" data-repository=\"metamask-extension\" ></div>","title":"Example"},{"location":"mk_widget/#autoloading","text":"Importing the SDK into your application will attempt to autoload the widget by searching for '.gitcoin-widget' selectors import 'gitcoin-sdk'; or require('gitcoin-sdk');","title":"Autoloading"},{"location":"mk_widget/#programmatically","text":"You can also use the Widget programmatically. import { Widget } from 'gitcoin-sdk'; or const { Widget } = require('gitcoin-sdk'); Widget can be instantiated by passing a selector option, or an element reference. new Widget({ limit: 10, orderBy: '-expires_date', organization: 'MetaMask', repository: 'metamask-extension', selector: '.gitcoin-widget', });","title":"Programmatically"},{"location":"mk_widget/#static-image-widget","text":"","title":"Static Image Widget"},{"location":"mk_widget/#example_1","text":"<a href=\"https://gitcoin.co/explorer?q=gitcoinco\"> <img src=\"https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco/web\"> </a>","title":"Example"},{"location":"mk_widget/#results","text":"Repos that have this widget can expect to see 35% more interest in their repo's bounties","title":"Results"},{"location":"mk_widget/#code","text":"Place the following code into your repo readme: <a href=\"https://gitcoin.co/explorer?q=YOUR_REPO_NAME\"> <img src=\"https://gitcoin.co/funding/embed?repo=https://github.com/YOUR_ORG_NAME/YOUR_REPO_NAME\"> </a> Make sure to replace the YOUR_ORG_NAME and YOUR_REPO_NAME text with your org and repo names! Example: <a href=\"https://gitcoin.co/explorer?q=gitcoinco\"> <img src=\"https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco/web\"> </a> Also, if you add &badge=1 to the image URL, a la <a href=\"https://gitcoin.co/explorer?q=gitcoinco\"> <img src=\"https://gitcoin.co/funding/embed?repo=https://github.com/gitcoinco/web&badge=1\"> </a> you will see a badge version of this widget.","title":"Code"},{"location":"mk_widget/#more-examples","text":"","title":"More Examples"},{"location":"mk_widget/#badge","text":"","title":"Badge"},{"location":"mk_widget/#metamask-widget","text":"","title":"Metamask Widget"},{"location":"mk_widget/#ethereum-web3py-widget","text":"","title":"Ethereum web3py Widget"},{"location":"mk_widget/#market-protocol-widget","text":"","title":"Market Protocol Widget"},{"location":"app/middleware/","text":"app.middleware drop_accept_langauge drop_accept_langauge(get_response) Define the middleware to remove accept-language headers from requests. This middleware is essentially a hack to allow us to continue to use the standard Django LocaleMiddleware without modification, but simply disable the autodetection aspect based on the Accept-Language header.","title":"Middleware"},{"location":"app/pipeline/","text":"app.pipeline Define authentication pipeline functions and logic. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . save_profile save_profile(backend, user, response, request, *args, **kwargs) Associate a Profile with a User.","title":"Auth Pipeline"},{"location":"app/sitemaps/","text":"app.sitemaps StaticViewSitemap StaticViewSitemap(self, /, *args, **kwargs) changefreq str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. priority Convert a string or number to a floating point number, if possible. IssueSitemap IssueSitemap(self, /, *args, **kwargs) changefreq str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. priority Convert a string or number to a floating point number, if possible. ProfileSitemap ProfileSitemap(self, /, *args, **kwargs) changefreq str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. priority Convert a string or number to a floating point number, if possible. ResultsSitemap ResultsSitemap(self, /, *args, **kwargs) changefreq str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. priority Convert a string or number to a floating point number, if possible. ExternalBountySitemap ExternalBountySitemap(self, /, *args, **kwargs) changefreq str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. priority Convert a string or number to a floating point number, if possible.","title":"Sitemaps"},{"location":"app/static_storage/","text":"app.static_storage Define the custom static storage to surpress bad URL references. SilentFileStorage SilentFileStorage(self, *args, **kwargs) Define the static storage using S3 via boto3 with hashing. If Django cannot find a referenced url in an asset, it will silently pass. location str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. url SilentFileStorage.url(self, name, force=True) Handle catching bad URLs and return the name if route is unavailable. MediaFileStorage MediaFileStorage(self, *args, **kwargs) Define the media storage backend for user uploaded/stored files. location str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'.","title":"Static Storage"},{"location":"app/thumbnail_processors/","text":"app.thumbnail_processors Define the EthOS thumbnail processors. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . circular_processor circular_processor(image, circle=False, **kwargs) Force the image to a circle.","title":"Thumbnail Processors"},{"location":"app/utils/","text":"app.utils NotEqual NotEqual(self, lhs, rhs) Allow lookup and exclusion using not equal. lookup_name str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. as_sql NotEqual.as_sql(self, compiler, connection) Handle as SQL method for not equal lookup. get_query_cache_key get_query_cache_key(compiler) Generate a cache key from a SQLCompiler. This cache key is specific to the SQL query and its context (which database is used). The same query in the same context (= the same database) must generate the same cache key. Args: compiler (django.db.models.sql.compiler.SQLCompiler): A SQLCompiler that will generate the SQL query. Returns: int: The cache key. get_table_cache_key get_table_cache_key(db_alias, table) Generates a cache key from a SQL table. Args: db_alias (str): The alias of the used database. table (str): The name of the SQL table. Returns: int: The cache key. get_raw_cache_client get_raw_cache_client(backend='default') Get a raw Redis cache client connection. Args: backend (str): The backend to attempt connection against. Raises: Exception: The exception is raised/caught if any generic exception is encountered during the connection attempt. Returns: redis.client.StrictRedis: The raw Redis client connection. If an exception is encountered, return None. add_contributors add_contributors(repo_data) Add contributor data to repository data dictionary. Args: repo_data (dict): The repository data dictionary to be updated. Returns: dict: The updated repository data dictionary. setup_lang setup_lang(request, user) Handle setting the user's language preferences and store in the session. Args: request (Request): The Django request object. user (User): The Django user object. Raises: DoesNotExist: The exception is raised if no profile is found for the specified handle. handle_location_request handle_location_request(request) Handle determining location data from request IP. get_location_from_ip get_location_from_ip(ip_address) Get the location associated with the provided IP address. Args: ip_address (str): The IP address to lookup. Returns: dict: The GeoIP location data dictionary. get_country_from_ip get_country_from_ip(ip_address, db=None) Get the user's country information from the provided IP address. clean_str clean_str(string) Clean the provided string of all non-alpha numeric characters.","title":"Utilities"},{"location":"avatar/admin/","text":"avatar.admin Define the Avatar admin layout. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . GeneralAdmin GeneralAdmin(self, model, admin_site) Define the GeneralAdmin administration layout. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ProfileInline ProfileInline(self, parent_model, admin_site) Define the Profile related name inline class. max_num int([x]) -> integer int(x, base=10) -> integer Convert a number or string to an integer, or return 0 if no arguments are given. If x is a number, return x. int (). For floating point numbers, this truncates towards zero. If x is not a number or if base is given, then x must be a string, bytes, or bytearray instance representing an integer literal in the given base. The literal can be preceded by '+' or '-' and be surrounded by whitespace. The base defaults to 10. Valid bases are 0 and 2-36. Base 0 means to interpret the base from the string as an integer literal. int('0b100', base=0) 4 verbose_name str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. verbose_name_plural str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. Profile ProfileInline.Profile(self, *args, **kwargs) Define the structure of the user profile. TODO: * Remove all duplicate identity related information already stored on User. AvatarAdmin AvatarAdmin(self, model, admin_site) Define the Avatar administration layout. fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. inlines Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. readonly_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. svg_asset AvatarAdmin.svg_asset(self, instance) Define the avatar SVG tag to be displayed in the admin. custom_png_asset AvatarAdmin.custom_png_asset(self, instance) Define the custom avatar PNG tag to be displayed in the admin. github_svg_asset AvatarAdmin.github_svg_asset(self, instance) Define the Github avatar PNG tag to be displayed in the admin. png_asset AvatarAdmin.png_asset(self, instance) Define the avatar PNG tag to be displayed in the admin.","title":"Admin"},{"location":"avatar/exceptions/","text":"avatar.exceptions AvatarError AvatarError(self, *args, **kwargs) Base class for exceptions in the Avatar module. AvatarConversionError AvatarConversionError(self, *args, **kwargs) Handle avatar conversion failures.","title":"Exceptions"},{"location":"avatar/models/","text":"avatar.models Define the Avatar models. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Avatar Avatar(self, *args, **kwargs) Store the options necessary to render a Gitcoin avatar. avatar_url Return the appropriate avatar URL. config A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. custom_avatar_png Just like the FileDescriptor, but for ImageFields. The only difference is assigning the width/height to the width_field/height_field, if appropriate. _method Avatar._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Avatar._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Avatar._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Avatar._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) github_avatar_url Return the Github avatar URL. github_svg The descriptor for the file attribute on the model instance. Return a FieldFile when accessed so you can write code like:: >>> from myapp.models import MyModel >>> instance = MyModel.objects.get(pk=1) >>> instance.file.size Assign a file object on assignment so you can do:: >>> with open('/path/to/hello.world', 'r') as f: ... instance.file = File(f) ICON_SIZE Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. png Just like the FileDescriptor, but for ImageFields. The only difference is assigning the width/height to the width_field/height_field, if appropriate. profile_set Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. svg The descriptor for the file attribute on the model instance. Return a FieldFile when accessed so you can write code like:: >>> from myapp.models import MyModel >>> instance = MyModel.objects.get(pk=1) >>> instance.file.size Assign a file object on assignment so you can do:: >>> with open('/path/to/hello.world', 'r') as f: ... instance.file = File(f) use_github_avatar A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. save Avatar.save(self, *args, force_insert=False, force_update=False, **kwargs) Override the save to perform change comparison against PNG and SVG fields. pull_github_avatar Avatar.pull_github_avatar(self) Pull the latest avatar from Github and store in Avatar.png. Returns: str: The stored Github avatar URL. determine_response Avatar.determine_response(self, use_svg=True) Determine the content type and file to serve. Args: use_svg (bool): Whether or not to use SVG format. get_avatar_url Avatar.get_avatar_url(self, use_svg=True) Get the Avatar URL. Args: use_svg (bool): Whether or not to use SVG format. create_from_config Avatar.create_from_config(self, svg_name='avatar') Create an avatar SVG from the configuration. TODO: * Deprecate in favor of request param based view using templates. convert_field Avatar.convert_field(self, source, target='custom_avatar_png', input_fmt='svg', output_fmt='png', force_save=False) Handle converting from the source field to the target based on format. convert_custom_svg Avatar.convert_custom_svg(self, force_save=False) Handle converting the custom Avatar SVG to PNG. convert_github_png Avatar.convert_github_png(self, force_save=False) Handle converting the Github Avatar PNG to SVG.","title":"Models"},{"location":"avatar/templatetags/","text":"avatar.templatetags.avatar_tags Define the Avatar template tags. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ .","title":"Template Tags"},{"location":"avatar/utils/","text":"avatar.utils Define the Avatar utilities. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . get_svg_templates get_svg_templates() Get the SVG templates for all avatar categories. handle_avatar_payload handle_avatar_payload(request) Handle the Avatar payload. get_temp_image_file get_temp_image_file(url) Fetch an image from a remote URL and hold in temporary IO. Args: url (str): The remote image URL. Returns: BytesIO: The temporary BytesIO containing the image. get_github_avatar get_github_avatar(handle) Pull the latest avatar from Github and store in Avatar.png. Returns: bool: Whether or not the Github avatar was updated. convert_img convert_img(svg_obj, input_fmt='svg', output_fmt='png') Convert an SVG to another format. Args: svg_obj (File): The SVG File/ContentFile. fmt (str): The output format. Defaults to: png. Returns: BytesIO: The BytesIO stream containing the converted File data. None: If there is an exception, the method returns None.","title":"Utilities"},{"location":"avatar/views/","text":"avatar.views Define the Avatar views. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . avatar avatar(request) Serve an avatar. save_avatar save_avatar(request) Save the Avatar configuration. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed.","title":"Views"},{"location":"bounty_requests/admin/","text":"bounty_requests.admin Define admin related functionality for Bounty Requests. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . BountyRequestAdmin BountyRequestAdmin(self, model, admin_site) Setup the BountyRequest admin results display. list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"Admin"},{"location":"bounty_requests/models/","text":"bounty_requests.models Define bounty requests related models. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . BountyQuerySet BountyQuerySet(self, model=None, query=None, using=None, hints=None) Define the Bounty Request QuerySet Manager. BountyRequest BountyRequest(self, *args, **kwargs) Define the Bounty Request model. amount A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. comment A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. comment_admin A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. eth_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method BountyRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method BountyRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method BountyRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method BountyRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) _method BountyRequest._method(self, *, field=<django.db.models.fields.CharField: status>) github_url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. requested_by Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. requested_by_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. status A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. STATUS_CHOICES Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object. STATUS_CLOSED str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. STATUS_FUNDED str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. STATUS_OPEN str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'.","title":"Models"},{"location":"bounty_requests/views/","text":"bounty_requests.views Define bounty request views. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ .","title":"Views"},{"location":"credits/views/","text":"credits.views","title":"Views"},{"location":"dashboard/admin/","text":"dashboard.admin Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . BountyFulfillmentAdmin BountyFulfillmentAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. GeneralAdmin GeneralAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ActivityAdmin ActivityAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. TokenApprovalAdmin TokenApprovalAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ToolVoteAdmin ToolVoteAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. InterestAdmin InterestAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. UserActionAdmin UserActionAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ProfileAdmin ProfileAdmin(self, model, admin_site) list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. TipAdmin TipAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. readonly_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. BountyAdmin BountyAdmin(self, model, admin_site) list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. readonly_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"Admin"},{"location":"dashboard/embed/","text":"dashboard.embed","title":"Embedded"},{"location":"dashboard/healthchecks/","text":"dashboard.healthchecks Define custom healthchecks. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . IPFSBackend IPFSBackend(self) Define the IPFS healthcheck backend. critical_service bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. check_status IPFSBackend.check_status(self) Define the functionality of the health check. identifier IPFSBackend.identifier(self) Define the displayed name of the healthcheck.","title":"Healthchecks"},{"location":"dashboard/helpers/","text":"dashboard.helpers Handle dashboard helpers and related logic. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . get_bounty_view_kwargs get_bounty_view_kwargs(request) Get the relevant kwargs from the request. handle_bounty_views handle_bounty_views(request) Handle bounty view entry. Attributes: bounty (dashboard.Bounty): The bounty object for the specified request. bounty_kwargs (dict): The relevant key/values from the request to be used for the Bounty query. Returns: dashboard.Bounty: The Bounty object. amount amount(request) Determine the value of the provided denomination and amount in ETH and USD. Raises: Http404: The exception is raised if any error is encountered. Returns: JsonResponse: A JSON response containing ETH and USDT values. issue_details issue_details(request) Determine the Github issue keywords of the specified Github issue or PR URL. Todo: * Modify the view to only use the Github API (remove BeautifulSoup). * Simplify the view logic. Returns: JsonResponse: A JSON response containing the Github issue or PR keywords. normalize_url normalize_url(url) Normalize the URL. Args: url (str): The URL to be normalized. Returns: str: The normalized URL. sync_bounty_with_web3 sync_bounty_with_web3(bounty_contract, url) Sync the Bounty with Web3. Args: bounty_contract (Web3): The Web3 contract instance. url (str): The bounty URL. Returns: tuple: A tuple of bounty change data. tuple[0] (bool): Whether or not the Bounty changed. tuple[1] (dashboard.models.Bounty): The first old bounty object. tuple[2] (dashboard.models.Bounty): The new Bounty object. BountyStage BountyStage(self, /, *args, **kwargs) Python enum class that matches up with the Standard Bounties BountyStage enum. Attributes: Draft (int): Bounty is a draft. Active (int): Bounty is active. Dead (int): Bounty is dead. Active Python enum class that matches up with the Standard Bounties BountyStage enum. Attributes: Draft (int): Bounty is a draft. Active (int): Bounty is active. Dead (int): Bounty is dead. Dead Python enum class that matches up with the Standard Bounties BountyStage enum. Attributes: Draft (int): Bounty is a draft. Active (int): Bounty is active. Dead (int): Bounty is dead. Draft Python enum class that matches up with the Standard Bounties BountyStage enum. Attributes: Draft (int): Bounty is a draft. Active (int): Bounty is active. Dead (int): Bounty is dead. UnsupportedSchemaException UnsupportedSchemaException(self, /, *args, **kwargs) Define unsupported schema exception handling. bounty_did_change bounty_did_change(bounty_id, new_bounty_details) Determine whether or not the Bounty has changed. Args: bounty_id (int): The ID of the Bounty. new_bounty_details (dict): The new Bounty raw data JSON. Returns: bool: Whether or not the Bounty has changed. QuerySet: The old bounties queryset. handle_bounty_fulfillments handle_bounty_fulfillments(fulfillments, new_bounty, old_bounty) Handle BountyFulfillment creation for new bounties. Args: fulfillments (dict): The fulfillments data dictionary. new_bounty (dashboard.models.Bounty): The new Bounty object. old_bounty (dashboard.models.Bounty): The old Bounty object. Returns: QuerySet: The BountyFulfillments queryset. create_new_bounty create_new_bounty(old_bounties, bounty_payload, bounty_details, bounty_id) Handle new Bounty creation in the event of bounty changes. Possible Bounty Stages: 0: Draft 1: Active 2: Dead Returns: dashboard.models.Bounty: The new Bounty object. process_bounty_details process_bounty_details(bounty_details) Process bounty details. Args: bounty_details (dict): The Bounty details. Raises: UnsupportedSchemaException: Exception raised if the schema is unknown or unsupported. Returns: tuple: A tuple of bounty change data. tuple[0] (bool): Whether or not the Bounty changed. tuple[1] (dashboard.models.Bounty): The first old bounty object. tuple[2] (dashboard.models.Bounty): The new Bounty object. get_bounty_data_for_activity get_bounty_data_for_activity(bounty) Get data from bounty to be saved in activity records. Args: bounty (dashboard.models.Bounty): The Bounty object. Returns: dict: The Bounty data represented as a dictionary. get_fulfillment_data_for_activity get_fulfillment_data_for_activity(fulfillment) Get data from fulfillment to be saved in activity records. Args: fulfillment (dashboard.models.BountyFulfillment): The BountyFulfillment. Returns: dict: The BountyFulfillment data represented as a dictionary. record_bounty_activity record_bounty_activity(event_name, old_bounty, new_bounty, _fulfillment=None) Records activity based on bounty changes Args: event_name (string): the event old_bounty (dashboard.models.Bounty): The old Bounty object. new_bounty (dashboard.models.Bounty): The new Bounty object. Raises: Exception: Log all exceptions that occur during fulfillment checks. Returns: dashboard.Activity: The Activity object if user_profile is present or None. record_user_action record_user_action(event_name, old_bounty, new_bounty) Record a user action. Args: event_name (str): The event to be recorded. old_bounty (Bounty): The old Bounty object. new_bounty (Bounty): The new Bounty object. Raises: Exception: Log all exceptions that occur during fulfillment checks. process_bounty_changes process_bounty_changes(old_bounty, new_bounty) Process Bounty changes. Args: old_bounty (dashboard.models.Bounty): The old Bounty object. new_bounty (dashboard.models.Bounty): The new Bounty object.","title":"Helpers"},{"location":"dashboard/ios/","text":"dashboard.ios","title":"iOS"},{"location":"dashboard/models/","text":"dashboard.models Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Bounty_interested Bounty_interested(self, *args, **kwargs) Bounty_interested(id, bounty, interest) bounty Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. bounty_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. interest Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. interest_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. Tool_votes Tool_votes(self, *args, **kwargs) Tool_votes(id, tool, toolvote) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. tool Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. tool_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. toolvote Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. toolvote_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. BountyQuerySet BountyQuerySet(self, model=None, query=None, using=None, hints=None) Handle the manager queryset for Bounties. current BountyQuerySet.current(self) Filter results down to current bounties only. stats_eligible BountyQuerySet.stats_eligible(self) Exclude results that we don't want to track in statistics. exclude_by_status BountyQuerySet.exclude_by_status(self, excluded_statuses=None) Exclude results with a status matching the provided list. filter_by_status BountyQuerySet.filter_by_status(self, filtered_status=None) Filter results with a status matching the provided list. keyword BountyQuerySet.keyword(self, keyword) Filter results to all Bounty objects containing the keywords. Args: keyword (str): The keyword to search title, issue description, and issue keywords by. Returns: dashboard.models.BountyQuerySet: The QuerySet of bounties filtered by keyword. hidden BountyQuerySet.hidden(self) Filter results to only bounties that have been manually hidden by moderators. visible BountyQuerySet.visible(self) Filter results to only bounties not marked as hidden. needs_review BountyQuerySet.needs_review(self) Filter results by bounties that need reviewed. reviewed BountyQuerySet.reviewed(self) Filter results by bounties that have been reviewed. warned BountyQuerySet.warned(self) Filter results by bounties that have been warned for inactivity. escalated BountyQuerySet.escalated(self) Filter results by bounties that have been escalated for review. closed BountyQuerySet.closed(self) Filter results by bounties that have been closed on Github. not_started BountyQuerySet.not_started(self) Filter results by bounties that have not been picked up in 3+ days. has_funds BountyQuerySet.has_funds(self) Filter results by bounties that are actively funded or funds have been dispersed. Bounty Bounty(self, *args, **kwargs) Define the structure of a Bounty. Attributes: BOUNTY_TYPES (list of tuples): The valid bounty types. EXPERIENCE_LEVELS (list of tuples): The valid experience levels. PROJECT_LENGTHS (list of tuples): The possible project lengths. STATUS_CHOICES (list of tuples): The valid status stages. FUNDED_STATUSES (list of str): The list of status types considered to have retained value. OPEN_STATUSES (list of str): The list of status types considered open. CLOSED_STATUSES (list of str): The list of status types considered closed. TERMINAL_STATUSES (list of str): The list of status types considered terminal states. accepted A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. activities Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. additional_funding_summary Return a dict describing the additional funding from crowdfunding that this object has admin_mark_as_remarket_ready A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. admin_override_and_hide A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. admin_override_suspend_auto_approval A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. attached_job_description A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. balance A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. bounty_owner_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. bounty_owner_email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. bounty_owner_github_username A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. bounty_owner_name A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. bounty_owner_profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. bounty_owner_profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. bounty_type A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. BOUNTY_TYPES Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. bulk_payout_tips Return the Bulk payout tips associated with this bounty. canceled_on A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. CLOSED_STATUSES Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. contract_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. current_bounty A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. experience_level A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. EXPERIENCE_LEVELS Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. expires_date A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfillment_accepted_on A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfillment_started_on A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfillment_submitted_on A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfillments Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. FUNDED_STATUSES Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. funding_organisation A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method Bounty._method(self, *, field=<django.db.models.fields.CharField: bounty_type>) _method Bounty._method(self, *, field=<django.db.models.fields.CharField: experience_level>) _method Bounty._method(self, *, field=<django.db.models.fields.CharField: idx_status>) _method Bounty._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Bounty._method(self, *, field=<django.db.models.fields.DateTimeField: expires_date>, is_next=True, **kwargs) _method Bounty._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Bounty._method(self, *, field=<django.db.models.fields.DateTimeField: web3_created>, is_next=True, **kwargs) _method Bounty._method(self, *, field=<django.db.models.fields.CharField: permission_type>) _method Bounty._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Bounty._method(self, *, field=<django.db.models.fields.DateTimeField: expires_date>, is_next=False, **kwargs) _method Bounty._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) _method Bounty._method(self, *, field=<django.db.models.fields.DateTimeField: web3_created>, is_next=False, **kwargs) _method Bounty._method(self, *, field=<django.db.models.fields.CharField: project_length>) _method Bounty._method(self, *, field=<django.db.models.fields.CharField: project_type>) github_comments A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. github_issue_details A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. github_url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. idx_experience_level A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. idx_project_length A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. idx_status A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. interested Accessor to the related objects manager on the forward and reverse sides of a many-to-many relation. In the example:: class Pizza(Model): toppings = ManyToManyField(Topping, related_name='pizzas') Pizza.toppings and Topping.pizzas are ManyToManyDescriptor instances. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. interested_comment A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. is_legacy Determine if the Bounty is legacy based on sunset date. Todo: * Remove this method following legacy bounty sunsetting. Returns: bool: Whether or not the Bounty is using the legacy contract. is_open A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. is_project_type_fulfilled Determine whether or not the Project Type is currently fulfilled. Todo: * Add remaining Project Type fulfillment handling. Returns: bool: Whether or not the Bounty Project Type is fully staffed. issue_description A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. last_comment_date A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. match_set Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. metadata A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. network A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. now Return the time now in the current timezone. num_fulfillments A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. OPEN_STATUSES Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. override_status A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. paid Return list of users paid for this bounty. past_expiration_date Return true IFF issue is past expiration date past_hard_expiration_date Return true IFF issue is past smart contract expiration date and therefore cannot ever be claimed again permission_type A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. PERMISSION_TYPES Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. privacy_preferences A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. project_length A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. PROJECT_LENGTHS Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. project_type A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. PROJECT_TYPES Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_data A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. snooze_warnings_for_days A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. standard_bounties_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. status Determine the status of the Bounty. Raises: Exception: Catch whether or not any exception is encountered and return unknown for status. Returns: str: The status of the Bounty. STATUS_CHOICES Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object. submissions_comment A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. TERMINAL_STATUSES Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. tips Return the tips associated with this bounty. title A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. title_or_desc Return the title of the issue. token_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. token_name A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. token_value_in_usdt A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. token_value_time_peg A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. value_in_eth A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. value_in_token A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. value_in_usdt A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. value_in_usdt_now A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. value_true A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. web3_created A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. web3_type A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. save Bounty.save(self, *args, **kwargs) Define custom handling for saving bounties. get_absolute_url Bounty.get_absolute_url(self) Get the absolute URL for the Bounty. Returns: str: The absolute URL for the Bounty. get_relative_url Bounty.get_relative_url(self, preceding_slash=True) Get the relative URL for the Bounty. Attributes: preceding_slash (bool): Whether or not to include a preceding slash. Returns: str: The relative URL for the Bounty. snooze_url Bounty.snooze_url(self, num_days) Get the bounty snooze URL. Args: num_days (int): The number of days to snooze the Bounty. Returns: str: The snooze URL based on the provided number of days. approve_worker_url Bounty.approve_worker_url(self, worker) Get the bounty work approval URL. Args: worker (string): The handle to approve Returns: str: The work approve URL based on the worker name reject_worker_url Bounty.reject_worker_url(self, worker) Get the bounty work rejection URL. Args: worker (string): The handle to reject Returns: str: The work reject URL based on the worker name is_hunter Bounty.is_hunter(self, handle) Determine whether or not the profile is the bounty hunter. Args: handle (str): The profile handle to be compared. Returns: bool: Whether or not the user is the bounty hunter. is_funder Bounty.is_funder(self, handle) Determine whether or not the profile is the bounty funder. Args: handle (str): The profile handle to be compared. Returns: bool: Whether or not the user is the bounty funder. get_avatar_url Bounty.get_avatar_url(self, gitcoin_logo_flag=False) Return the local avatar URL. get_github_api_url Bounty.get_github_api_url(self) Get the Github API URL associated with the bounty. Returns: str: The Github API URL associated with the issue. fetch_issue_item Bounty.fetch_issue_item(self, item_type='body') Fetch the item type of an issue. Args: type (str): The github API response body item to be fetched. Returns: str: The item content. fetch_issue_comments Bounty.fetch_issue_comments(self, save=True) Fetch issue comments for the associated Github issue. Args: save (bool): Whether or not to save the Bounty after fetching. Returns: dict: The comments data dictionary provided by Github. action_urls Bounty.action_urls(self) Provide URLs for bounty related actions. Returns: dict: A dictionary of action URLS for this bounty. is_notification_eligible Bounty.is_notification_eligible(self, var_to_check=True) Determine whether or not a notification is eligible for transmission outside of production. Returns: bool: Whether or not the Bounty is eligible for outbound notifications. BountyFulfillmentQuerySet BountyFulfillmentQuerySet(self, model=None, query=None, using=None, hints=None) Handle the manager queryset for BountyFulfillments. accepted BountyFulfillmentQuerySet.accepted(self) Filter results to accepted bounty fulfillments. submitted BountyFulfillmentQuerySet.submitted(self) Exclude results that have not been submitted. BountyFulfillment BountyFulfillment(self, *args, **kwargs) The structure of a fulfillment on a Bounty. accepted A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. accepted_on A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. bounty Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. bounty_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfiller_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfiller_email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfiller_github_url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfiller_github_username A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfiller_hours_worked A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfiller_metadata A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfiller_name A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfillment_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method BountyFulfillment._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method BountyFulfillment._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method BountyFulfillment._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method BountyFulfillment._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. to_json Define the JSON representation of BountyFulfillment. Returns: dict: A JSON representation of BountyFulfillment. save BountyFulfillment.save(self, *args, **kwargs) Define custom handling for saving bounty fulfillments. BountySyncRequest BountySyncRequest(self, *args, **kwargs) Define the structure for bounty syncing. _method BountySyncRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method BountySyncRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method BountySyncRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method BountySyncRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) github_url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. processed A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. Subscription Subscription(self, *args, **kwargs) Subscription(id, created_on, modified_on, email, raw_data, ip) email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method Subscription._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Subscription._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Subscription._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Subscription._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. ip A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. raw_data A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. Tip Tip(self, *args, **kwargs) Tip(id, created_on, modified_on, web3_type, emails, url, tokenName, tokenAddress, amount, comments_priv, comments_public, ip, expires_date, github_url, from_name, from_email, from_username, username, network, txid, receive_txid, received_on, from_address, receive_address, recipient_profile, sender_profile, metadata, is_for_bounty_fulfiller) activities Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. amount A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. comments_priv A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. comments_public A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. emails A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. expires_date A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. from_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. from_email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. from_name A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. from_username A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method Tip._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Tip._method(self, *, field=<django.db.models.fields.DateTimeField: expires_date>, is_next=True, **kwargs) _method Tip._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Tip._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Tip._method(self, *, field=<django.db.models.fields.DateTimeField: expires_date>, is_next=False, **kwargs) _method Tip._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) github_url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. ip A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. is_for_bounty_fulfiller A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. metadata A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. network A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. receive_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. receive_txid A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. received_on A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. recipient_profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. recipient_profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. sender_profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. sender_profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. tokenAddress A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. tokenName A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. txid A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. username A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. web3_type A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. is_notification_eligible Tip.is_notification_eligible(self, var_to_check=True) Determine whether or not a notification is eligible for transmission outside of production. Returns: bool: Whether or not the Tip is eligible for outbound notifications. InterestQuerySet InterestQuerySet(self, model=None, query=None, using=None, hints=None) Handle the manager queryset for Interests. needs_review InterestQuerySet.needs_review(self) Filter results to Interest objects requiring review by moderators. warned InterestQuerySet.warned(self) Filter results to Interest objects that are currently in warning. Interest Interest(self, *args, **kwargs) Define relationship for profiles expressing interest on a bounty. acceptance_date A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. bounty_set Accessor to the related objects manager on the forward and reverse sides of a many-to-many relation. In the example:: class Pizza(Model): toppings = ManyToManyField(Topping, related_name='pizzas') Pizza.toppings and Topping.pizzas are ManyToManyDescriptor instances. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. created A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method Interest._method(self, *, field=<django.db.models.fields.CharField: status>) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. issue_message A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. pending A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. status A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. STATUS_OKAY str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. STATUS_PENDING str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. STATUS_REVIEW str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. STATUS_SNOOZED str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. STATUS_WARNED str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. WORK_STATUSES Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object. mark_for_review Interest.mark_for_review(self) Flag the Interest for review by the moderation team. ActivityQuerySet ActivityQuerySet(self, model=None, query=None, using=None, hints=None) Handle the manager queryset for Activities. needs_review ActivityQuerySet.needs_review(self) Filter results to Activity objects to be reviewed by moderators. reviewed ActivityQuerySet.reviewed(self) Filter results to Activity objects to be reviewed by moderators. warned ActivityQuerySet.warned(self) Filter results to Activity objects to be reviewed by moderators. escalated_for_removal ActivityQuerySet.escalated_for_removal(self) Filter results to Activity objects to be reviewed by moderators. Activity Activity(self, *args, **kwargs) Represent Start work/Stop work event. Attributes: ACTIVITY_TYPES (list of tuples): The valid activity types. activity_type A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. ACTIVITY_TYPES Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. bounty Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. bounty_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. created A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method Activity._method(self, *, field=<django.db.models.fields.CharField: activity_type>) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. metadata A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. needs_review A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. tip Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. tip_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. to_dict Activity.to_dict(self, fields=None, exclude=None) Define the standard to dict representation of the object. Args: fields (list): The list of fields to include. If not provided, include all fields. If not provided, all fields are included. Defaults to: None. exclude (list): The list of fields to exclude. If not provided, no fields are excluded. Default to: None. Returns: dict: The dictionary representation of the object. ProfileQuerySet ProfileQuerySet(self, model=None, query=None, using=None, hints=None) Define the Profile QuerySet to be used as the objects manager. visible ProfileQuerySet.visible(self) Filter results to only visible profiles. hidden ProfileQuerySet.hidden(self) Filter results to only hidden profiles. Profile Profile(self, *args, **kwargs) Define the structure of the user profile. TODO: * Remove all duplicate identity related information already stored on User. actions Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. activities Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. alumni Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. avatar Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. avatar_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. bounties_funded Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. bounty_requests Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. data A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. discord_repos A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. discord_webhook_url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. email_subscriptions Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. ens_registration Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. faucet_requests Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. form_submission_records A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfilled Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. _method Profile._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Profile._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Profile._method(self, *, field=<django.db.models.fields.CharField: pref_lang_code>) _method Profile._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Profile._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) get_quarterly_stats Generate last 90 days stats for this user. Returns: dict : containing the following information 'user_total_earned_eth': Total earnings of user in ETH. 'user_total_earned_usd': Total earnings of user in USD. 'user_total_funded_usd': Total value of bounties funded by the user on bounties in done status in USD 'user_total_funded_hours': Total hours input by the developers on the fulfillment of bounties created by the user in USD 'user_fulfilled_bounties_count': Total bounties fulfilled by user 'user_fufilled_bounties': bool, if the user fulfilled bounties 'user_funded_bounties_count': Total bounties funded by the user 'user_funded_bounties': bool, if the user funded bounties in the last quarter 'user_funded_bounty_developers': Unique set of users that fulfilled bounties funded by the user 'user_avg_hours_per_funded_bounty': Average hours input by developer on fulfillment per bounty 'user_avg_hourly_rate_per_funded_bounty': Average hourly rate in dollars per bounty funded by user 'user_avg_eth_earned_per_bounty': Average earning in ETH earned by user per bounty 'user_avg_usd_earned_per_bounty': Average earning in USD earned by user per bounty 'user_num_completed_bounties': Total no. of bounties completed. 'user_num_funded_fulfilled_bounties': Total bounites that were funded by the user and fulfilled 'user_bounty_completion_percentage': Percentage of bounties successfully completed by the user 'user_funded_fulfilled_percentage': Percentage of bounties funded by the user that were fulfilled 'user_active_in_last_quarter': bool, if the user was active in last quarter 'user_no_of_languages': No of languages user used while working on bounties. 'user_languages': Languages that were used in bounties that were worked on. 'relevant_bounties': a list of Bounty(s) that would match the skillset input by the user into the Match tab of their settings github_access_token A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. github_events Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. handle A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. hide_profile A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. interested Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. is_moderator Determine whether or not the user is a moderator. Returns: bool: Whether or not the user is a moderator. is_staff Determine whether or not the user is a staff member. Returns: bool: Whether or not the user is a member of the staff. last_sync_date A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. leaderboard_ranks Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. max_num_issues_start_work A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. max_tip_amount_usdt_per_tx A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. max_tip_amount_usdt_per_week A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. pref_lang_code A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. preferred_payout_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. received_tips Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. sent_tips Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. slack_channel A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. slack_repos A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. slack_token A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. suppress_leaderboard A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. token_approvals Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. trust_profile A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. user Accessor to the related object on the forward side of a one-to-one relation. In the example:: class Restaurant(Model): place = OneToOneField(Place, related_name='restaurant') Restaurant.place is a ForwardOneToOneDescriptor instance. user_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. votes Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. is_github_token_valid Profile.is_github_token_valid(self) Check whether or not a Github OAuth token is valid. Args: access_token (str): The Github OAuth token. Returns: bool: Whether or not the provided OAuth token is valid. get_access_token Profile.get_access_token(self, save=True) Get the Github access token from User. Args: save (bool): Whether or not to save the User access token to the profile. Raises: Exception: The exception is raised in the event of any error and returns an empty string. Returns: str: The Github access token. get_slack_repos Profile.get_slack_repos(self, join=False) Get the profile's slack tracked repositories. Args: join (bool): Whether or not to return a joined string representation. Defaults to: False. Returns: list of str: If joined is False, a list of slack repositories. str: If joined is True, a combined string of slack repositories. update_slack_integration Profile.update_slack_integration(self, token, channel, repos) Update the profile's slack integration settings. Args: token (str): The profile's slack token. channel (str): The profile's slack channel. repos (list of str): The profile's github repositories to track. get_discord_repos Profile.get_discord_repos(self, join=False) Get the profile's Discord tracked repositories. Args: join (bool): Whether or not to return a joined string representation. Defaults to: False. Returns: list of str: If joined is False, a list of discord repositories. str: If joined is True, a combined string of discord repositories. update_discord_integration Profile.update_discord_integration(self, webhook_url, repos) Update the profile's Discord integration settings. Args: webhook_url (str): The profile's Discord webhook url. repos (list of str): The profile's github repositories to track. get_eth_sum Profile.get_eth_sum(self, sum_type='collected', network='mainnet') Get the sum of collected or funded ETH based on the provided type. Args: sum_type (str): The sum to lookup. Defaults to: collected. network (str): The network to query results for. Defaults to: mainnet. Returns: float: The total sum of all ETH of the provided type. get_who_works_with Profile.get_who_works_with(self, work_type='collected', network='mainnet') Get an array of profiles that this user works with. Args: work_type (str): The work type to lookup. Defaults to: collected. network (str): The network to query results for. Defaults to: mainnet. Returns: dict: list of the profiles that were worked with (key) and the number of times they occured get_funded_bounties Profile.get_funded_bounties(self, network='mainnet') Get the bounties that this user has funded Args: network (string): the network to look at. Defaults to: mainnet. Returns: queryset: list of bounties to_dict Profile.to_dict(self, activities=True, leaderboards=True, network=None, tips=True) Get the dictionary representation with additional data. Args: activities (bool): Whether or not to include activity queryset data. Defaults to: True. leaderboards (bool): Whether or not to include leaderboard position data. Defaults to: True. network (str): The Ethereum network to use for relevant queries. Defaults to: None (Environment specific). tips (bool): Whether or not to include tip data. Defaults to: True. Attributes: params (dict): The context dictionary to be returned. query_kwargs (dict): The kwargs to be passed to all queries throughout the method. sum_eth_funded (float): The total amount of ETH funded. sum_eth_collected (float): The total amount of ETH collected. Returns: dict: The profile card context. post_login post_login(sender, request, user, **kwargs) Handle actions to take on user login. post_logout post_logout(sender, request, user, **kwargs) Handle actions to take on user logout. ProfileSerializer ProfileSerializer(self, instance=None, data=<class 'rest_framework.fields.empty'>, **kwargs) Handle serializing the Profile object. Meta ProfileSerializer.Meta(self, /, *args, **kwargs) Define the profile serializer metadata. to_representation ProfileSerializer.to_representation(self, instance) Provide the serialized representation of the Profile. Args: instance (Profile): The Profile object to be serialized. Returns: dict: The serialized Profile. normalize_tip_usernames normalize_tip_usernames(sender, instance, **kwargs) Handle pre-save signals from Tips to normalize Github usernames. UserAction UserAction(self, *args, **kwargs) Records Actions that a user has taken . action A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. ACTION_TYPES Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. _method UserAction._method(self, *, field=<django.db.models.fields.CharField: action>) _method UserAction._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method UserAction._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method UserAction._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method UserAction._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. ip_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. location_data A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. metadata A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. user Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. user_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. CoinRedemption CoinRedemption(self, *args, **kwargs) Define the coin redemption schema. amount A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. coinredemptionrequest Accessor to the related object on the reverse side of a one-to-one relation. In the example:: class Restaurant(Model): place = OneToOneField(Place, related_name='restaurant') Place.restaurant is a ReverseOneToOneDescriptor instance. contract_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. expires_date A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method CoinRedemption._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method CoinRedemption._method(self, *, field=<django.db.models.fields.DateTimeField: expires_date>, is_next=True, **kwargs) _method CoinRedemption._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method CoinRedemption._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method CoinRedemption._method(self, *, field=<django.db.models.fields.DateTimeField: expires_date>, is_next=False, **kwargs) _method CoinRedemption._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. network A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. shortcode A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. token_name A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. to_checksum_address to_checksum_address(sender, instance, **kwargs) Handle pre-save signals from CoinRemptions to normalize the contract address. CoinRedemptionRequest CoinRedemptionRequest(self, *args, **kwargs) Define the coin redemption request schema. coin_redemption Accessor to the related object on the forward side of a one-to-one relation. In the example:: class Restaurant(Model): place = OneToOneField(Place, related_name='restaurant') Restaurant.place is a ForwardOneToOneDescriptor instance. coin_redemption_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method CoinRedemptionRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method CoinRedemptionRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method CoinRedemptionRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method CoinRedemptionRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. ip A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. sent_on A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. txaddress A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. txid A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. Tool Tool(self, *args, **kwargs) Define the Tool schema. active A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. CAT_ADVANCED str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. CAT_ALPHA str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. CAT_BASIC str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. CAT_BUILD str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. CAT_COMING_SOON str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. CAT_COMMUNITY str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. CAT_FOR_FUN str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. category A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. description A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. GAS_TOOLS str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. _method Tool._method(self, *, field=<django.db.models.fields.CharField: category>) _method Tool._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Tool._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Tool._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Tool._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. img A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. link A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. link_copy A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. name A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. new A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. stat_graph A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. TOOL_CATEGORIES Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object. url_name A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. votes Accessor to the related objects manager on the forward and reverse sides of a many-to-many relation. In the example:: class Pizza(Model): toppings = ManyToManyField(Topping, related_name='pizzas') Pizza.toppings and Topping.pizzas are ManyToManyDescriptor instances. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. ToolVote ToolVote(self, *args, **kwargs) Define the vote placed on a tool. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. tool_set Accessor to the related objects manager on the forward and reverse sides of a many-to-many relation. In the example:: class Pizza(Model): toppings = ManyToManyField(Topping, related_name='pizzas') Pizza.toppings and Topping.pizzas are ManyToManyDescriptor instances. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. value A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. TokenApproval TokenApproval(self, *args, **kwargs) A token approval. approved_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. approved_name A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. coinbase A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method TokenApproval._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method TokenApproval._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method TokenApproval._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method TokenApproval._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. network A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. token_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. token_name A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. tx A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed.","title":"Models"},{"location":"dashboard/notifications/","text":"dashboard.notifications Handle dashboard related notifications. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . github_org_to_twitter_tags github_org_to_twitter_tags(github_org) Build a string of github organization twitter tags. Args: github_org (str): The Github organization. Returns: str: The concatenated string of twitter tags. maybe_market_to_twitter maybe_market_to_twitter(bounty, event_name) Tweet the specified Bounty event. Args: bounty (dashboard.models.Bounty): The Bounty to be marketed. event_name (str): The name of the event. Returns: bool: Whether or not the twitter notification was sent successfully. maybe_market_to_slack maybe_market_to_slack(bounty, event_name) Send a Slack message for the specified Bounty. Args: bounty (dashboard.models.Bounty): The Bounty to be marketed. event_name (str): The name of the event. Returns: bool: Whether or not the Slack notification was sent successfully. build_message_for_integration build_message_for_integration(bounty, event_name) Build message to be posted to integrated service (e.g. slack, discord). Args: bounty (dashboard.models.Bounty): The Bounty to be marketed. event_name (str): The name of the event. Returns: str: Message to post to slack. maybe_market_to_user_slack maybe_market_to_user_slack(bounty, event_name) Send a Slack message to the user's slack channel for the specified Bounty. Args: bounty (dashboard.models.Bounty): The Bounty to be marketed. event_name (str): The name of the event. Returns: bool: Whether or not the Slack notification was sent successfully. maybe_market_to_user_discord maybe_market_to_user_discord(bounty, event_name) Send a Discord message to the user's discord channel for the specified Bounty. Args: bounty (dashboard.models.Bounty): The Bounty to be marketed. event_name (str): The name of the event. Returns: bool: Whether or not the Discord notification was sent successfully. maybe_market_tip_to_email maybe_market_tip_to_email(tip, emails) Send an email for the specified Tip. Args: tip (dashboard.models.Tip): The Tip to be marketed. emails (list of str): The list of emails to notify. Returns: bool: Whether or not the email notification was sent successfully. maybe_market_tip_to_slack maybe_market_tip_to_slack(tip, event_name) Send a Slack message for the specified Tip. Args: tip (dashboard.models.Tip): The Tip to be marketed. event_name (str): The name of the event. Returns: bool: Whether or not the Slack notification was sent successfully. build_github_notification build_github_notification(bounty, event_name, profile_pairs=None) Build a Github comment for the specified Bounty. Args: bounty (dashboard.models.Bounty): The Bounty to be marketed. event_name (str): The name of the event. profile_pairs (list of tuples): The list of username and profile page URL tuple pairs. Returns: bool: Whether or not the Github comment was posted successfully. maybe_market_to_github maybe_market_to_github(bounty, event_name, profile_pairs=None) Post a Github comment for the specified Bounty. Args: bounty (dashboard.models.Bounty): The Bounty to be marketed. event_name (str): The name of the event. profile_pairs (list of tuples): The list of username and profile page URL tuple pairs. Returns: bool: Whether or not the Github comment was posted successfully. amount_usdt_open_work amount_usdt_open_work() Get the amount in USDT of all current open and submitted work. Returns: float: The sum of all USDT values rounded to the nearest 2 decimals. open_bounties open_bounties() Get all current open and submitted work. Returns: QuerySet: The mainnet Bounty objects which are of open and submitted work statuses. maybe_market_tip_to_github maybe_market_tip_to_github(tip) Post a Github comment for the specified Tip. Args: tip (dashboard.models.Tip): The Tip to be marketed. Returns: bool: Whether or not the Github comment was posted successfully. append_snooze_copy append_snooze_copy(bounty) Build the snooze copy for the associated Bounty. Args: bounty (dashboard.Bounty): The Bounty to create snooze copy for. Returns: str: The snooze copy for the provided bounty.","title":"Notifications"},{"location":"dashboard/router/","text":"dashboard.router Define dashboard specific DRF API routes. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . BountyFulfillmentSerializer BountyFulfillmentSerializer(self, instance=None, data=<class 'rest_framework.fields.empty'>, **kwargs) Handle serializing the BountyFulfillment object. Meta BountyFulfillmentSerializer.Meta(self, /, *args, **kwargs) Define the bounty fulfillment serializer metadata. InterestSerializer InterestSerializer(self, instance=None, data=<class 'rest_framework.fields.empty'>, **kwargs) Handle serializing the Interest object. Meta InterestSerializer.Meta(self, /, *args, **kwargs) Define the Interest serializer metadata. ActivitySerializer ActivitySerializer(self, instance=None, data=<class 'rest_framework.fields.empty'>, **kwargs) Handle serializing the Activity object. Meta ActivitySerializer.Meta(self, /, *args, **kwargs) Define the activity serializer metadata. BountySerializer BountySerializer(self, instance=None, data=<class 'rest_framework.fields.empty'>, **kwargs) Handle serializing the Bounty object. Meta BountySerializer.Meta(self, /, *args, **kwargs) Define the bounty serializer metadata. create BountySerializer.create(self, validated_data) Handle creation of m2m relationships and other custom operations. update BountySerializer.update(self, validated_data) Handle updating of m2m relationships and other custom operations. BountyViewSet BountyViewSet(self, **kwargs) Handle the Bounty view behavior. filter_backends Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object. queryset Handle the manager queryset for Bounties. BountySerializer BountyViewSet.BountySerializer(self, instance=None, data=<class 'rest_framework.fields.empty'>, **kwargs) Handle serializing the Bounty object. get_queryset BountyViewSet.get_queryset(self) Get the queryset for Bounty. Returns: QuerySet: The Bounty queryset.","title":"API Router"},{"location":"dashboard/signals/","text":"dashboard.signals Handle dashboard related signals. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . m2m_changed_interested m2m_changed_interested(sender, instance, action, reverse, model, **kwargs) Handle changes to Bounty interests. changed_fulfillments changed_fulfillments(sender, instance, action, reverse, model, **kwargs) Handle changes to Bounty fulfillments.","title":"Signals"},{"location":"dashboard/templatetags/","text":"dashboard.templatetags.add_url_schema Define the add_url_schema template tag to allow cleaning up url in templates. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . add_url_schema add_url_schema(url) Clean the provided URL to include the scheme (http) if no scheme is present. Args: url (str): The URL to be cleaned. Usage: {{ url|clean_url }} Returns: str: The URL with the scheme attached.","title":"Template Tags"},{"location":"dashboard/tokens/","text":"dashboard.tokens Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ .","title":"Tokens"},{"location":"dashboard/utils/","text":"dashboard.utils Define Dashboard related utilities and miscellaneous logic. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . humanize_event_name humanize_event_name(name) Humanize an event name. Args: name (str): The event name Returns: str: The humanized representation. create_user_action create_user_action(user, action_type, request=None, metadata=None) Create a UserAction for the specified action type. Args: user (User): The User object. action_type (str): The type of action to record. request (Request): The request object. Defaults to: None. metadata (dict): Any accompanying metadata to be added. Defaults to: {}. Returns: bool: Whether or not the UserAction was created successfully. get_ipfs get_ipfs(host=None, port=5001) Establish a connection to IPFS. Args: host (str): The IPFS host to connect to. Defaults to environment variable: IPFS_HOST. port (int): The IPFS port to connect to. Defaults to environment variable: env IPFS_API_PORT. Raises: CommunicationError: The exception is raised when there is a communication error with IPFS. Returns: ipfsapi.client.Client: The IPFS connection client. get_web3 get_web3(network) Get a Web3 session for the provided network. Attributes: network (str): The network to establish a session with. Raises: UnsupportedNetworkException: The exception is raised if the method is passed an invalid network. Returns: web3.main.Web3: A web3 instance for the provided network. web3_process_bounty web3_process_bounty(bounty_data) Process web3 bounty data by creating new or updated Bounty objects. build_profile_pairs build_profile_pairs(bounty) Build the profile pairs list of tuples for ingestion by notifications. Args: bounty (dashboard.models.Bounty): The Bounty to build profile pairs for. Returns: list of tuples: The list of profile pair tuples. get_ordinal_repr get_ordinal_repr(num) Handle cardinal to ordinal representation of numeric values. Args: num (int): The integer to be converted from cardinal to ordinal numerals. Returns: str: The ordinal representation of the provided integer. record_user_action_on_interest record_user_action_on_interest(interest, event_name, last_heard_from_user_days) Record User actions and activity for the associated Interest. get_context get_context(ref_object=None, github_username='', user=None, confirm_time_minutes_target=4, confirm_time_slow=120, confirm_time_avg=15, confirm_time_fast=1, active='', title='', update=None) Get the context dictionary for use in view. clean_bounty_url clean_bounty_url(url) Clean the Bounty URL of unsavory characters. The primary utility of this method is to drop issuecomment blocks from Github issue URLs copy/pasted via comments. Args: url (str): The Bounty VC URL. TODO: * Deprecate this in favor of Django forms. Returns: str: The cleaned Bounty URL.","title":"Utilities"},{"location":"dashboard/views/","text":"dashboard.gas_views Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . dashboard.tip_views Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . send_tip send_tip(request) Handle the first stage of sending a tip. receive_tip_v3 receive_tip_v3(request, key, txid, network) Handle the receiving of a tip (the POST) Returns: TemplateResponse: the UI with the tip confirmed csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. send_tip_4 send_tip_4(request) Handle the fourth stage of sending a tip (the POST) Returns: JsonResponse: response with success state. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. tipee_address tipee_address(request, handle) returns the address, if any, that someone would like to be tipped directly at Returns: list of addresse send_tip_3 send_tip_3(request) Handle the third stage of sending a tip (the POST) Returns: JsonResponse: response with success state. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. send_tip_2 send_tip_2(request) Handle the second stage of sending a tip. TODO: * Convert this view-based logic to a django form. Returns: JsonResponse: If submitting tip, return response with success state. TemplateResponse: Render the submission form. dashboard.views Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . record_bounty_activity record_bounty_activity(bounty, user, event_name, interest=None) Creates Activity object. Args: bounty (dashboard.models.Bounty): Bounty user (string): User name event_name (string): Event name interest (dashboard.models.Interest): Interest Raises: None Returns: None gh_login gh_login(request) Attempt to redirect the user to Github for authentication. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. new_interest new_interest(request, bounty_id) Claim Work for a Bounty. :request method: POST Args: bounty_id (int): ID of the Bounty. Returns: dict: The success key with a boolean value and accompanying error. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. remove_interest remove_interest(request, bounty_id) Unclaim work from the Bounty. Can only be called by someone who has started work :request method: POST post_id (int): ID of the Bounty. Returns: dict: The success key with a boolean value and accompanying error. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. extend_expiration extend_expiration(request, bounty_id) Extend expiration of the Bounty. Can only be called by funder or staff of the bounty. :request method: POST post_id (int): ID of the Bounty. Returns: dict: The success key with a boolean value and accompanying error. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. uninterested uninterested(request, bounty_id, profile_id) Remove party from given bounty Can only be called by the bounty funder :request method: GET Args: bounty_id (int): ID of the Bounty profile_id (int): ID of the interested profile Params: slashed (str): if the user will be slashed or not Returns: dict: The success key with a boolean value and accompanying error. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. onboard onboard(request, flow) Handle displaying the first time user experience flow. dashboard dashboard(request) Handle displaying the dashboard. accept_bounty accept_bounty(request) Process the bounty. Args: pk (int): The primary key of the bounty to be accepted. Raises: Http404: The exception is raised if no associated Bounty is found. Returns: TemplateResponse: The accept bounty view. contribute contribute(request) Contribute to the bounty. Args: pk (int): The primary key of the bounty to be accepted. Raises: Http404: The exception is raised if no associated Bounty is found. Returns: TemplateResponse: The accept bounty view. invoice invoice(request) invoice view. Args: pk (int): The primary key of the bounty to be accepted. Raises: Http404: The exception is raised if no associated Bounty is found. Returns: TemplateResponse: The invoice view. social_contribution social_contribution(request) Social Contributuion to the bounty. Args: pk (int): The primary key of the bounty to be accepted. Raises: Http404: The exception is raised if no associated Bounty is found. Returns: TemplateResponse: The accept bounty view. payout_bounty payout_bounty(request) Payout the bounty. Args: pk (int): The primary key of the bounty to be accepted. Raises: Http404: The exception is raised if no associated Bounty is found. Returns: TemplateResponse: The accept bounty view. bulk_payout_bounty bulk_payout_bounty(request) Payout the bounty. Args: pk (int): The primary key of the bounty to be accepted. Raises: Http404: The exception is raised if no associated Bounty is found. Returns: TemplateResponse: The accept bounty view. fulfill_bounty fulfill_bounty(request) Fulfill a bounty. Parameters: pk (int): The primary key of the Bounty. standard_bounties_id (int): The standard bounties ID of the Bounty. network (str): The network of the Bounty. githubUsername (str): The Github Username of the referenced user. Raises: Http404: The exception is raised if no associated Bounty is found. Returns: TemplateResponse: The fulfill bounty view. increase_bounty increase_bounty(request) Increase a bounty as the funder. Args: pk (int): The primary key of the bounty to be increased. Raises: Http404: The exception is raised if no associated Bounty is found. Returns: TemplateResponse: The increase bounty view. cancel_bounty cancel_bounty(request) Kill an expired bounty. Args: pk (int): The primary key of the bounty to be cancelled. Raises: Http404: The exception is raised if no associated Bounty is found. Returns: TemplateResponse: The cancel bounty view. bounty_details bounty_details(request, ghuser='', ghrepo='', ghissue=0, stdbounties_id=None) Display the bounty details. Args: ghuser (str): The Github user. Defaults to an empty string. ghrepo (str): The Github repository. Defaults to an empty string. ghissue (int): The Github issue number. Defaults to: 0. Raises: Exception: The exception is raised for any exceptions in the main query block. Returns: django.template.response.TemplateResponse: The Bounty details template response. quickstart quickstart(request) Display quickstart guide. profile_helper profile_helper(handle, suppress_profile_hidden_exception=False, current_user=None) Define the profile helper. Args: handle (str): The profile handle. Raises: DoesNotExist: The exception is raised if a Profile isn't found matching the handle. Remediation is attempted by syncing the profile data. MultipleObjectsReturned: The exception is raised if multiple Profiles are found. The latest Profile will be returned. Returns: dashboard.models.Profile: The Profile associated with the provided handle. profile_keywords_helper profile_keywords_helper(handle) Define the profile keywords helper. Args: handle (str): The profile handle. profile_keywords profile_keywords(request, handle) Display profile keywords. Args: handle (str): The profile handle. profile profile(request, handle) Display profile details. Args: handle (str): The profile handle. Variables: context (dict): The template context to be used for template rendering. profile (dashboard.models.Profile): The Profile object to be used. status (int): The status code of the response. Returns: TemplateResponse: The profile templated view. get_quickstart_video get_quickstart_video(request) Show quickstart video. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. extend_issue_deadline extend_issue_deadline(request) Show quickstart video. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. sync_web3 sync_web3(request) Sync up web3 with the database. This function has a few different uses. It is typically called from the front end using the javascript sync_web3 function. The issueURL is passed in first, followed optionally by a bountydetails argument. Returns: JsonResponse: The JSON response following the web3 sync. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed. new_bounty new_bounty(request) Create a new bounty.","title":"Views"},{"location":"dataviz/admin/","text":"dataviz.admin Define the data visualization related administration layout. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . GeneralAdmin GeneralAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"Admin"},{"location":"dataviz/models/","text":"dataviz.models Define data visualization related models. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . DataPayload DataPayload(self, *args, **kwargs) Define the structure of an ExternalBounty. comments A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method DataPayload._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method DataPayload._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method DataPayload._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method DataPayload._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. key A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. payload A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. report A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed.","title":"Models"},{"location":"dataviz/views/","text":"dataviz.d3_views Define data visualization related D3 views. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . data_viz_helper_get_data_responses data_viz_helper_get_data_responses(request, visual_type) Handle visualization of the request response data based on type. Args: visual_type (str): The visualization type. TODO: * Reduce complexity of this method to pass McCabe complexity check. Returns: dict: The JSON representation of the requested visual type data. viz_spiral viz_spiral(request, key='email_open') Render a spiral graph visualization. Args: key (str): The key type to visualize. Returns: TemplateResponse: The populated spiral data visualization template. viz_chord viz_chord(request, key='bounties_paid') Render a chord graph visualization. Args: key (str): The key type to visualize. Returns: TemplateResponse: The populated chord data visualization template. viz_steamgraph viz_steamgraph(request, key='open') Render a steamgraph graph visualization. Args: key (str): The key type to visualize. Returns: TemplateResponse: The populated steamgraph data visualization template. viz_heatmap viz_heatmap(request, key='email_open', template='heatmap') Render a heatmap graph visualization. Args: key (str): The key type to visualize. Returns: JsonResponse: If data param provided, return a JSON representation of data to be graphed. TemplateResponse: If data param not provided, return the populated data visualization template. viz_index viz_index(request) Render the visualization index. Returns: TemplateResponse: The visualization index template response. viz_circles viz_circles(request, visual_type) Render a circle graph visualization. Args: visual_type (str): The visualization type. Returns: JsonResponse: If data param provided, return a JSON representation of data to be graphed. TemplateResponse: If data param not provided, return the populated data visualization template. data_viz_helper_merge_json_trees data_viz_helper_merge_json_trees(output) Handle merging the visualization data trees. Args: output (dict): The output data to be merged. Returns: dict: The merged data dictionary. data_viz_helper_get_json_output data_viz_helper_get_json_output(key, value, depth=0) Handle data visualization and build the JSON output. Args: key (str): The key to be formatted and parsed. value (float): The data value. depth (int): The depth of keys to parse. Defaults to: 0. Returns: dict: The JSON representation of the provided data. viz_sunburst viz_sunburst(request, visual_type, template='sunburst') Render a sunburst graph visualization. Args: visual_type (str): The visualization type. template (str): The template type to be used. Defaults to: sunburst. TODO: * Reduce the number of local variables in this method from 18 to 15. Returns: JsonResponse: If data param provided, return a JSON representation of data to be graphed. TemplateResponse: If data param not provided, return the populated data visualization template. viz_graph viz_graph(request, _type, template='graph') Render a graph visualization of the Gitcoin Network. TODO: * Reduce the number of local variables from 16 to 15. Returns: JsonResponse: If data param provided, return a JSON representation of data to be graphed. TemplateResponse: If data param not provided, return the populated data visualization template. viz_draggable viz_draggable(request, key='email_open') Render a draggable graph visualization. Args: key (str): The key type to visualize. Returns: TemplateResponse: The populated draggable data visualization template. viz_scatterplot_helper viz_scatterplot_helper(request, key='hourly_rate', template='dataviz/scatterplot.html', hide_usernames=False) Render a scatterplot visualization. Args: key (str): The key type to visualize. Returns: TemplateResponse: The populated scatterplot data visualization template. dataviz.views Define data visualization related administration views. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ .","title":"Views"},{"location":"economy/admin/","text":"economy.admin Define Economy related django administration sections. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . TokenAdmin TokenAdmin(self, model, admin_site) Define the GeneralAdmin administration layout. list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ConvRateAdmin ConvRateAdmin(self, model, admin_site) Handle displaying conversion rates in the django admin. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"Admin"},{"location":"economy/commands/","text":"economy.management.commands.get_prices Define the management command to pull new price data for tokens. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . etherdelta etherdelta() Handle pulling market data from Etherdelta. polo polo() Handle pulling market data from Poloneix. cryptocompare cryptocompare() Handle pulling market data from CryptoCompare. Updates ConversionRates only if data not available. Command Command(self, stdout=None, stderr=None, no_color=False) Define the management command to update currency conversion rates. help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. handle Command.handle(self, *args, **options) Get the latest currency rates. economy.management.commands.refresh_bounties Define the management command to refresh bounty data. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) Define the management command to refresh bounties. help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. add_arguments Command.add_arguments(self, parser) Add argument handling to the refresh command. handle Command.handle(self, *args, **options) Refresh all bounties. Attributes: all_bounties (QuerySet of Bounty): The queryset of all Bounties. fetch_remote (bool): Whether or not to fetch remote bounties. Defaults to: False unless user passes the remote option.","title":"Commands"},{"location":"economy/models/","text":"economy.models Define economy related models. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . get_time get_time() Get the local time. SuperModel SuperModel(self, *args, **kwargs) Define the base abstract model. created_on A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method SuperModel._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method SuperModel._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method SuperModel._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method SuperModel._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) modified_on A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. Meta SuperModel.Meta(self, /, *args, **kwargs) Define the model metadata. save SuperModel.save(self, *args, **kwargs) Override the SuperModel save to handle modified_on logic. to_standard_dict SuperModel.to_standard_dict(self, fields=None, exclude=None) Define the standard to dict representation of the object. Args: fields (list): The list of fields to include. If not provided, include all fields. If not provided, all fields are included. Defaults to: None. exclude (list): The list of fields to exclude. If not provided, no fields are excluded. Default to: None. Returns: dict: The dictionary representation of the object. ConversionRate ConversionRate(self, *args, **kwargs) Define the conversion rate model. from_amount A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. from_currency A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method ConversionRate._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method ConversionRate._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method ConversionRate._method(self, *, field=<django.db.models.fields.DateTimeField: timestamp>, is_next=True, **kwargs) _method ConversionRate._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method ConversionRate._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) _method ConversionRate._method(self, *, field=<django.db.models.fields.DateTimeField: timestamp>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. source A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. timestamp A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. to_amount A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. to_currency A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. reverse_conversion_rate reverse_conversion_rate(sender, instance, **kwargs) Handle the reverse conversion rate signal during post-save. Token Token(self, *args, **kwargs) Define the Token model. address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. approved A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. decimals A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method Token._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Token._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Token._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Token._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. metadata A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. network A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. priority A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. symbol A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed.","title":"Models"},{"location":"economy/utils/","text":"economy.utils Define utilities and generic logic for the economy application. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . TransactionException TransactionException(self, /, *args, **kwargs) Handle general transaction exceptions. ConversionRateNotFoundError ConversionRateNotFoundError(self, /, *args, **kwargs) Thrown if ConversionRate not found. convert_amount convert_amount(from_amount, from_currency, to_currency, timestamp=None) Convert the provided amount to another current. Args: from_amount (float): The amount to be converted. from_currency (str): The currency identifier to convert from. to_currency (str): The currency identifier to convert to. timestamp (datetime): First available conversion rate after timestamp. Latest if None. Returns: float: The amount in to_currency. convert_token_to_usdt convert_token_to_usdt(from_token, timestamp=None) Convert the token to USDT. Args: from_token (str): The token identifier. Returns: float: The current rate of the provided token to USDT. etherscan_link etherscan_link(txid) Build the Etherscan URL. Args: txid (str): The transaction ID. Returns: str: The Etherscan TX URL.","title":"Utilities"},{"location":"enssubdomain/admin/","text":"enssubdomain.admin Define ENS Subdomain related django administration sections. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . ENSSubdomainAdmin ENSSubdomainAdmin(self, model, admin_site) Handle displaying conversion rates in the django admin. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object.","title":"Admin"},{"location":"enssubdomain/commands/","text":"enssubdomain.management.commands.reprocess_txs Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. enssubdomain.management.commands.warn_when_wallet_out_of_eth Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'.","title":"Commands"},{"location":"enssubdomain/models/","text":"enssubdomain.models Define economy related models. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . get_time get_time() Get the local time. ENSSubdomainRegistration ENSSubdomainRegistration(self, *args, **kwargs) Define the schema for storing ENS sub-domain registration info. comments A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. end_nonce A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. gas_cost_eth A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method ENSSubdomainRegistration._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method ENSSubdomainRegistration._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method ENSSubdomainRegistration._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method ENSSubdomainRegistration._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. pending A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. signed_msg A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. start_nonce A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. subdomain_wallet_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. txn_hash_1 A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. txn_hash_2 A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. txn_hash_3 A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. reprocess ENSSubdomainRegistration.reprocess(self, gas_multiplier=1.101, override_nonce=None) Reprocess the registration request.","title":"Models"},{"location":"enssubdomain/utils/","text":"enssubdomain.utils Define the ENS subdomain utilities and miscellaneous logic. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . convert_txn convert_txn(b_txn) Convert a b'' represented string to 0x. Args: b_txn (str): The txn to be converted. Example: \"b'7bce7e4bcd2fea4d26f3d254bb8cf52b9ee8dd7353b19bfbc86803c27d9bbf39'\" Usage: convert_txn(\"b'7bce7e4bcd2fea4d26f3d254bb8cf52b9ee8dd7353b19bfbc86803c27d9bbf39'\") \"0x7bce7e4bcd2fea4d26f3d254bb8cf52b9ee8dd7353b19bfbc86803c27d9bbf39\" Returns: str: The '0x0 representation of the txn.","title":"Utilities"},{"location":"enssubdomain/views/","text":"enssubdomain.views Define the ENS subdomain views. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . get_gas_price get_gas_price(gas_multiplier=1.101) Get the recommended minimum gas price. ens_subdomain ens_subdomain(request) Register ENS Subdomain. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed.","title":"Views"},{"location":"external_bounties/admin/","text":"external_bounties.admin Define the external bounty admin. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . ExternalBountyAdmin ExternalBountyAdmin(self, model, admin_site) Define the admin display of External Bounties. list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"Admin"},{"location":"external_bounties/commands/","text":"external_bounties.management.commands.sync_bounty0x Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. external_bounties.management.commands.sync_gitcoin Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. external_bounties.management.commands.sync_known_github_repos Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'.","title":"Commands"},{"location":"external_bounties/forms/","text":"external_bounties.forms Define external bounty related forms. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . ExternalBountyForm ExternalBountyForm(self, data=None, files=None, auto_id='id_%s', prefix=None, initial=None, error_class=<class 'django.forms.utils.ErrorList'>, label_suffix=None, empty_permitted=False, instance=None, use_required_attribute=None, renderer=None) Define the External Bounty form handling. base_fields Dictionary that remembers insertion order declared_fields Dictionary that remembers insertion order Meta ExternalBountyForm.Meta(self, /, *args, **kwargs) Define the ExternalBounty form metadata.","title":"Forms"},{"location":"external_bounties/models/","text":"external_bounties.models Define external bounty related models. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . ExternalBounty ExternalBounty(self, *args, **kwargs) Define the structure of an ExternalBounty. action_url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. active A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. amount A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. amount_denomination A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. avatar Return the github avatar or default to a specific avatar image. description A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fiat_price Return the fiat price. _method ExternalBounty._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method ExternalBounty._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) github_avatar_url Return the local avatar URL. github_handle A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. github_url Return the Github repository URL. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. idx_fiat_price A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. last_sync_time A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. payout_str A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. source_project A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. tags A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. title A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. url Return the URL associated with the external bounty.","title":"Models"},{"location":"external_bounties/router/","text":"external_bounties.router Define dashboard specific DRF API routes. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . ExternalBountySerializer ExternalBountySerializer(self, instance=None, data=<class 'rest_framework.fields.empty'>, **kwargs) Handle serializing the ExternalBounty object. Meta ExternalBountySerializer.Meta(self, /, *args, **kwargs) Define the external bounty serializer metadata. ExternalBountyViewSet ExternalBountyViewSet(self, **kwargs) Handle the Bounty view behavior. filter_backends Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object. queryset Represent a lazy database lookup for a set of objects. ExternalBountySerializer ExternalBountyViewSet.ExternalBountySerializer(self, instance=None, data=<class 'rest_framework.fields.empty'>, **kwargs) Handle serializing the ExternalBounty object.","title":"Router"},{"location":"external_bounties/views/","text":"external_bounties.views Define external bounty related views. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . external_bounties_index external_bounties_index(request) Handle External Bounties index page. Returns: django.TemplateResponse: The external bounty index view. external_bounties_new external_bounties_new(request) Create a new external bounty. Returns: django.TemplateResponse: The new external bounty form or submission status. external_bounties_show external_bounties_show(request, issuenum, slug) Handle Dummy External Bounties show page. Args: issuenum (int): The Github issue number. slug (str): The external bounty slug represenation. Returns: django.TemplateResponse: The external bounty details view.","title":"Views"},{"location":"faucet/admin/","text":"faucet.admin Define admin related functionality for faucet. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . GeneralAdmin GeneralAdmin(self, model, admin_site) Define the Faucet specific admin handling. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. FaucetRequestAdmin FaucetRequestAdmin(self, model, admin_site) Setup the FaucetRequest admin results display. list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. get_queryset FaucetRequestAdmin.get_queryset(self, request) Override the get_queryset method to include FK lookups. get_profile_email FaucetRequestAdmin.get_profile_email(self, obj) Get the profile email address. get_profile_username FaucetRequestAdmin.get_profile_username(self, obj) Get the profile username. link FaucetRequestAdmin.link(self, instance) Handle faucet request specific links. Args: instance (FaucetRequest): The faucet request to build a link for. Returns: str: The HTML element for the faucet request link.","title":"Admin"},{"location":"faucet/models/","text":"faucet.models Define faucet related models. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . FaucetRequestManager FaucetRequestManager(self) Define the Faucet Request query manager. user FaucetRequestManager.user(self, profile) Fetch the FaucetRequests matching the provided profile. Args: profile (str): The Github username. Returns: QuerySet: The filtered FaucetRequest results. FaucetRequest FaucetRequest(self, *args, **kwargs) Define the Faucet Request model. address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. amount A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. comment A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. comment_admin A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfill_date A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. fulfilled A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method FaucetRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method FaucetRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method FaucetRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method FaucetRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) github_meta A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. github_username A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. rejected A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed.","title":"Models"},{"location":"faucet/views/","text":"faucet.views Define faucet views. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . save_faucet save_faucet(request) Handle saving faucet requests. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed.","title":"Views"},{"location":"gas/admin/","text":"gas.admin GeneralAdmin GeneralAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"Admin"},{"location":"gas/models/","text":"gas.models Define the Gas models. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . GasProfile GasProfile(self, *args, **kwargs) Define the Gas Profile data model. gas_price A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method GasProfile._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method GasProfile._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method GasProfile._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method GasProfile._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. mean_time_to_confirm_blocks A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. mean_time_to_confirm_minutes A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. GasGuzzler GasGuzzler(self, *args, **kwargs) Define the Gas Guzzler data model. address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. gas_used A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method GasGuzzler._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method GasGuzzler._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method GasGuzzler._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method GasGuzzler._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) ID A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. pct_total A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. GasAdvisory GasAdvisory(self, *args, **kwargs) Define the Gas Advisory data model. active A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. active_until A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. body A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method GasAdvisory._method(self, *, field=<django.db.models.fields.DateTimeField: active_until>, is_next=True, **kwargs) _method GasAdvisory._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method GasAdvisory._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method GasAdvisory._method(self, *, field=<django.db.models.fields.DateTimeField: active_until>, is_next=False, **kwargs) _method GasAdvisory._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method GasAdvisory._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed.","title":"Models"},{"location":"gas/utils/","text":"gas.utils","title":"Utilities"},{"location":"git/utils/","text":"git.utils Handle miscellaneous logic and utilities. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . github_connect github_connect(token=None) Authenticate the GH wrapper with Github. Args: token (str): The Github token to authenticate with. Defaults to: None. build_auth_dict build_auth_dict(oauth_token) Collect authentication details. Args: oauth_token (str): The Github OAuth token. Returns: dict: An authentication dictionary. check_github check_github(profile) Check whether or not the provided username is present in the payload as active user. Args: profile (str): The profile username to be validated. Returns: dict: A dictionary containing status and user data. is_github_token_valid is_github_token_valid(oauth_token=None, last_validated=None) Check whether or not a Github OAuth token is valid. Args: access_token (str): The Github OAuth token. Returns: bool: Whether or not the provided OAuth token is valid. revoke_token revoke_token(oauth_token) Revoke the specified token. reset_token reset_token(oauth_token) Reset the provided token. Args: access_token (str): The Github OAuth token. Returns: str: The new Github OAuth token. get_auth_url get_auth_url(redirect_uri='/') Build the Github authorization URL. Args: redirect_uri (str): The redirect URI to be used during authentication. Attributes: github_callback (str): The local path to the Github callback view. redirect_params (dict): The redirect paramaters to URL encode. params (dict): The URL parameters to encode. auth_url (str): The URL encoded Github authentication parameters. Returns: str: The Github authentication URL. get_github_user_token get_github_user_token(code, **kwargs) Get the Github authorization token. get_github_user_data get_github_user_data(oauth_token) Get the user's github profile information. Args: oauth_token (str): The Github OAuth2 token to use for authentication. Returns: requests.Response: The Github user response. get_github_primary_email get_github_primary_email(oauth_token) Get the primary email address associated with the github profile. Args: oauth_token (str): The Github OAuth2 token to use for authentication. Returns: str: The user's primary github email address. get_github_event_emails get_github_event_emails(oauth_token, username) Get all email addresses associated with the github profile. Args: oauth_token (str): The Github OAuth2 token to use for authentication. Returns: list of str: All of the user's associated email from github. get_github_emails get_github_emails(oauth_token) Get all email addresses associated with the github profile. Args: oauth_token (str): The Github OAuth2 token to use for authentication. Returns: list of str: All of the user's associated email from git. search search(query) Search for a user on github. Args: q (str): The query text to match. Returns: request.Response: The github search response. get_issue_comments get_issue_comments(owner, repo, issue=None, comment_id=None) Get the comments from issues on a respository. PLEASE NOTE CURRENT LIMITATION OF 100 COMMENTS. Args: owner (str): Owner of the repo repo (str): Name of the repo issue (int): Issue number (optional) Returns: requests.Response: The GitHub comments response. get_issues get_issues(owner, repo, page=1, state='open') Get the open issues on a respository. get_issue_timeline_events get_issue_timeline_events(owner, repo, issue, page=1) Get the timeline events for a given issue. PLEASE NOTE CURRENT LIMITATION OF 100 EVENTS. PLEASE NOTE GITHUB API FOR THIS IS SUBJECT TO CHANGE. (See https://developer.github.com/changes/2016-05-23-timeline-preview-api/ for more info.) Args: owner (str): Owner of the repo repo (str): Name of the repo issue (int): Issue number Returns: requests.Response: The GitHub timeline response. get_user get_user(user, sub_path='') Get the github user details. get_notifications get_notifications() Get the github notifications. post_issue_comment post_issue_comment(owner, repo, issue_num, comment) Post a comment on an issue. patch_issue_comment patch_issue_comment(comment_id, owner, repo, comment) Update a comment on an issue via patch. delete_issue_comment delete_issue_comment(comment_id, owner, repo) Remove a comment on an issue via delete. post_issue_comment_reaction post_issue_comment_reaction(owner, repo, comment_id, content) React to an issue comment. get_url_dict get_url_dict(issue_url) Get the URL dictionary with specific data we care about. Args: issue_url (str): The Github issue URL. Raises: IndexError: The exception is raised if accessing a necessary index fails. Returns: dict: A mapping of details for the specified issue URL. repo_url repo_url(issue_url) Build the repository URL. Args: issue_url (str): The Github issue URL. Returns: str: The repository URL. org_name org_name(issue_url) Get the organization name from an issue URL. Args: issue_url (str): The Github issue URL. Returns: str: The Github organization name. repo_name repo_name(issue_url) Get the repo name from an issue URL. Args: issue_url (str): The Github issue URL. Returns: str: The Github repo name. issue_number issue_number(issue_url) Get the issue_number from an issue URL. Args: issue_url (str): The Github issue URL. Returns: str: The Github issue_number","title":"Utilities"},{"location":"gitcoinbot/actions/","text":"gitcoinbot.actions Define the Gitcoin Bot action methods for interacting with the Github API as a Github App. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Bound Bound(self, *args) Validate every bound before call the annotated function. amount_greater_than_zero amount_greater_than_zero(*args, **kwargs) Validate if the specified amount is not negative and greater than zero. no_active_bounty no_active_bounty(owner, repo, issue_id) Instructions to create a bounty. parse_comment_currency parse_comment_currency(comment_text, fallback_currency='ETH') Get the first token defined in comment_text. start_work_text start_work_text(owner, repo, issue_id) Instructions to start work on current bounty. submit_work_text submit_work_text(owner, repo, issue_id) Return the instruction to submit the work associated to the bounty. submit_work_or_new_bounty_text submit_work_or_new_bounty_text(owner, repo, issue_id) Submit work if the bounty exists else show instructions to create one. get_text_from_query_responses get_text_from_query_responses(comment_text, sender) Based on comment_text an assigned response is returned.","title":"Actions"},{"location":"gitcoinbot/admin/","text":"gitcoinbot.admin Define Gitcoin Bot specific models. GitcoinBotResponsesAdmin GitcoinBotResponsesAdmin(self, model, admin_site) Define the Gitcoin Bot response admin model for displaying bot request data. fields Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object. list_display Built-in immutable sequence. If no argument is given, the constructor returns an empty tuple. If iterable is specified the tuple is initialized from iterable's items. If the argument is a tuple, the return value is the same object.","title":"Admin"},{"location":"gitcoinbot/models/","text":"gitcoinbot.models Define Gitcoin Bot specific models. GitcoinBotResponses GitcoinBotResponses(self, *args, **kwargs) Define the Gitcoin Bot response model for recording bot request data. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. request A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. response A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed.","title":"Models"},{"location":"gitcoinbot/views/","text":"gitcoinbot.views Define the Gitcoin Bot views. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . payload payload(request) Handle the Github bot payload. Parse request.body bytes from github into json, retrieve relevant info and respond with appropriate message from gitcoinbot actions. Returns: HttpResponse: The confirmation of Github payload acceptance. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed.","title":"Views"},{"location":"linkshortener/admin/","text":"linkshortener.admin LinkShortenerAdmin LinkShortenerAdmin(self, model, admin_site) list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"Admin"},{"location":"linkshortener/commands/","text":"linkshortener.management.commands.create_shortlinks Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'.","title":"Commands"},{"location":"linkshortener/models/","text":"linkshortener.models Link Link(self, *args, **kwargs) Link(id, created_on, modified_on, comments, url, shortcode, uses) comments A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method Link._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Link._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Link._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Link._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. shortcode A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. url A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. uses A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed.","title":"Models"},{"location":"linkshortener/views/","text":"linkshortener.views","title":"Views"},{"location":"marketing/admin/","text":"marketing.admin Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . GeneralAdmin GeneralAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. EmailEventAdmin EmailEventAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. GithubEventAdmin GithubEventAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. SlackPresenceAdmin SlackPresenceAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. MatchAdmin MatchAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. AlumniAdmin AlumniAdmin(self, model, admin_site) Define the Alumni admin layout. list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. readonly_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. get_queryset AlumniAdmin.get_queryset(self, request) Override the get_queryset method to include FK lookups. get_profile_email AlumniAdmin.get_profile_email(self, obj) Get the profile email address. get_profile_username AlumniAdmin.get_profile_username(self, obj) Get the profile username. EmailSubscriberAdmin EmailSubscriberAdmin(self, model, admin_site) list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. raw_id_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. SlackUserAdmin SlackUserAdmin(self, model, admin_site) list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. search_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"Admin"},{"location":"marketing/commands/","text":"marketing.management.commands.assemble_leaderboards Define the management command to assemble leaderboard rankings. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . default_ranks default_ranks() Generate a dictionary of nested dictionaries defining default ranks. Returns: dict: A nested dictionary mapping of all default ranks with empty dicts. Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.backfill_analytics Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.bounty_feedback_email Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.expiration_start_work Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.expiration_tip Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.expiration Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.funder_stale_email Define the stale funder email management command for background execution. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) Define the stale funder management command class. help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. add_arguments Command.add_arguments(self, parser) Define the added arguments to handle for the management command. handle Command.handle(self, *args, **options) Handle the stale funder management command logic. marketing.management.commands.gdpr_reconsent_eu Define the GDPR reconsent command for EU users. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.gdpr_update_email Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.ingest_slack_users Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,either version 3 of the License,or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not,see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.new_bounties_email Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.pending_start_work_actions Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.process_email_events Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.pull_github Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.pull_stats Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation,either version 3 of the License,or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not,see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.remarket_bounties Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.roundup Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.send_quarterly_stats Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.sync_github Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.sync_keywords Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.sync_mail Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.sync_slack Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'. marketing.management.commands.test_email Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'.","title":"Commands"},{"location":"marketing/google_analytics/","text":"marketing.google_analytics Hello Analytics Reporting API V4. initialize_analyticsreporting initialize_analyticsreporting() Initialize an Analytics Reporting API V4 service object. Returns: An authorized Analytics Reporting API V4 service object. get_report get_report(analytics, view_id) Query the Analytics Reporting API V4. Args: analytics: An authorized Analytics Reporting API V4 service object. Returns: The Analytics Reporting API V4 response. get_response get_response(response) Parses and prints the Analytics Reporting API V4 response. Args: response: An Analytics Reporting API V4 response. run run(view_id) Run analytics reporting against the view. Args: view_id: ID of the view. Returns: response: An Analytics Reporting API V4 response.","title":"Google Analytics"},{"location":"marketing/mails/","text":"marketing.mails Define the standard marketing email logic. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . send_mail send_mail(from_email, _to_email, subject, body, html=False, from_name='Gitcoin.co', cc_emails=None, categories=None) Send email via SendGrid. new_external_bounty new_external_bounty() Send a new external bounty email notification. setup_lang setup_lang(to_email) Activate the User's language preferences based on their email address. Args: to_email (str): The email address to lookup language preferences for.","title":"Mails"},{"location":"marketing/models/","text":"marketing.models Define the marketing models and related logic. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Alumni Alumni(self, *args, **kwargs) Alumni(id, created_on, modified_on, profile, organization, comments, public) comments A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method Alumni._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Alumni._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Alumni._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Alumni._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. organization A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. public A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. EmailSubscriber EmailSubscriber(self, *args, **kwargs) EmailSubscriber(id, created_on, modified_on, email, source, active, newsletter, preferences, metadata, priv, github, keywords, profile, form_submission_records) active A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. form_submission_records A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method EmailSubscriber._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method EmailSubscriber._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method EmailSubscriber._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method EmailSubscriber._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) github A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. keywords A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. metadata A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. newsletter A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. preferences A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. priv A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. source A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. Stat Stat(self, *args, **kwargs) Stat(id, created_on, modified_on, key, val) _method Stat._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Stat._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Stat._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Stat._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. key A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. val A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. LeaderboardRankQuerySet LeaderboardRankQuerySet(self, model=None, query=None, using=None, hints=None) Handle the manager queryset for Leaderboard Ranks. active LeaderboardRankQuerySet.active(self) Filter results to only active LeaderboardRank objects. LeaderboardRank LeaderboardRank(self, *args, **kwargs) Define the Leaderboard Rank model. active A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. amount A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. count A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method LeaderboardRank._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method LeaderboardRank._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method LeaderboardRank._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method LeaderboardRank._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) github_username A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. leaderboard A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. rank A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. Match Match(self, *args, **kwargs) Match(id, created_on, modified_on, email, bounty, direction, github_username) bounty Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. bounty_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. direction A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method Match._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Match._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Match._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Match._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) github_username A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. Keyword Keyword(self, *args, **kwargs) Keyword(id, created_on, modified_on, keyword) _method Keyword._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method Keyword._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method Keyword._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method Keyword._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. keyword A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. SlackUser SlackUser(self, *args, **kwargs) SlackUser(id, created_on, modified_on, username, email, last_seen, last_unseen, profile, times_seen, times_unseen) email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method SlackUser._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method SlackUser._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method SlackUser._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method SlackUser._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. last_seen A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. last_unseen A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. presences Accessor to the related objects manager on the reverse side of a many-to-one relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Parent.children is a ReverseManyToOneDescriptor instance. Most of the implementation is delegated to a dynamically defined manager class built by create_forward_many_to_many_manager() defined below. profile A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. times_seen A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. times_unseen A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. username A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. SlackPresence SlackPresence(self, *args, **kwargs) SlackPresence(id, created_on, modified_on, slackuser, status) _method SlackPresence._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method SlackPresence._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method SlackPresence._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method SlackPresence._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. slackuser Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. slackuser_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. status A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. GithubEvent GithubEvent(self, *args, **kwargs) GithubEvent(id, created_on, modified_on, profile, what, repo, payload) _method GithubEvent._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method GithubEvent._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method GithubEvent._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method GithubEvent._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. payload A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile Accessor to the related object on the forward side of a many-to-one or one-to-one (via ForwardOneToOneDescriptor subclass) relation. In the example:: class Child(Model): parent = ForeignKey(Parent, related_name='children') Child.parent is a ForwardManyToOneDescriptor instance. profile_id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. repo A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. what A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. GithubOrgToTwitterHandleMapping GithubOrgToTwitterHandleMapping(self, *args, **kwargs) GithubOrgToTwitterHandleMapping(id, created_on, modified_on, github_orgname, twitter_handle) _method GithubOrgToTwitterHandleMapping._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method GithubOrgToTwitterHandleMapping._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method GithubOrgToTwitterHandleMapping._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method GithubOrgToTwitterHandleMapping._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) github_orgname A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. twitter_handle A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. EmailEvent EmailEvent(self, *args, **kwargs) EmailEvent(id, created_on, modified_on, email, event, category, ip_address) category A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. event A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method EmailEvent._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method EmailEvent._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method EmailEvent._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method EmailEvent._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. ip_address A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. AccountDeletionRequest AccountDeletionRequest(self, *args, **kwargs) AccountDeletionRequest(id, created_on, modified_on, handle, profile) _method AccountDeletionRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method AccountDeletionRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method AccountDeletionRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method AccountDeletionRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) handle A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. profile A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. EmailSupressionList EmailSupressionList(self, *args, **kwargs) EmailSupressionList(id, created_on, modified_on, email, metadata, comments) comments A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method EmailSupressionList._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method EmailSupressionList._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method EmailSupressionList._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method EmailSupressionList._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. metadata A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed.","title":"Models"},{"location":"marketing/stats/","text":"marketing.stats Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ .","title":"Stats"},{"location":"marketing/utils/","text":"marketing.utils Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . validate_slack_integration validate_slack_integration(token, channel, message=None, icon_url='') Validate the Slack token and channel combination by posting a message. Args: token (str): The Slack API token. channel (str): The Slack channel to send the message. message (str): The Slack message to be sent. Defaults to: The Gitcoin Slack integration is working fine. icon_url (str): The URL to the avatar to be used. Defaults to: the gitcoin helmet. Attributes: result (dict): The result dictionary defining success status and error message. error_messages (dict): The dictionary mapping of expected error result types. message (str): The response message to display to the user. sc (SlackClient): The slack client object. response (dict): The Slack response payload. error (str): The error code Raises: SlackClientError: The exception is raised for any Slack-specific error. Returns: str: The response message. validate_discord_integration validate_discord_integration(webhook_url, message=None, icon_url='') Validate the Discord webhook URL by posting a message. Args: webhook_url (str): The Discord webhook URL. message (str): The Discord message to be sent. Defaults to: The Gitcoin Discord integration is working fine. icon_url (str): The URL to the avatar to be used. Defaults to: the gitcoin helmet. Attributes: result (dict): The result dictionary defining success status and error message. message (str): The response message to display to the user. response (obj): The Discord response object - refer to python-requests API Raises: requests.exception.HTTPError: The exception is raised for any HTTP error. Returns: str: The response message. get_platform_wide_stats get_platform_wide_stats(since_last_n_days=90) Get platform wide stats for quarterly stats email. Args: since_last_n_days (int): The number of days from now to retrieve stats. Returns: dict: The platform statistics dictionary. func_name func_name() Determine the calling function's name. Returns: str: The parent method's name.","title":"Utilities"},{"location":"marketing/views/","text":"marketing.views Define the marketing views. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . matching_settings matching_settings(request) Handle viewing and updating EmailSubscriber matching settings. TODO: * Migrate this to a form and handle validation. * Migrate Keyword to taggit. * Maybe migrate keyword information to Profile instead of using ES? Returns: TemplateResponse: The populated matching template. email_settings email_settings(request, key) Display email settings. Args: key (str): The private key to lookup email subscriber data. TODO: * Remove all ES.priv_key lookups and use request.user only. * Remove settings_helper_get_auth usage. Returns: TemplateResponse: The email settings view populated with ES data. slack_settings slack_settings(request) Display and save user's slack settings. Returns: TemplateResponse: The user's slack settings template response. discord_settings discord_settings(request) Display and save user's Discord settings. Returns: TemplateResponse: The user's Discord settings template response. token_settings token_settings(request) Display and save user's token settings. Returns: TemplateResponse: The user's token settings template response. ens_settings ens_settings(request) Display and save user's ENS settings. Returns: TemplateResponse: The user's ENS settings template response. account_settings account_settings(request) Display and save user's Account settings. Returns: TemplateResponse: The user's Account settings template response. leaderboard leaderboard(request, key='') Display the leaderboard for top earning or paying profiles. Args: key (str): The leaderboard display type. Defaults to: quarterly_earners. Returns: TemplateResponse: The leaderboard template response.","title":"Views"},{"location":"marketing/webbhookviews/","text":"marketing.webhookviews process process(request) Process email webhook callback data. csrf_exempt bool(x) -> bool Returns True when the argument x is true, False otherwise. The builtins True and False are the only two instances of the class bool. The class bool is a subclass of the class int, and cannot be subclassed.","title":"Webhook Views"},{"location":"retail/commands/","text":"retail.management.commands.warm_cache Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . Command Command(self, stdout=None, stderr=None, no_color=False) help str(object='') -> str str(bytes_or_buffer[, encoding[, errors]]) -> str Create a new string object from the given object. If encoding or errors is specified, then the object must expose a data buffer that will be decoded using the given encoding and error handler. Otherwise, returns the result of object. str () (if defined) or repr(object). encoding defaults to sys.getdefaultencoding(). errors defaults to 'strict'.","title":"Commands"},{"location":"retail/emails/","text":"retail.emails Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . render_funder_stale render_funder_stale(github_username, days=30, time_as_str='about a month') Render the stale funder email template. Args: github_username (str): The Github username to be referenced in the email. days (int): The number of days back to reference. time_as_str (str): The human readable length of time to reference. Returns: str: The rendered response as a string. funder_stale funder_stale(request) Display the stale funder email template. Params: limit (int): The number of days to limit the scope of the email to. duration_copy (str): The copy to use for associated duration text. username (str): The Github username to reference in the email. Returns: HttpResponse: The HTML version of the templated HTTP response.","title":"Emails"},{"location":"retail/helpers/","text":"retail.helpers Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ .","title":"Helpers"},{"location":"retail/templatetags/","text":"retail.templatetags.is_in_list Define the is_in_list template tag to allow if in list checking in templates. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . is_in_list is_in_list(value, input_list) Determine whether or not the value is in the provided list. Args: value: Any value that could be a member of the provided list. input_list (list): A list of any primitive types to be checked. Usage: {% if ' '|is_in_list:'about,slack,home,help,mission' %} Returns: bool: Whether or not the value exists in the input_list. retail.templatetags.matches Define the is_in_list template tag to allow if in list checking in templates. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . matches matches(text, pattern) Determine whether or not the value matches regex pattern. Args: value: Any value. pattern : Regex pattern against which the text is matched. Usage: {% if ' '|matches:'^/explorer$' %} Returns: bool: Whether or not the value matches the pattern.","title":"Template Tags"},{"location":"retail/utils/","text":"retail.utils Define the Retail utility methods and general logic. Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . build_stat_results_helper build_stat_results_helper(keyword=None) Buidl the results page context. Args: keyword (str): The keyword to build statistic results.","title":"Utilities"},{"location":"retail/views/","text":"retail.views Copyright (C) 2018 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . how_it_works how_it_works(request, work_type) Show How it Works / Funder page. mission mission(request) Render the Mission response. vision vision(request) Render the Vision response. not_a_token not_a_token(request) Render the not_a_token response. results results(request, keyword=None) Render the Results response. activity activity(request) Render the Activity response.","title":"Views"},{"location":"tdi/admin/","text":"tdi.admin Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . GeneralAdmin GeneralAdmin(self, model, admin_site) ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. WhitepaperAccessRequestAdmin WhitepaperAccessRequestAdmin(self, model, admin_site) list_display Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. ordering Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified. readonly_fields Built-in mutable sequence. If no argument is given, the constructor creates a new empty list. The argument must be an iterable if specified.","title":"Admin"},{"location":"tdi/models/","text":"tdi.models Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ . AccessCodes AccessCodes(self, *args, **kwargs) AccessCodes(id, created_on, modified_on, invitecode, maxuses) _method AccessCodes._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method AccessCodes._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method AccessCodes._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method AccessCodes._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. invitecode A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. maxuses A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. WhitepaperAccess WhitepaperAccess(self, *args, **kwargs) WhitepaperAccess(id, created_on, modified_on, invitecode, email, ip) email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method WhitepaperAccess._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method WhitepaperAccess._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method WhitepaperAccess._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method WhitepaperAccess._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. invitecode A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. ip A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. WhitepaperAccessRequest WhitepaperAccessRequest(self, *args, **kwargs) WhitepaperAccessRequest(id, created_on, modified_on, comments, email, role, ip, processed) comments A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. email A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. _method WhitepaperAccessRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=True, **kwargs) _method WhitepaperAccessRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=True, **kwargs) _method WhitepaperAccessRequest._method(self, *, field=<django.db.models.fields.DateTimeField: created_on>, is_next=False, **kwargs) _method WhitepaperAccessRequest._method(self, *, field=<django.db.models.fields.DateTimeField: modified_on>, is_next=False, **kwargs) id A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. ip A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. processed A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed. role A wrapper for a deferred-loading field. When the value is read from this object the first time, the query is executed.","title":"Models"},{"location":"tdi/views/","text":"tdi.views Copyright (C) 2017 Gitcoin Core This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details. You should have received a copy of the GNU Affero General Public License along with this program. If not, see http://www.gnu.org/licenses/ .","title":"Views"}]}